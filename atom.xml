<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>昨日晴空</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.isk.ink/"/>
  <updated>2021-04-19T16:11:21.081Z</updated>
  <id>http://blog.isk.ink/</id>
  
  <author>
    <name>Asakiii</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于过去一个月的小总结</title>
    <link href="http://blog.isk.ink/2021/04/19/%E5%85%B3%E4%BA%8E%E8%BF%87%E5%8E%BB%E4%B8%80%E4%B8%AA%E6%9C%88%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.isk.ink/2021/04/19/%E5%85%B3%E4%BA%8E%E8%BF%87%E5%8E%BB%E4%B8%80%E4%B8%AA%E6%9C%88%E7%9A%84%E5%B0%8F%E6%80%BB%E7%BB%93/</id>
    <published>2021-04-19T15:16:06.000Z</published>
    <updated>2021-04-19T16:11:21.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>过去一个月多,没有更新博客,今天特意回来瞅瞅,原以为我的好友们一定更新了不少文章,结果都在摸鱼. 好家伙!  不过有位大佬的博客 又停了,可能是谈恋爱了.没时间维护,嗯,没错就是这样.</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="关于学习"><a href="#关于学习" class="headerlink" title="关于学习"></a>关于学习</h3><p>最近去整蓝桥杯算法竞赛去了,不过,我是真的菜,昨天考完,估计省三是没戏了,我莽了,而且白给了.不过不要紧,至少,我还是学到了东西的. 不过也失去了一些,但是问题不大. 忙忙碌碌一个月,也不是没有收获. 而且一个月内 ,没时间学自己感兴趣的东西就有点遗憾.</p><h2 id="关于爱情"><a href="#关于爱情" class="headerlink" title="关于爱情"></a>关于爱情</h2><p>我收到了我初中同桌送的一个手工玩偶,是她亲手做的,她一定是喜欢我(人生十大错觉),不得不说,那个小东西还挺别致,等有时间了,补一张照片,挂在我的小米双肩包上刚刚好. 希望爱情别像算法那么难,要不然我的人生就太过悲惨了,菜鸡和舔狗终将一无所有.    </p><p>我和她应该也算比较好的朋友,嗯…我单方面觉得,毕竟联系比较多(相对其他人来说),类似于友人以上,恋人未满的状态,这种情况,很难抉择,毕竟可能不表白没事,一表白就 :” 好家伙! 我把你当好朋友,你居然想泡我 “ 或者  “其实我也喜欢你很久了! 我们交往吧!”  第二种情况大概率不会发生,所以就错付了.</p><h2 id="关于折腾"><a href="#关于折腾" class="headerlink" title="关于折腾"></a>关于折腾</h2><p>最近在这个显卡价格起飞的时候,我组装了一台电脑,没错,我脑子坏掉了,然而我其实并不需要的,但是就是想捡垃圾.  配置 是 志强 x5645 ,x58丐板, RX 370显卡,8g三星内存条,前前后后大概一千左右,  这里就不得不说,我那颗牛逼的cup, 淘宝22块还包邮,是买主板的时候,咸鱼卖家送我的,用着还不错,至少 作为一个22块的cup它尽力了,万一用了一个星期,报废了,我还能拿来当挂坠,欸嘿,我真是个天才. </p><p> 22块,性价比超级高的好吗?</p><p>洋垃圾真香!</p><p>希望电脑没事,毕竟我花了200软妹币买了好的电源,希望不要爆炸,阿弥陀佛..</p><h2 id="关于老婆"><a href="#关于老婆" class="headerlink" title="关于老婆"></a>关于老婆</h2><p>最近成为了Akie秋绘的粉丝,就是网易云唱歌的那个,在B站直播呢,所以我就去关注了,见人就喊老婆,谁还不是个DD呢?  上一年B站付定金的手办到了,结了尾款,加藤惠老婆真可爱,放在书架上真不错,二次元宅男不好吗? 要什么三次元老婆,不过最近由于忙着上课和准备比赛,所以没有很多时间看动漫和打游戏,所以,现在比赛结束了,适当抽个时间出校门放松下.</p><p>感受下 人间的四月天 , 虽然快五月了,这不重要.</p><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>最近瘦了不少,脸上的痘痘也没了不少,发际线又高了,依旧是单身,编程还是那么菜,不过买了个小米显示器挂灯,这让最近在电脑前写字舒服了不少.</p><p>爱情依旧没来,</p><p>人生还要继续,</p><p>哪怕我想成为舔狗,</p><p>都没人让我舔,</p><p>没有目标,没有动力,</p><p>我果然是废物.</p><p>感觉怎么不对,原来十二点十分了,网易云综合征犯了,不能写了. 故事不长.也不难讲(bushi)</p><p>下次想起来接着写…..</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;过去一个月多,没有更新博客,今天特意回来瞅瞅,原以为我的好友们一定更新了不少文章,结果都在摸鱼. 好家伙!  不过有位大佬的博客 又停了,可
      
    
    </summary>
    
    
    
      <category term="总结" scheme="http://blog.isk.ink/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Linux下使用Clash翻墙</title>
    <link href="http://blog.isk.ink/2021/03/20/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8Clash%E7%BF%BB%E5%A2%99/"/>
    <id>http://blog.isk.ink/2021/03/20/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8Clash%E7%BF%BB%E5%A2%99/</id>
    <published>2021-03-20T15:45:44.000Z</published>
    <updated>2021-03-20T17:19:43.511Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于最近在Ubuntu下编程,但是要用到Google搜索,毕竟我是面向浏览器编程,所以解决问题全都要Google,而且进入github也需要翻墙.</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先 我所使用的是clash小猫咪,个人觉得这个软件比较好用,虽然英文版开始有点不熟悉.</p><ol><li><p>执行 <code>cd &amp;&amp; mkdir clash</code> 在用户目录下创建 clash 文件夹。</p><p>下载适合的 Clash 二进制文件并解压重命名为 <code>clash</code></p><p>一般个人的64位电脑下载 clash-linux-amd64.tar.gz 即可。</p><p>下载clash  <a href="https://github.com/Dreamacro/clash/releases![image-20210321004350458](https://image.isk.ink///image/20210321004357.png)">https://github.com/Dreamacro/clash/releases![image-20210321004350458](https://image.isk.ink///image/20210321004357.png)</a></p></li><li><p>解压并运行它代码如下</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo gunzip clash-linux-arm64-v1.4.2.gz   </span><br><span class="line">mv clash-linux-arm64-v1.4.2 clash</span><br><span class="line">chmod +x clash</span><br></pre></td></tr></table></figure><p>对以上代码解释:</p><p>​                第一行: 解压gz文件</p><p>​                第二行: 给文件改名为clash,文件名太长很麻烦</p><p>​                第三行: 给文件权限</p><ol start="3"><li>在终端 <code>cd</code> 到 Clash 二进制文件所在的目录，执行 <code>wget -O config.yml *******************************?clash=1&amp;log-level=info</code> 下载 Clash 配置文件(上面*处是商机给你的链接)<img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210321005846.png" alt="image-20210321005846119"></li></ol><p>​    此时会在clash文件下生成config.yml文件,这是配置文件</p><ol start="4"><li><p>在管理员权限下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;clash -d .</span><br></pre></td></tr></table></figure><p>此时出现<img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210321010135.png" alt="image-20210321010135107"></p></li><li><p>接着使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm config.yaml</span><br></pre></td></tr></table></figure><p>即删除它自动生成的config.yaml配置文件</p><p>再把原来商家给你下载的config.yml文件改名为config.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv config.yml config.yaml</span><br></pre></td></tr></table></figure><p>此时只有三个文件,即clash   和config.yaml 和Country.mmdb</p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210321010534.png" alt="image-20210321010534845"></p></li><li><p>接着再在管理员权限下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;clash -d .</span><br></pre></td></tr></table></figure></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210321010731.png" alt="image-20210321010731527"></p><p>如果没有警告那就成功了一半</p><ol start="7"><li><p>在系统设置里面设置网络代理,改为手动 改成下图所演示,一点不差</p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210321010819.png" alt="img"></p></li><li><p>打开浏览器,输入clash.razord.top</p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210321011042.png" alt="image-20210321011042174"></p><p>在这里可以测速,和修改节点代理.</p><ol start="9"><li>好了,登录谷歌试试吧</li><li><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210321011234.png" alt="image-20210321011234337"></li></ol></li></ol><p>如果不想代理就把网络代理设置为”已禁用”.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于最近在Ubuntu下编程,但是要用到Google搜索,毕竟我是面向浏览器编程,所以解决问题全都要Google,而且进入github也需要
      
    
    </summary>
    
    
      <category term="Linux clash" scheme="http://blog.isk.ink/categories/Linux-clash/"/>
    
    
      <category term="Linxu clash" scheme="http://blog.isk.ink/tags/Linxu-clash/"/>
    
  </entry>
  
  <entry>
    <title>无界面启动虚拟机通过VScode远程连接</title>
    <link href="http://blog.isk.ink/2021/02/01/%E6%97%A0%E7%95%8C%E9%9D%A2%E5%90%AF%E5%8A%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%80%9A%E8%BF%87VScode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    <id>http://blog.isk.ink/2021/02/01/%E6%97%A0%E7%95%8C%E9%9D%A2%E5%90%AF%E5%8A%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%80%9A%E8%BF%87VScode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</id>
    <published>2021-02-01T02:01:48.000Z</published>
    <updated>2021-02-04T03:15:46.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前几天突然闲的无聊,看了下自己装的Ubuntu虚拟机,觉得把所有开发环境丢进去,这样无论什么编程语言都能在虚拟机上运行,通过远程连接虚拟机,一个vscode就可以写各种代码,感觉十分方便啊,因为要开虚拟机所以尽量把电脑的负载降到最小,所以选择无界面启动,编程时都是在win10上写代码.也不需要Ubuntu的图形界面.</p><h2 id="无界面启动VMware中的Ubuntu"><a href="#无界面启动VMware中的Ubuntu" class="headerlink" title="无界面启动VMware中的Ubuntu"></a>无界面启动VMware中的Ubuntu</h2><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210201100806.png" alt="image-20210201100759409"></p><ul><li>找到上图所示的vmrun.exe所在位置,通过cmd打开</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210201101009.png" alt="image-20210201101009371"></p><ul><li>再找到你要无界面开启的虚拟机,比如我的Ubuntu 64位.vmx</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210201101105.png" alt="image-20210201101105236"></p><p>在上上图所示的有vmrun的目录前,</p><ul><li>通过命令<code>vmrun -T ws start &quot;E:\VM_2\Ubuntu 64位 .vmx&quot; nogui</code></li></ul><p>无界面启动Ubuntu 64位.vmx,如何判断启动成功呢?输入<code>vmrun  list</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210201101410.png" alt="image-20210201101410229"></p><p>可以看到,启动的虚拟机数量为1,并列出启动的虚拟机名称</p><p>同样的,关机为<code>vmrun stop &quot;E:\VM_2\Ubuntu 64位 .vmx&quot; hard</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20210201101615.png" alt="image-20210201101615730"></p><h3 id="脚本启动"><a href="#脚本启动" class="headerlink" title="脚本启动"></a>脚本启动</h3><p>那么每次启动虚拟机都这么麻烦,有没有快的方法呢?</p><p>当然.可以写个脚本呀</p><p>附上我的代码</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line"></span><br><span class="line">::<span class="built_in">start</span> vmware </span><br><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> s:<span class="built_in">start</span> vmware p:stop vmware</span><br><span class="line">@<span class="built_in">set</span> /p select=shuru:</span><br><span class="line">@<span class="keyword">if</span> &quot;<span class="variable">%select%</span>&quot; == &quot;s&quot; <span class="keyword">goto</span> <span class="built_in">start</span></span><br><span class="line">@<span class="keyword">if</span> &quot;<span class="variable">%select%</span>&quot; == &quot;p&quot; <span class="keyword">goto</span> stop</span><br><span class="line"></span><br><span class="line">:stop</span><br><span class="line"><span class="function">    E: </span></span><br><span class="line"><span class="function">    <span class="title">cd</span> <span class="title">VM_1</span></span></span><br><span class="line"><span class="function">    <span class="title">vmrun</span> <span class="title">stop</span> &quot;<span class="title">E</span>:\<span class="title">VM_2</span>\<span class="title">Ubuntu</span> 64位 .<span class="title">vmx</span>&quot; <span class="title">hard</span></span></span><br><span class="line"><span class="function">    @<span class="title">echo</span> <span class="title">stop</span> <span class="title">succeed</span>!</span></span><br><span class="line"><span class="function">    <span class="title">pause</span></span></span><br><span class="line"><span class="function">    <span class="title">exit</span></span></span><br><span class="line"><span class="function">:<span class="title">start</span></span></span><br><span class="line"><span class="function">    <span class="title">E</span>: </span></span><br><span class="line"><span class="function">    <span class="title">cd</span> <span class="title">VM_1</span></span></span><br><span class="line"><span class="function">    <span class="title">vmrun</span> <span class="title">list</span></span></span><br><span class="line"><span class="function">    <span class="title">vmrun</span> -<span class="title">T</span> <span class="title">ws</span> <span class="title">start</span> &quot;<span class="title">E</span>:\<span class="title">VM_2</span>\<span class="title">Ubuntu</span> 64位 .<span class="title">vmx</span>&quot; <span class="title">nogui</span></span></span><br><span class="line"><span class="function">    <span class="title">tasklist</span>|<span class="title">findstr</span> <span class="title">vmware</span></span></span><br><span class="line"><span class="function">    @<span class="title">echo</span> <span class="title">start</span> <span class="title">succeed</span>!</span></span><br><span class="line"><span class="function">    <span class="title">pause</span></span></span><br><span class="line"><span class="function">    <span class="title">exit</span></span></span><br></pre></td></tr></table></figure><p>对以上代码的解释,</p><ul><li><p>chcp 65001  是防止中文乱码,毕竟我有个”64位”,会出现乱码,以防万一</p></li><li><p>s:start vmware p:stop vmware   输入s,执行start后的所有命令,包括从C盘进入E盘.进入文件夹VM_1,输入p关闭虚拟机,只是将上面的许多DOS命令集合到一起运行.</p></li></ul><p>使用方法:</p><ul><li>在桌面上新建文件夹,改为bat后缀,把以上内容复制上去,自行修改内容,文件地址等.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前几天突然闲的无聊,看了下自己装的Ubuntu虚拟机,觉得把所有开发环境丢进去,这样无论什么编程语言都能在虚拟机上运行,通过远程连接虚拟机,
      
    
    </summary>
    
    
    
      <category term="vscode Linux" scheme="http://blog.isk.ink/tags/vscode-Linux/"/>
    
  </entry>
  
  <entry>
    <title>Vim备忘录</title>
    <link href="http://blog.isk.ink/2021/01/12/Vim%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://blog.isk.ink/2021/01/12/Vim%E5%A4%87%E5%BF%98%E5%BD%95/</id>
    <published>2021-01-12T01:35:28.000Z</published>
    <updated>2021-02-04T03:13:56.393Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vim备忘单"><a href="#Vim备忘单" class="headerlink" title="Vim备忘单"></a>Vim备忘单</h1><h2 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h2><ul><li><strong>:h[elp]</strong> <strong>关键字</strong> - 打开关键字帮助</li><li><strong>:sav[eas]</strong> <strong>文件名</strong> - 另存为</li><li><strong>:clo[se]</strong> - 关闭当前窗口</li><li><strong>:ter[minal]</strong> -打开终端窗口</li><li><strong>K</strong> - 打开光标所在单词的man页面</li></ul><p><strong>提示**</strong>vimtutor**在终端上运行以学习第一个Vim命令。</p><h2 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h2><ul><li><strong>h</strong> - 左移光标</li><li><strong>j</strong> - 下移光标</li><li><strong>k</strong> - 上移光标</li><li><strong>l</strong> - 右移光标</li><li><strong>H</strong> - 移动到当前页面顶部</li><li><strong>M</strong> - 移动到当前页面中间</li><li><strong>L</strong> - 移动到当前页面底部</li><li><strong>w</strong> - 移动到下个单词开头</li><li><strong>W</strong> - 移动到下个单词开头(单词含标点)</li><li><strong>e</strong> - 移动到下个单词结尾</li><li><strong>E</strong> - 移动到下个单词结尾(单词含标点)</li><li><strong>b</strong> - 移动到上个单词开头</li><li><strong>B</strong> - 移动到上个单词开头(单词含标点)</li><li><strong>%</strong> - 跳转到配对的符号(默认支持的配对符号组:: ‘()’,     ‘{}’, ‘[]’ - 在vim中使用 :h matchpairs 获得更多信息)</li><li><strong>0</strong> - 移动到行首</li><li><strong>^</strong> - 移动到行首的非空白符</li><li><strong>$</strong> - 移动到行尾</li><li><strong>g_</strong> - 移动到行内最后一个非空白符</li><li><strong>gg</strong> - 移动到文件第一行</li><li><strong>G</strong> - 移动到文件最后一行</li><li><strong>5gg</strong> or <strong>5G</strong> - 移动到第五行</li><li><strong>fx</strong> - 移动到字符 x 下次出现的位置</li><li><strong>tx</strong> - 移动到字符 x 下次出现的位置的前一个字符</li><li><strong>Fx</strong> - 移动到字符 x 上次出现的位置</li><li><strong>Tx</strong> - 移动到字符 x 上次出现的位置的后一个字符</li><li><strong>;</strong> - 重复之前的f、t、F、T操作</li><li><strong>,</strong> - 反向重复之前的f、t、F、T操作</li><li><strong>}</strong> - 移动到下一个段落 (当编辑代码时则为函数／代码块)</li><li><strong>{</strong> - 移动到上一个段落 (当编辑代码时则为函数／代码块)</li><li><strong>zz</strong> - 移动屏幕使光标居中</li><li><strong>Ctrl</strong> + <strong>e</strong> - 向下移动屏幕一行(保持光标不动)</li><li><strong>Ctrl</strong> + <strong>y</strong> - 向上移动屏幕一行(保持光标不动)</li><li><strong>Ctrl</strong> + <strong>b</strong> - 向上滚动一屏</li><li><strong>Ctrl</strong> + <strong>f</strong> - 向下滚动一屏</li><li><strong>Ctrl</strong> + <strong>d</strong> - 向下滚动半屏</li><li><strong>Ctrl</strong> + <strong>u</strong> - 向上滚动半屏</li></ul><p><strong>Tip</strong> 命令前追加数字表示命令的重复次数, 比如 <strong>4j</strong> 表示向下移动四行</p><h3 id="插入模式-插入-追加文本"><a href="#插入模式-插入-追加文本" class="headerlink" title="插入模式 - 插入/追加文本"></a>插入模式 - 插入/追加文本</h3><ul><li><p><strong>i</strong> - 从光标前开始插入字符</p></li><li><p><strong>I</strong> - 从行首开始插入字符</p></li><li><p><strong>a</strong> - 从光标后开始插入字符</p></li><li><p><strong>A</strong> - 从行尾开始插入字符</p></li><li><p><strong>o</strong> - 在当前行之下另起一行, 开始插入字符</p></li><li><p><strong>O</strong> - 在当前行之上另起一行, 开始插入字符</p></li><li><p><strong>ea</strong> - 从当前单词末尾开始插入</p></li><li><p><strong>Ctrl</strong> + <strong>h</strong> - 在插入模式下，删除光标前的字符</p></li><li><p><strong>Ctrl</strong> + <strong>w</strong> - 在插入模式下，删除光标前的单词</p></li><li><p><strong>Ctrl</strong> + <strong>j</strong> - 在插入模式下，另起一行</p></li><li><p><strong>Ctrl</strong> + <strong>t</strong> - 在插入模式下，向右缩进，宽度由 shiftwidth 控制</p></li><li><p><strong>Ctrl</strong> + <strong>d</strong> - 在插入模式下，向左缩进，宽度由 shiftwidth 控制</p></li><li><p><strong>Ctrl</strong> + <strong>n</strong> - 在插入模式下，在光标之前插入自动补全的下一个匹配项</p></li><li><p><strong>Ctrl</strong> + <strong>p</strong> - 在插入模式下，在光标之前插入自动补全的上一个匹配项</p></li><li><p><strong>Ctrl</strong>+ <strong>rx</strong>-插入寄存器x的内容</p></li><li><p><strong>Esc</strong> - 退出插入模式</p></li><li><p>222<strong>r</strong> - 替换当前字符</p></li><li><p><strong>J</strong> - 将下一行合并到当前行, 并在两部分文本之间插入一个空格</p></li><li><p><strong>gJ</strong> - 将下一行合并到当前行, 两部分文本之间不含空格</p></li><li><p><strong>gwip</strong> - 重新调整段落</p></li><li><p><strong>gu</strong> -更改为小写字母</p></li><li><p><strong>gU</strong> -更改为大写字母</p></li><li><p><strong>cc</strong> - 将光标所在的行删除, 然后进入插入模式</p></li><li><p><strong>C</strong> - 将光标处到行尾删除, 然后进入插入模式</p></li><li><p><strong>c$</strong> - 将光标处到行尾删除, 然后进入插入模式</p></li><li><p><strong>ciw</strong> - 将光标所在的单词删除, 然后进入插入模式</p></li><li><p><strong>cw</strong> - 从光标位置开始, 修改单词</p></li><li><p><strong>s</strong> - 删除当前字符, 然后进入插入模式</p></li><li><p><strong>S</strong> - 清空当前行, 然后进入插入模式 (同<kbd>cc</kbd>)</p></li><li><p><strong>xp</strong> - 当前字符后移</p></li><li><p><strong>u</strong> - 撤销</p></li><li><p><strong>U</strong> -恢复（撤消）上次更改的行</p></li><li><p><strong>Ctrl</strong> + <strong>r</strong> - 重复</p></li><li><p><strong>.</strong> - 再次执行上个命令</p></li></ul><h3 id="选择文本（可视化模式）"><a href="#选择文本（可视化模式）" class="headerlink" title="选择文本（可视化模式）"></a>选择文本（可视化模式）</h3><ul><li><strong>v</strong> - 进入可视化模式, 移动光标高亮选择, 然后可以对选择的文本执行命令(比如<kbd>y</kbd>-复制)</li><li><strong>V</strong> - 进入可视化模式(行粒度选择)</li><li><strong>o</strong> - 切换光标到选择区开头/结尾</li><li><strong>Ctrl</strong> + <strong>v</strong> - 进入可视化模式(矩阵选择)</li><li><strong>O</strong> - 切换光标到选择区的角</li><li><strong>aw</strong> - 选择当前单词</li><li><strong>ab</strong> - 选择被 () 包裹的区域(含括号)</li><li><strong>aB</strong> - 选择被 {} 包裹的区域(含花括号)</li><li><strong>at</strong> - 选择被 &lt;&gt; 标签包裹的区域(含&lt;&gt;标签)</li><li><strong>ib</strong> - 选择被 () 包裹的区域(不含括号)</li><li><strong>iB</strong> - 选择被 {} 包裹的区域(不含花括号)</li><li><strong>it</strong> - 选择被 &lt;&gt; 标签包裹的区域(不含&lt;&gt;标签)</li><li><strong>Esc</strong> - 退出可视化模式</li></ul><p><strong>Tip</strong> 也可以使用 <strong>(</strong> 和 <strong>{</strong> 分别代替 <strong>b</strong> 和 <strong>B</strong></p><h2 id="可视化模式命令"><a href="#可视化模式命令" class="headerlink" title="可视化模式命令"></a>可视化模式命令</h2><ul><li><strong>&gt;</strong> - 向右缩进</li><li><strong>&lt;</strong> - 向左缩进</li><li><strong>y</strong> - 复制</li><li><strong>d</strong> - 剪切</li><li><strong>~</strong> - 大小写切换</li><li><strong>u</strong> - 将选中文本转换为小写</li><li><strong>U</strong> - 将选中文本转换为大写</li></ul><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><ul><li><strong>:reg[isters]</strong> - 显示寄存器内容</li><li><strong>“xy</strong> - 复制内容到寄存器 x</li><li><strong>“xp</strong> - 粘贴寄存器 x 中的内容</li><li><strong>“+y</strong> - 复制内容到系统剪贴板寄存器</li><li><strong>“+p</strong> - 粘贴系统剪贴板寄存器的内容</li></ul><p><strong>Tip</strong> 寄存器被存储在 ~/.viminfo 中, 在下次重启vim时仍会加载</p><p><strong>Tip</strong> 特殊寄存器：</p><p> <strong>0</strong> - 上次复制<br> <strong>“</strong> - 未命名寄存器，上次复制或删除<br> <strong>%</strong> - 当前文件名<br> <strong>#</strong> - 轮换文件名<br> <strong>*** - 剪贴板内容 (X11 primary)<br> **+</strong> - 剪贴板内容 (X11 clipboard)<br> <strong>/</strong> - 上次搜索的pattern<br> <strong>:</strong> - 上次执行的命令<br> <strong>.</strong> - 上次插入的文本<br> <strong>-</strong> - 上次剪切的短于一行的文本<br> <strong>=</strong> - 表达式寄存器<br> <strong>_</strong> - 黑洞寄存器</p><h2 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h2><ul><li><strong>:marks</strong> - 标记列表</li><li><strong>ma</strong> - 设置当前位置为标记 a</li><li><strong>`a</strong> - 跳转到标记 a 的位置</li><li><strong>y`a</strong> - 复制当前位置到标记 a 的内容</li><li><strong>`0</strong> -转到先前退出Vim的位置</li><li><strong>`”</strong> -转到最后编辑此文件的位置</li><li><strong>`.</strong> -转到此文件中最后更改的位置</li><li><strong>``</strong> -跳到最后一跳之前的位置</li><li><strong>:ju[mps]</strong> -跳跃清单</li><li><strong>Ctrl</strong>+ <strong>i</strong>-跳转到跳转列表中的较新位置</li><li><strong>Ctrl</strong>+ <strong>o</strong>-在跳转列表中转到较旧的位置</li><li><strong>:changes</strong> -变更清单</li><li><strong>g,</strong> -转到更改列表中的较新位置</li><li><strong>g;</strong> -转到更改列表中的较旧位置</li><li><strong>Ctrl</strong>+ <strong>]</strong>-跳至光标下方的标签</li></ul><p><strong>提示</strong>要跳至标记，可以使用反引号（<strong>`</strong>）或撇号（<strong>‘</strong>）。使用撇号将跳转到持有该标记的行的开头（第一个非黑色）。</p><h2 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h2><ul><li><strong>qa</strong> - 录制宏 a</li><li><strong>q</strong> - 停止录制宏</li><li><strong>@a</strong> - 执行宏 a</li><li><strong>@@</strong> - 重新执行上次执行的宏</li></ul><h2 id="剪切-复制-粘贴"><a href="#剪切-复制-粘贴" class="headerlink" title="剪切, 复制, 粘贴"></a>剪切, 复制, 粘贴</h2><ul><li><strong>yy</strong> - 复制当前行</li><li><strong>2yy</strong> - 复制 2 行</li><li><strong>yw</strong> - 复制当前单词</li><li><strong>y$</strong> - 复制, 从光标位置到行末</li><li><strong>p</strong> - 在光标后粘贴</li><li><strong>P</strong> - 在光标前粘贴</li><li><strong>dd</strong> - 剪切当前行</li><li><strong>2dd</strong> - 剪切 2 行</li><li><strong>dw</strong> - 剪切当前单词</li><li><strong>D</strong> - 剪切, 从光标位置到行末</li><li><strong>d$</strong> - 剪切, 从光标位置到行末 (同<kbd>D</kbd>)</li><li><strong>x</strong> - 剪切当前字符</li></ul><h2 id="文字缩进"><a href="#文字缩进" class="headerlink" title="文字缩进"></a>文字缩进</h2><ul><li><strong>&gt;&gt;</strong> - 将当前行向右缩进，宽度由 shiftwidth 控制</li><li><strong>&lt;&lt;</strong> - 将当前行向左缩进，宽度由 shiftwidth 控制</li><li><strong>&gt;%</strong> - 向右缩进 () 或 {} 内的区域 (光标需置于括号上)</li><li><strong>&gt;ib</strong> - 向右缩进 () 内的区域</li><li><strong>&gt;at</strong> - 向右缩进 &lt;&gt; 标签内的区域</li><li><strong>3==</strong> - 自动缩进 3 行</li><li><strong>=%</strong> - 自动缩进 () 或 {} 内的区域 (光标需置于括号上)</li><li><strong>=iB</strong> - 自动缩进 {} 内的区域 (光标需置于括号上)</li><li><strong>gg=G</strong> - 自动缩进整个缓冲区</li><li><strong>]p</strong> - 粘贴并调整缩进至当前行</li></ul><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><ul><li><strong>:w</strong> - 保存</li><li><strong>:w !sudo tee %</strong> - 使用 sudo 保存当前文件</li><li><strong>:wq</strong> or <strong>:x</strong> or <strong>ZZ</strong> - 保存并退出</li><li><strong>:q</strong> - 退出(修改未保存时警告)</li><li><strong>:q!</strong> or <strong>ZQ</strong> - 不保存强制退出</li><li><strong>:wqa</strong> - 保存所有标签页并全部退出</li></ul><h2 id="查找-替换"><a href="#查找-替换" class="headerlink" title="查找/替换"></a>查找/替换</h2><ul><li><strong>/pattern</strong> - 查找<kbd>pattern</kbd></li><li><strong>?pattern</strong> - 向上查找<kbd>pattern</kbd></li><li><strong>\vpattern</strong> - <kbd>pattern</kbd> 中的非字母数字字符被视为正则表达式特殊字符 (不需转义字符)</li><li><strong>n</strong> - 查找下一个</li><li><strong>N</strong> - 查找上一个</li><li><strong>:%s/old/new/g</strong> - 替换全部</li><li><strong>:%s/old/new/gc</strong> - (逐个)替换</li><li><strong>:noh[lsearch]</strong> - 移除搜索结果的高亮显示</li></ul><h2 id="多文件搜索"><a href="#多文件搜索" class="headerlink" title="多文件搜索"></a>多文件搜索</h2><ul><li><strong>:vim[grep] /pattern/ {<code>&#123;file&#125;</code>}</strong> - 在多个文件中搜索 <kbd>pattern</kbd></li></ul><p>例如 <strong>:vim[grep] /foo/ \</strong>/***</p><ul><li><strong>:cn[ext]</strong> - 移动至下一个</li><li><strong>:cp[revious]</strong> - 移动至上一个</li><li><strong>:cope[n]</strong> - 打开搜索结果列表</li><li><strong>:ccl[ose]</strong> -关闭快速修复窗口</li></ul><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><ul><li><strong>:tabnew</strong> or <strong>:tabnew {page.words.file}</strong> - 在新标签中打开文件</li><li><strong>Ctrl</strong> + <strong>wT</strong> - 将窗口变成标签</li><li><strong>gt</strong> or <strong>:tabn[ext]</strong> - 切换到下一个标签</li><li><strong>gT</strong> or <strong>:tabp[revious]</strong> - 切换到上一个标签</li><li><strong>#gt</strong> - 切换到第 <kbd>#</kbd> 个标签</li><li><strong>:tabm[ove] #</strong> - 移动标签到第 <kbd>#</kbd> 位(下标从 0 开始)</li><li><strong>:tabc[lose]</strong> - 关闭当前标签</li><li><strong>:tabo[nly]</strong> - 关闭其他标签</li><li><strong>:tabdo</strong> command - 在所有标签中执行命令 (例如 <strong>:tabdo q</strong> 关闭所有标签)</li></ul><h2 id="多文件编辑"><a href="#多文件编辑" class="headerlink" title="多文件编辑"></a>多文件编辑</h2><ul><li><strong>:e[dit]</strong> <strong>文件名</strong> - 新建缓冲区打开 filename</li><li><strong>:bn[ext]</strong> - 切换到下个缓冲区</li><li><strong>:bp[revious]</strong> - 切换到上个缓冲区</li><li><strong>:bd[elete]</strong> - 关闭缓冲区</li><li><strong>:b[uffer]#</strong> -通过＃进入缓冲区</li><li><strong>:b[uffer] file</strong> -按文件转到缓冲区</li><li><strong>:ls</strong> or <strong>:buffers</strong> - 列出所有打开的缓冲区</li><li><strong>:sp[lit]</strong> <strong>文件名</strong> - 新建缓冲区打开 filename 并水平分割窗口</li><li><strong>:vs[plit]</strong> <strong>文件名</strong> - 新缓冲区打开 filename 并垂直分割窗口</li><li><strong>:vert[ical] ba[ll]</strong> -将所有缓冲区编辑为垂直窗口</li><li><strong>:tab ba[ll]</strong> -将所有缓冲区编辑为选项卡</li><li><strong>Ctrl</strong> + <strong>ws</strong> - 水平分割窗口</li><li><strong>Ctrl</strong> + <strong>wv</strong> - 垂直分割窗口</li><li><strong>Ctrl</strong> + <strong>ww</strong> - 在窗口间切换</li><li><strong>Ctrl</strong> + <strong>wq</strong> - 关闭窗口</li><li><strong>Ctrl</strong>+ <strong>wx</strong>-与下一个交换当前窗口</li><li><strong>Ctrl</strong>+ <strong>w=</strong>-使所有窗口的高度和宽度相等</li><li><strong>Ctrl</strong> + <strong>wh</strong> - 切换到左侧窗口</li><li><strong>Ctrl</strong> + <strong>wl</strong> - 切换到右侧窗口</li><li><strong>Ctrl</strong> + <strong>wj</strong> - 切换到下侧窗口</li><li><strong>Ctrl</strong> + <strong>wk</strong> - 切换到上侧窗口</li></ul><h2 id="差异"><a href="#差异" class="headerlink" title="差异"></a>差异</h2><ul><li><strong>zf</strong> -手动定义向上折叠</li><li><strong>zd</strong> -删除光标下方的折叠</li><li><strong>za</strong> -在光标下方切换折叠</li><li><strong>zo</strong> -在光标下方打开折叠</li><li><strong>zc</strong> -光标下方折叠</li><li><strong>zr</strong> -将所有折叠减少（打开）一级</li><li><strong>zm</strong> -折叠更多（关闭）所有折叠一级</li><li><strong>zi</strong> -切换折叠功能</li><li><strong>]c</strong> -跳转到下一个更改的开始</li><li><strong>[c</strong> -跳至上一个更改的开始</li><li><strong>do</strong>或<strong>:diffg[et]</strong>-从其他缓冲区获取（获取）差异</li><li><strong>dp</strong>或<strong>:diffpu[t]</strong>-存入差额（至其他缓冲区）</li><li><strong>:diffthis</strong> -使当前窗口成为差异的一部分</li><li><strong>:dif[fupdate]</strong> -更新差异</li><li><strong>:diffo[ff]</strong> -关闭当前窗口的差异模式</li></ul><p><strong>提示</strong>折叠命令（例如<strong>za</strong>）在一级上操作。要在所有级别上操作，请使用大写字母（例如<strong>zA</strong>）。</p><p><strong>提示</strong>要查看文件的差异，可以通过<strong>vimdiff</strong>在终端上运行来直接在diff模式下启动Vim 。甚至可以将其设置为<strong>git difftool</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Vim备忘单&quot;&gt;&lt;a href=&quot;#Vim备忘单&quot; class=&quot;headerlink&quot; title=&quot;Vim备忘单&quot;&gt;&lt;/a&gt;Vim备忘单&lt;/h1&gt;&lt;h2 id=&quot;全局&quot;&gt;&lt;a href=&quot;#全局&quot; class=&quot;headerlink&quot; title=&quot;全局&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="Vim" scheme="http://blog.isk.ink/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>我的2020年度总结</title>
    <link href="http://blog.isk.ink/2021/01/04/%E6%88%91%E7%9A%842020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    <id>http://blog.isk.ink/2021/01/04/%E6%88%91%E7%9A%842020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-04T14:51:04.000Z</published>
    <updated>2021-02-04T03:12:53.186Z</updated>
    
    <content type="html"><![CDATA[<p>  光阴荏苒，日月如梭,一晃匆匆又是一年.</p><p>2020是我人生重要的转折点.我呆在里整整半年.也在暑假体验了真正的人情世故.学到了许多东西,也认识了更广阔的世界.</p><h2 id="春季"><a href="#春季" class="headerlink" title="春季"></a>春季</h2><p>2020的春节可以说是一切的开始,从学校听到肺炎的开始,我并没有重视这个东西,以为就几个人,很容易控制,可是它却出乎所有人的预料.从学校回到家里,一切的一切都是那么普通,见了几个从小认识的朋友,都没有什么变化.</p><p>现在看来当时我所做的最正确的决定就是,在快递彻底停运前买了两张无限流量卡,这个卡成了我半年内所有的流量来源(我家并没有WIFI,因为我不在家就没办),40块一个月,每天都是手机给笔记本电脑开热点.当时买了两张,另一张给了我一个朋友.每天看直播,看视频,玩游戏,学编程的所有网络来源都来源于这一张小小的流量卡.真不敢想想如果我当时没有买这张卡,等春节快递停运,可能我的网课,和我上半年所有的娱乐都过的小心翼翼,而快递业务直到5月份才恢复.</p><p>因为这时学校也觉得疫情很快就会过去,所以当时还没有全面上网课,只是把一些水课上一上,这也给了我们许多时间去做一些自己的爱好.</p><p>从这时起,我决定这个学校教的东西并不是我想要的那种效果,学了一年软件工程,结果写不出任何东西,基本磨灭了我对计算机的热爱,我以前大概是小学的时候,特别喜欢数学 ,大概是初一的时候,遇到一个老师,教的特别敷衍,根本感受不到任何意义,慢慢的,就失去了对这个学科的热爱,到初二也就成绩平平,我认为也有我的原因,在大学也是这种感觉,我不想再重复这个磨灭热爱的过程,所以我在那段时间开始深入了解IT行业,我以前在高中时,认为已经足够了解了,才选择这个专业,现在发现当时好像什么都不懂,还好没有选错道路.在这个春天,看了许多大佬的视频,都是关于这个行业的发展,包括用什么编程语言能干什么事 ,学习路线,当时看了B站程序羊(CodeSheep)的视频,决定先弄个博客,毕竟前端好入门.</p><p>自己从零开始学习各种东西,首先学会的 就是翻墙,即学会用谷歌,因为国家禁止,所以平时只在手机上去谷歌,推特看看,我在Youtube上找到了别人的翻墙教程,学着在windows电脑上安装使用,感谢那些人一步一步的操作,让我了解了当时我认为很复杂的软件V2ray(现在玩的很溜),买了个速度快的节点,终于不再用老王VPN那个无聊的翻墙软件了.虽然那个开发者是个佛系的人,完全免费,但是就是不好用.我从那时开始上推特,认识了很多大佬,包括阿里P7等很多优秀的程序员,他们每天分享的东西也让我受益匪浅,认识了和我一样年纪的编程大佬,才知道有那么多优秀的同龄人.我也开始向他们学习.</p><p>我很喜欢一首禅诗.</p><p>沿着这样一条道路:</p><p>关注大师,</p><p>跟随大师,</p><p>与大师同行,</p><p>洞察大师,</p><p>成为大师. </p><p>继续说博客哈,当时我就看着CodeSheep的视频自己跟着做,遇到很多问题就在谷歌上查找,不得不说,谷歌真好用.在建博客的同时,遇到了很多朋友,像<code>邢家辉大佬</code>.简直是太他妈牛逼了,我要是女的,我差点就爱上他了.在搭建博客的过程中,也学会了独立解决问题的能力,当时,完全没有任何编程经历,C语言都算学到不好,建博客花了3天才算建好,后来又发现了许多好看的主题,加了一个群开始和一些志同道合的大佬一起聊天.</p><p>建起一个博客并没有花很多时间,在博客的完善中才是真要命,总是会出各种问题,很多都在邢家辉大佬的帮助下解决了,但是很多问题就只能自己去解决了,当时一个问题我可能要花两天时间去解决,因为没有任何经验,后来是真佩服当时的我,还记得那时好几次都想砸电脑,终于懂了,代码本地没问题是一码事,上传上去就看玄学了.</p><p>后来那个春天真的学了很多东西,除了狗娘养的数据结构没学明白,还有线性代数.开学考试没挂科真是谢天谢地了.</p><p>当时学了很多东西,看了半本C primer plus和半本大话数据结构,看了一些C++的视频,git的使用,和DOS命令,后来装了给虚拟机,在虚拟机里学习C语言,学了点Linux,最多的还是前端的处理流程,在慕课网上,学了C的一些东西.也把以前学过的JAVA捡起来一部分,高三毕业后因为兴趣学过一段时间JAVA,但是并不成体系,所以又学了一遍.</p><p>写了几篇博客,重点写了虚拟机的一些东西.</p><h2 id="夏季"><a href="#夏季" class="headerlink" title="夏季"></a>夏季</h2><p>我人生中干的最蠢的事就是在那个暑假去打工当保安.去深圳当了一个月保安,赚了三千多,但失去了更多.</p><p>前半个月上白班,在别人小区门口量体温,太无聊了,条件艰苦,沥青路面上一站站一天,测温枪除了早上能用基本其他任何时候都是43度爆表,量了个寂寞,但是更恶心的是还有人随机过来偷偷看你有没有好好工作,发现一次一天的工资就没了,一次扣一百.还容易得罪人,唯一学到了的东西就是,越是有钱的人(开宝马奥迪的),越容易心平气和的过来主动检查,越是没钱的,你拦他他还不停直接向我撞过来,大多是开一些比较次的车的,比如五菱宏光和摩托,电动车.有钱人的一些涵养确实不同,我一个小保安也得罪不起人,况且是在”异国他乡”,明白了一个道理,有钱人之所以有钱,是因为有高的涵养高的能力,并不会因为你是一个保安就不尊重你的工作,尊重他人,才会有好的人缘,有更多成功的机会.很多时候,大多是下午一点最热的时候,那时没什么人进出,大多是清洁工阿姨叔叔坐在我哪里和我聊天,我有一个遮阳棚,我那里的水是免费的,所以我会打给他们喝,大多他们都不愿意,他们带的也有水,和他们聊家常,也理解了很多人的不容易,我以为我那个保安已经够惨了,一个月3000多,完全不需要什么技术含量,清洁工还不如我,聊到他们的孩子,大多都在上学,叔叔阿姨大多都是来自贵州湖南这些地方,见识颇多.</p><p>实在是没得意义去干了半个月夜班,转到了高速公路路口,这他妈真是我噩梦的开始.我觉得白天很热转到晚上可能会好一点,日了狗了,高速路口,车非常多,一个小时等于我在小区门口一上午的工作量,而且是晚上,八点上班,第二天8点下班,不能睡觉,而且会有生命危险.站在一个地方不停重复一个动作,等他们开车窗,伸手,关车窗.晚上很困不能睡觉是真的难顶,我来后一个星期不到,我有个同事猝死了,40多岁,也是上夜班,不过我在高速路口他在另一个路口,具体是哪里就不清楚了.</p><p>那段时间很幸苦,白天我又不想睡觉,想去上网打游戏,深圳的网吧比我老家网费便宜太多了,配置还好,这能忍?所以基本白天就睡四个小时就去上网,晚上一直站着睡不着特难受,不过后来还好.</p><p>那段时间我特别飘,就没有我不敢拦的车,我管你什么宝马奔驰玛莎拉蒂,最飘的是我拦了不少警车,好家伙够我吹一年的,后来领导实在看不下去了,说让我别拦了,印象最深的是,我半夜拦的一辆奔驰,那个漂亮的女司机给了我一瓶红牛还是乐虎,忘记了,而且她副驾驶上的女儿特别好看(完了暴露我是lsp了),不过当时困得要死,也没怎么在意.</p><p>干了一个月,八月回到家,不想干了,回家继续开始我上半年的无聊生活,但是由于我去了深圳一个月,也把上半年学到东西忘记的差不多了,所以那段时间基本没学到什么东西,就是把博客整理了一下,水了几篇博文.</p><p>那个八月,也是我印象特别深刻的八月,我从来没有在一段时间,一个晚上,真正去做自己想做的事情,看一整晚的星星,天文学,也算我的一个爱好之一,我能清楚的记下来天空中的八十八个星座,而且能在天气好的情况下认出他们,我最喜欢的科学家之一南仁东,他有一首诗我特别喜欢,上高三时看到了南仁东传,从此特别喜欢这个科学家,他有一首诗,是赞美中国五百米口径设点望远镜(天眼fast)的,我现在还会背.</p><p><code>春雨催醒期待的嫩绿,夏露折射万物的欢歌,秋风编制七色锦缎,冬日里的生命乐章延续着它的优雅.大窝凼,大窝凼;时刻给我们惊喜,让我们惊奇.</code> </p><p><code>感官安宁,万籁无声,美丽的宇宙太空,以它的神秘和绚丽,召唤我们踏过平庸,进入到广袤的无垠.-----南仁东</code></p><h2 id="秋季"><a href="#秋季" class="headerlink" title="秋季"></a>秋季</h2><p>开学季,那时一个悲伤的九月,开学考试,还好没挂科.</p><p>开的全是无聊的课,JAVA也没学到什么,全是我自学的东西,web课学会了切图,难怪一些人把前端工程师叫做前端切图仔.</p><p>这段时间基本没弄过博客了,但是,自己又看了一边JAVA的视频,这次整理了笔记,和HTML+CSS的学习笔记.</p><h2 id="没写完-继续更新"><a href="#没写完-继续更新" class="headerlink" title="没写完,继续更新"></a>没写完,继续更新</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  光阴荏苒，日月如梭,一晃匆匆又是一年.&lt;/p&gt;
&lt;p&gt;2020是我人生重要的转折点.我呆在里整整半年.也在暑假体验了真正的人情世故.学到了许多东西,也认识了更广阔的世界.&lt;/p&gt;
&lt;h2 id=&quot;春季&quot;&gt;&lt;a href=&quot;#春季&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Git配置SSH Key</title>
    <link href="http://blog.isk.ink/2020/12/14/Git%E9%85%8D%E7%BD%AESSH-Key/"/>
    <id>http://blog.isk.ink/2020/12/14/Git%E9%85%8D%E7%BD%AESSH-Key/</id>
    <published>2020-12-14T13:35:10.000Z</published>
    <updated>2020-12-14T14:01:25.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>设置git的user name和email</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Yaoguang161&quot;</span><br><span class="line">git config --global user.email &quot;yaoguang161@outlook.com&quot;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>生成ssh key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;yaoguang161@outlook.com&quot;&#x2F;&#x2F;这里填你设置的邮箱地址</span><br></pre></td></tr></table></figure><p>接着出现： Generating pulbic/private rsa key pair</p><p>​                    Enter file in which to save the key</p><p>然后一直回车</p><p>系统会在用户目录下生成ssh文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201214214427.png" alt="image-20201214214427300"></p></li><li><p>打开github，登录你的账户，进入设置</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201214214517.png" alt="image-20201214214517870"></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201214214536.png" alt="image-20201214214536399"></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201214214553.png" alt="image-20201214214553588"></p><ol start="5"><li><p>将id_rsa.pub用记事本打开，复制粘贴到ssh key里</p></li><li><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201214214820.png" alt="image-20201214214820879"></p></li><li><p>然后在git中输入命令：</p><p>ssh -T <a href="mailto:git@github.com">git@github.com</a></p><p>然后蹦出一堆话</p><p>输入命令：yes</p><p>回车</p><p>然后就成功了</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;设置git的user name和email&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;ta
      
    
    </summary>
    
    
    
      <category term="git" scheme="http://blog.isk.ink/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>控制台输出乱码问题</title>
    <link href="http://blog.isk.ink/2020/12/14/%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.isk.ink/2020/12/14/%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</id>
    <published>2020-12-14T13:24:54.000Z</published>
    <updated>2020-12-14T14:02:34.080Z</updated>
    
    <content type="html"><![CDATA[<p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201214212616.png" alt="image-20201214212609780"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; data-lazy-src=&quot;https://image.isk.ink///image/20201214212616.png&quot; alt=&quot;image-20201214212609780&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>GUI编程学习笔记</title>
    <link href="http://blog.isk.ink/2020/12/13/GUI%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.isk.ink/2020/12/13/GUI%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-13T07:16:31.000Z</published>
    <updated>2021-02-21T01:26:43.308Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GUI编程"><a href="#GUI编程" class="headerlink" title="GUI编程"></a>GUI编程</h2><p>组件</p><ul><li><p>窗口</p></li><li><p>弹窗</p></li><li><p>面板</p></li><li><p>文本框</p></li><li><p>列表框</p></li><li><p>按钮</p></li><li><p>图片</p></li><li><p>监听事件</p></li><li><p>鼠标</p></li><li><p>键盘事件</p></li><li><p>破解工具</p></li></ul><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Gui的核心技术： Swing  AWT ,没流行起来是因为界面不美观，而且需要jre环境！</p><p>为什么要学习？</p><ol><li>可以写出自己心中想要的一些小工具</li><li>工作时候，也可能需要维护到swing界面，概率极小！</li><li>了解MVC架构，了解监听器！</li></ol><h2 id="AWT"><a href="#AWT" class="headerlink" title="AWT"></a>AWT</h2><h3 id="awt介绍"><a href="#awt介绍" class="headerlink" title="awt介绍"></a>awt介绍</h3><ol><li>包含了很多类和接口！ GUI</li><li>元素：窗口，按钮，文本框</li><li>java.awt</li></ol><h2 id="第一个Frame窗口"><a href="#第一个Frame窗口" class="headerlink" title="第一个Frame窗口"></a>第一个Frame窗口</h2><h3 id="组件和容器"><a href="#组件和容器" class="headerlink" title="组件和容器"></a>组件和容器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Enzo Cotter on 2020/12/15.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//GUI的第一个界面</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFrame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Frame.JDL. 看源码</span></span><br><span class="line">        Frame frame=<span class="keyword">new</span> Frame(<span class="string">&quot;我的第一个JAVA图形界面&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//需要设置可见性  宽 高</span></span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置窗口大小</span></span><br><span class="line">        frame.setSize(<span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置背景颜色 color</span></span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> Color(<span class="number">85</span>,<span class="number">150</span>,<span class="number">68</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//弹出的初始位置</span></span><br><span class="line">        frame.setLocation(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//设置大小固定</span></span><br><span class="line">        frame.setResizable(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201215205902.png" alt="image-20201215205855202"></p><p>问题：窗口关不掉</p><h3 id="多个窗口"><a href="#多个窗口" class="headerlink" title="多个窗口"></a>多个窗口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Enzo Cotter on 2020/12/15.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFrame2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//展示多个窗口 new</span></span><br><span class="line">        MyFrame myFrame1 =<span class="keyword">new</span> MyFrame(<span class="number">100</span>, <span class="number">100</span> ,<span class="number">200</span>,<span class="number">200</span>, Color.blue);</span><br><span class="line">        MyFrame myFrame2 =<span class="keyword">new</span> MyFrame(<span class="number">300</span>, <span class="number">100</span> ,<span class="number">200</span>,<span class="number">200</span>, Color.yellow);</span><br><span class="line">        MyFrame myFrame3 =<span class="keyword">new</span> MyFrame(<span class="number">100</span>, <span class="number">300</span> ,<span class="number">200</span>,<span class="number">200</span>, Color.green);</span><br><span class="line">        MyFrame myFrame4 =<span class="keyword">new</span> MyFrame(<span class="number">300</span>, <span class="number">300</span> ,<span class="number">200</span>,<span class="number">200</span>, Color.magenta);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyFrame</span> <span class="keyword">extends</span> <span class="title">Frame</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> id =<span class="number">0</span>; <span class="comment">//可能存在多个窗口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> w,<span class="keyword">int</span> h,Color color)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">&quot;Myframe+&quot;</span>+(++id));</span><br><span class="line">        setBackground(color);          <span class="comment">//设置颜色</span></span><br><span class="line">        setBounds(x,y,w,h);      <span class="comment">//设置位置和大小</span></span><br><span class="line">        setVisible(<span class="keyword">true</span>);  <span class="comment">//设置可见</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201215212039.png" alt="image-20201215212039505"></p><h3 id="2-面板panel"><a href="#2-面板panel" class="headerlink" title="2.面板panel"></a>2.面板panel</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GUI编程&quot;&gt;&lt;a href=&quot;#GUI编程&quot; class=&quot;headerlink&quot; title=&quot;GUI编程&quot;&gt;&lt;/a&gt;GUI编程&lt;/h2&gt;&lt;p&gt;组件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;窗口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;弹窗&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java学习笔记</title>
    <link href="http://blog.isk.ink/2020/12/10/JAVA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.isk.ink/2020/12/10/JAVA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-10T13:04:24.000Z</published>
    <updated>2021-02-04T03:16:06.318Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>首先必须声明数组变量，才能在程序中使用数组。下面是声明变量的语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar; <span class="comment">//首选</span></span><br><span class="line">或者</span><br><span class="line">dataType arrayRefVar[]; <span class="comment">//效果相同，和C语言相似</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//java使用new操作字符来创建数组，语法如下:</span></span><br><span class="line">dataType[] arrayRefVar = <span class="keyword">new</span> dataType[arraySize];</span><br></pre></td></tr></table></figure><p>数组的元素是通过索引访问的，数组索引从0开始</p><p>获取数组长度:  arrays.length</p><p>定义数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] nums;  <span class="comment">//定于数组</span></span><br><span class="line">num =<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>]；  <span class="comment">//这里面可以存10个int类型的数字</span></span><br><span class="line"><span class="comment">//也可以通过下列方式来写</span></span><br><span class="line"><span class="keyword">int</span>[] nums=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><h2 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h2><h3 id="JAVA内存"><a href="#JAVA内存" class="headerlink" title="JAVA内存"></a>JAVA内存</h3><ol><li>堆     可以存放new的对象和数组；可以被所有的线程共享，不会存放别的引用</li><li>栈     存放基本变量类型（会包括这个基本类型的具体数值）；引用对象的变量（会存放这个引用在堆里面的具体地址）</li><li>方法区     可以被所有的线程共享；包含了所有的class和static变量</li></ol><h3 id="分析内存"><a href="#分析内存" class="headerlink" title="分析内存"></a>分析内存</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201210211242.png" alt="img"></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201212165652.png" alt="Untitled (2)"></p><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201211180233.png" alt="img"></p><h2 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h2><ol><li>和类名相同</li><li>没有返回值</li></ol><p>作用：</p><ol><li>new 本质是在调用构造方法</li><li>初始化对象的值</li></ol><p>注意点：</p><ol><li>定义有参构造之后，如果想使用无参构造，显示的定义一个无参的构造</li></ol><p>Alt+Insert</p><p>this.=参数传进来的值</p><h2 id="简单小结类和对象"><a href="#简单小结类和对象" class="headerlink" title="简单小结类和对象"></a>简单小结类和对象</h2><ol><li><p>类与对象</p><p>类是一个模板：抽象，对象是一个值。</p></li><li><p>方法</p><p>定义，调用！</p></li><li><p>对应的引用</p><p>引用类型：  基本类型（8）</p><p>对象是通过引用来操作的： 栈—&gt;对象</p></li></ol><p>4.属性 ： 字段Field  成员变量</p><p>​        默认初始化：</p><pre><code>数字： 0  0.0</code></pre><p>​         char： u0000；</p><pre><code>boolean:  false;引用： null</code></pre><p>​        修饰符    属性类型    属性名 = 属性值！</p><ol start="5"><li>方法</li></ol><p>重要的是避免方法的死循环</p><ol start="6"><li>对象的创建和使用</li></ol><p>-必须使用new 关键字创造对象，构造器 Person kuangshen = new Person();</p><p>-对象的属性  kuangshen.name=” liyujing”</p><p>-对象的方法   kuangshen.shot();</p><ol start="7"><li><p>类：</p><p>静态的属性： 属性</p><p> 动态的行为:   方法</p></li></ol><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><ul><li>继承的本质是对某一批类的抽象，从而实现对现实世界更好的建模</li><li>extands的意思是“ 扩展”。子类是父类的继承</li><li>JAVA中只有单继承，没有多继承 ，一个儿子只有一个爸爸，一个爸爸可以有多个儿子</li><li>继承是类和类之间的一种关系。除此之外，类和类之间的关系还有依赖，组合，聚合等</li><li>继承关系的两个类，一个为子类（派生类）；一个为父类（基类）；子类继承父类，使用关键字extends来表示</li><li>子类和父类之间，从意义上讲应该具有“ is   a”的关系</li><li>object类</li><li>super</li><li>方法重写</li><li><strong>父类中私有的东西无法被子类继承</strong></li></ul><h3 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h3><ul><li>public   公开的</li><li>protected</li></ul><p>具有protected访问控制级别的成员是半公开的，外界无法直接访问这个控制级别的成员，但是派生类的base指针（在c++中也可用引用访问）可以获得访问能力，protected与private基本相似，只有在继承时有较大的区别。继承的类可以访问protected成员，但是不能访问private成员。</p><ul><li>default</li></ul><p>简单说，默认方法就是接口可以有实现方法，而且不需要实现类去实现其方法。</p><p>我们只需在方法名前面加个 default 关键字即可实现默认方法。</p><ul><li>private   私人的</li></ul><p>所有的类都默认直接或间接继承Object类</p><h3 id="Super详解"><a href="#Super详解" class="headerlink" title="Super详解"></a>Super详解</h3><p>在子类中使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="keyword">super</span>.neme);<span class="comment">//可以调用到父类中的“名字”</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201211180832.png" alt=""></p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><ol><li>super 调用父类的构造方法，必须在构造方法的第一个。</li><li>super必须只能出现在子类的方法或者构造方法中！</li><li>super和this不能同时调用构造方法！</li></ol><p>Vs this：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">代表的对象不同：</span><br><span class="line"></span><br><span class="line">                 this: 本身调用者这个对象</span><br><span class="line"></span><br><span class="line">                  super： 代表父类对象的应用</span><br><span class="line"></span><br><span class="line"> 前提：</span><br><span class="line"></span><br><span class="line">                this： 没有继承也可以使用</span><br><span class="line"></span><br><span class="line">               super: 只能在继承条件下才可以使用</span><br><span class="line"></span><br><span class="line">  构造方法：</span><br><span class="line"></span><br><span class="line">               this（）； 本类的构造</span><br><span class="line"></span><br><span class="line">               super（）；  父类的构造！</span><br></pre></td></tr></table></figure><h2 id="方法重写（不是方法重载）"><a href="#方法重写（不是方法重载）" class="headerlink" title="方法重写（不是方法重载）"></a>方法重写（不是方法重载）</h2><p><strong>父类的引用指向子类</strong></p><p>对于重载的说明（易混淆）</p><p> 重载是同一个方法的不同参数</p><ol><li>重写都是方法的重写与属性无关</li><li>静态的方法和非静态的方法区别很大！</li><li>静态方法：方法的调用只能和左边，定义的数据类型有关</li><li>非静态  ：重写</li><li>重写的方法不能是私有的</li><li>重写只有继承 才有：子类重写父类的方法</li></ol><h3 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h3><p>重写：</p><ul><li>需要有继承关系，子类重写父类的方法！2</li></ul><ol><li>方法名必须相同</li><li>参数列表必须相同</li><li>修饰符：范围可以扩大：public&gt;protected&gt;Defult&gt;private.</li><li>抛出的异常： 范围，可以被缩小，但不能扩大;ClassNotFoundException—&gt;Exception(大)</li></ol><p>重写，子类的方法和父类必须一致：方法体不同！</p><p>为什么要重写：</p><ol><li>父类的功能,子类不一定需要，或者不一定满足！</li></ol><p>Alt + Insert : override(重写);</p><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><ul><li><p>动态编译： 类型：可扩展性</p></li><li><p>即同一方法可以根据发送对象的不同而采用多种不同的行为类型</p></li><li><p>一个对象的实际类型是确定的，但可以指向对象的引用的类型有很多（父类，有关系的类）</p></li></ul><p>多态存在的条件</p><ul><li>有继承关系</li><li>子类重写父类方法</li><li>父类引用子类对象</li></ul><p>注意： 多态是方法的多态，属性没有多态性</p><p>instanceof    （类型转换）引用类型的转换</p><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个对象的实际类型是确定的</span></span><br><span class="line"><span class="comment">//new Student（）;</span></span><br><span class="line"><span class="comment">//new Person（）；</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main&#123;</span><br><span class="line"><span class="comment">//student能调用的都是自己的或者继承父类的</span></span><br><span class="line">Student s1=<span class="keyword">new</span> Student();   <span class="comment">//同一个Stdent有三种不同的引用</span></span><br><span class="line"><span class="comment">//Person父类型，可以指向子类，但是不能调用子类独有的方法</span></span><br><span class="line">Persion s2=<span class="keyword">new</span> Student();</span><br><span class="line">Object s3=<span class="keyword">new</span> Student();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子类重写了父类的方法，执行子类的方法</li><li>对象能执行那些方法，主要看对象左边的类型，和右边关系不大。例如</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Student s1 =<span class="keyword">new</span> Student();</span><br><span class="line">Person s2 =<span class="keyword">new</span> Student();</span><br><span class="line">Object s3 =<span class="keyword">new</span> Student();</span><br></pre></td></tr></table></figure><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Person s2=<span class="keyword">new</span> Student();</span><br><span class="line">((Student)s2).eat();  <span class="comment">//强制转换  高转低</span></span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>多态是方法的多态，属性没有多态</li><li>父类和子类  ，有联系 类型转换异常！  报错CLassCastException!</li><li>存在的条件：继承关系；方法需要重写，父类引用指向子类对象！ Father f1 =new Son();</li></ol><p>有些方法不能重写</p><ol><li>static(静态方法)  属于类，它不属于实例</li><li>final 常量；</li><li>privata(私有)方法；</li></ol><h2 id="static关键字详解"><a href="#static关键字详解" class="headerlink" title="static关键字详解"></a><strong>static关键字详解</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> age;   <span class="comment">//静态的变量</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> score;   <span class="comment">//非静态的变量</span></span><br></pre></td></tr></table></figure><ul><li>非静态方法可以直接去访问类中的静态方法；</li><li>静态方法只能去调用静态方法</li><li>静态方法都可以直接使用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="comment">//第二执行</span></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;匿名代码块&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第一执行</span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;静态代码块&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">//第三执行</span></span><br><span class="line"><span class="keyword">public</span> Person&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;构造方法&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>static只执行一次</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个好玩的代码</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> System.out.println(Math.random());<span class="comment">//输出一个随机数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//好玩的代码二</span></span><br><span class="line"><span class="comment">//静态导入包</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random; </span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.PI;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">System.out.println(random());  <span class="comment">//可以直接用哦</span></span><br><span class="line">System.out.println(PI);        <span class="comment">//同理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>final修饰的类 ，断子绝孙不能被继承</li></ul><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ul><li>abstract修饰符可以用来修饰方法也可以修饰类，如果修饰方法，那么该方法即使抽象方法；如果修饰类，那么该类就是抽象类</li><li>抽象类中可以没有抽象方法，但是有抽象方法的类一定要声明为抽象类</li><li>抽象类，不能使用new关键字来创建对象，它是用来让子类继承</li><li>抽象方法，只有方法的声明，没有方法的实现，它是用来让子类实现的</li><li>子类继承抽象类，那么就必须要实现抽象类没有实现的抽象方法，否则该子类也要声明为抽象类</li></ul><h3 id="abstract"><a href="#abstract" class="headerlink" title="abstract"></a>abstract</h3><ul><li>抽象方法，只有方法名字，没有方法的实现！</li><li>抽象类： 类 extends: 单继承 ~  （接口可以多继承）</li></ul><ol><li>不能new出来，只能靠子类去实现它： 约束！</li><li>抽象类可以写普通的方法~</li><li>抽象方法必须在抽象类中~</li></ol><ul><li>抽象方法，只有方法名字，没有方法的实现！</li><li>抽象类： 类 extends: 单继承 ~  （接口可以多继承）</li></ul><ol><li>不能new出来，只能靠子类去实现它： 约束！</li><li>抽象类可以写普通的方法~</li><li>抽象方法必须在抽象类中~</li></ol><ul><li>抽象方法，只有方法名字，没有方法的实现！</li><li>抽象类： 类 extends: 单继承 ~  （接口可以多继承）</li></ul><ol><li>不能new出来，只能靠子类去实现它： 约束！</li><li>抽象类可以写普通的方法~</li><li>抽象方法必须在抽象类中~</li></ol><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><ul><li>普通类 ：只有具体实现</li><li>抽象类: 具体方法实现和规范（抽象方法）都有！</li><li>接口：只有规范！自己无法写方法<del>专业的约束！ 约束和实现分离：面向接口编程</del></li><li>接口就是规范,定义的是一组规则，体现了现实生活中的“如果你是。。。”</li><li>接口的本质是契约，就像我们人间的法律一样。指定好有大家都遵守</li><li>OO的精髓，是对对象的抽象，最能体现这一点的就是接口。为什么我们讨论设计模式都只针对具备了抽象能力的语言（比如C++,java,C#等），就是因为设计模式所研究的，实际上就是如何合理的去抽象。</li></ul><p>类声明的关键字是class，声明接口的关键字是interface</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"><span class="comment">//接口中所有定义其实都是抽象的public abstract</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(String name)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(String name)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(String name)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>类可以实现接口 implements 接口</li><li>实现了接口的类，就需要重写接口中的类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> clss UserServiceImpl implements UserService&#123;</span><br><span class="line"><span class="meta">@override</span>重写</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> add&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ol><li>约束</li><li>定义一些方法，让不同的人实现</li><li>public abstract</li><li>public static final</li><li>接口不能实例化~接口中没有构造方法</li><li>implements可以实现多个接口</li><li>必须要重写接口中的方法</li></ol><h2 id="內部类"><a href="#內部类" class="headerlink" title="內部类"></a><strong>內部类</strong></h2><ul><li>內部类就是在一个类的內部再定义一个类，不如在A类中定义一个B类，那么B类相对A类来说就成为内部类，而A类相对于B类来说就是外部类了。</li></ul><ol><li>成员内部类</li><li>静态內部类</li><li>局部内部类</li><li>匿名內部类</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://image.isk.ink///image/20201211181712.png" alt=""></p><ul><li>一个JAVA文件中可以有多个class类，但是只能有一个public class</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span></span>&#123;</span><br><span class="line"><span class="comment">//局部内部类</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="异常机制"><a href="#异常机制" class="headerlink" title="异常机制"></a>异常机制</h2><h3 id="什么是异常"><a href="#什么是异常" class="headerlink" title="什么是异常"></a>什么是异常</h3><ul><li>实际工作中，遇到的情况不可能是非常完美的。比如：你写的某个模块，用户输入不一定符合你的要求，你的程序要打开某个文件，这个文件可能不存在或者文件格式不对，你要读取数据库的数据，数据可能是空的等。我们的程序再跑着，内存或者硬盘可能满了。等等</li><li>软件程序运行的过程中，非常可能遇到刚刚遇到提到的这些异常问题，我们叫异常，英文是：Exception，意思是例外。，这些，例外情况，或者叫异常，怎么让我们写的程序做出合理的处理。而不至于程序崩溃</li><li>异常指程序运行中出现的不期而至的各种情况，如文件找不到。网络连接失败。非法参数等</li><li>异常发生在程序运行期间，它影响了正常文件的程序执行流程</li></ul><p>要理解JAVA异常处理是如何工作的，你需要掌握一下三种类型的异常</p><ol><li>异常性检查：对具代表性的检查异常是用户错误或问题引起的异常，这是程序员无法预见的。例如要打开一个不存在文件时，一个异常就发生了，这些异常在编译时不能被简单地忽略。</li><li>运行时异常：运行时异常时一个可能被程序员避免的异常，与检查性异常相反，运行时异常可以在编译时被忽略</li><li>错误：错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略，例如，当栈溢出时，一个错误就发生了，它们在编译时也检查不到的。</li></ol><h3 id="异常体系结构"><a href="#异常体系结构" class="headerlink" title="异常体系结构"></a>异常体系结构</h3><ul><li>JAVA把异常当作对象来处理，并定义一个基类java.lang.Throwable作为所有异常的超类</li><li>在JAVA API中已经定义了许多异常类，这些异常类分为两大类，错误Error和异常ExcePtion</li></ul><h3 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h3><ul><li>Error类对象由Java虚拟机生成并抛出，大多数代码与代码编写者所执行的操作无关。</li><li>Java虚拟机运行错误（Virtual MachineError） ,当JVM不再有继续执行操作时所需的内存资源时，将出现OutIOfMemoryError。这些异常发生时，Java虚拟机（JVM）一般会选择线程终止；</li><li>还有发生在虚拟机试图执行应用时，如类定义错误（NoClassDefFoundError），链接错误（LinkageError）。这些错误时不可查的，因为他们在应用程序的控制和处理能力之外，而且绝大多数时程序运行时不允许出现的状况。</li></ul><h3 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h3><ul><li><p>在Exception分支中有一个重要的子类RuntimeException（运行时异常）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ArraylndexOutOfBoundsException（数组下标越界）</span><br><span class="line"></span><br><span class="line">NullPointerException（空指针异常）</span><br><span class="line"></span><br><span class="line">ArithmeticException（算术异常）</span><br><span class="line"></span><br><span class="line">MissingResourceException（丢失资源）</span><br><span class="line"></span><br><span class="line">ClassNotFoundException（找不到类）等异常，这些异常都不检查异常，程序中可以选择捕获异常处理，也可以不处理</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>这些异常一般是有程序逻辑错误引起的，程序应该从逻辑角度尽可能避免这类异常的发生；</p></li><li><p>Error和Exception的区别：Error通常是灾难性的致命错误，是程序无法控制和处理的，当出现这些异常时，Java虚拟机（JVM）一般会选择终止线程，Exception通常情况下是可以被程序处理的，并且在程序中应该尽可能的去处理这些异常。</p></li></ul><h2 id="自定义异常及经验总结"><a href="#自定义异常及经验总结" class="headerlink" title="自定义异常及经验总结"></a>自定义异常及经验总结</h2><ul><li>使用Java内置的异常类可以描述在编程时出现的大部分异常情况。除此之外，用户还可以自定义异常。用户自定义异常类，只需要继承Exception</li><li>在程序中使用自定义异常类，大体可分以下几个步骤：</li></ul><ol><li>创建自定义异常类</li><li>在方法中通过throw关键字抛出异常对象</li><li>如果在当前抛出异常的方法中处理异常，可以使用try-catch语句捕获并处理；否则在方法的声明处通过throw关键字指明要抛出给方法调用者的异常，继续进行下一步操作</li><li>在出现异常方法的调用者中捕获并处理异常</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义的异常类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"><span class="comment">//传递数字&gt;10</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> detail;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.detail = a;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">//toString: 异常的打印信息</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;MyException&#123;&quot;</span> +detail + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实际应用中的经验总结"><a href="#实际应用中的经验总结" class="headerlink" title="实际应用中的经验总结"></a>实际应用中的经验总结</h3><ul><li>处理运行时异常时，采用逻辑去合理规避同时辅助try-catch处理、</li><li>在多重catch块后面，也可以加一个catch（）来处理可能会被遗漏的异常</li><li>对于不确定的代码，也可以加一个try-catch，处理潜在的异常</li><li>尽量去处理异常，切记只是简单地调用printStackTrace（）去打印输出</li><li>具体如何处理异常，要根据不同的业务需求和异常类型去决定</li><li>尽量添加finally语句块去释放占用的内存</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可能存在异常的方法</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="keyword">throws</span> MyException</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;传递的参数为：&quot;</span> +a );</span><br><span class="line"><span class="keyword">if</span>()&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> MyException(a); <span class="comment">//抛出</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Sysetm.out.println(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">test(<span class="number">11</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line"><span class="comment">//增加一些处理异常的代码~</span></span><br><span class="line">System.out.println(<span class="string">&quot;MyException=&gt;&quot;</span> +e);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="持续更新。。"><a href="#持续更新。。" class="headerlink" title="持续更新。。"></a>持续更新。。</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h2&gt;&lt;p&gt;首先必须声明数组变量，才能在程序中使用数组。下面是声明变量的语法：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="Java" scheme="http://blog.isk.ink/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>如何在CLion运行多个main函数</title>
    <link href="http://blog.isk.ink/2020/12/03/%E5%A6%82%E4%BD%95%E5%9C%A8CLion%E8%BF%90%E8%A1%8C%E5%A4%9A%E4%B8%AAmain%E5%87%BD%E6%95%B0/"/>
    <id>http://blog.isk.ink/2020/12/03/%E5%A6%82%E4%BD%95%E5%9C%A8CLion%E8%BF%90%E8%A1%8C%E5%A4%9A%E4%B8%AAmain%E5%87%BD%E6%95%B0/</id>
    <published>2020-12-03T13:11:12.000Z</published>
    <updated>2020-12-03T13:32:48.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在写C++的算法题时，经常遇到这样的问题，写了多个cpp文件，在CLion中编译报错不能同时存在多个main函数。</p><p>我上网找到了一个大佬写的很优雅的一个方法，非常简单。就是读字符串写文件，</p><p>直接修改一下CMake自动遍历文件即可。</p><p> <font size=" 5px">在CLion中写完一题，想写下一题，结果发现main函数不能运行</font></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在查找谷歌和百度多个大佬不同的方法后找到了一个最简单有效的方法</p><p>直接修改CMakelists.txt</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201203212413.png" alt="image-20201203212406853"></p><p>下面以我Project的CMakgeList.txt为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.16)</span><br><span class="line">project(untitled1)</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 14)</span><br><span class="line"></span><br><span class="line">file (GLOB files *.cpp *&#x2F;*.cpp)</span><br><span class="line">foreach (file $&#123;files&#125;)</span><br><span class="line">    string(REGEX REPLACE &quot;.+&#x2F;(.+)&#x2F;(.+)\\..*&quot; &quot;\\1-\\2&quot; exe $&#123;file&#125;)</span><br><span class="line">    add_executable ($&#123;exe&#125; $&#123;file&#125; )</span><br><span class="line">endforeach ()</span><br></pre></td></tr></table></figure><ol><li><p>在新建对应的xx.cpp文件后，创建main函数，在项目处右击，选择Reload CMake Project</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201203212504.png" alt="image-20201203212504319"></p></li></ol><ol start="2"><li>加载完成后就可以看到main函数前面出现了运行按钮，运行列表框也有了对应的运行选项。<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201203213142.png" alt="image-20201203213142118"></li></ol><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>这种方法不只是能遍历根目录下的一成，如果根目录下还有文件夹，则里面的cpp文件也会被识别。</p><p>例如</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果你只需要根目录下的 test 文件夹的所有 .cpp 文件</span></span><br><span class="line"><span class="keyword">file</span> (GLOB files <span class="keyword">test</span>/*.cpp)</span><br><span class="line"><span class="comment"># 如果你只有两层目录的话</span></span><br><span class="line"><span class="keyword">file</span> (GLOB files *.cpp */*.cpp)</span><br><span class="line"><span class="comment"># 同理，三层的话</span></span><br><span class="line"><span class="keyword">file</span> (GLOB files *.cpp */*.cpp */*/*.cpp)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 官方提供了一种递归的方法</span></span><br><span class="line"><span class="comment"># 这样在运行框会多一个 CMakeCXXCompilerId，不过无伤大雅</span></span><br><span class="line"><span class="keyword">file</span> (GLOB_RECURSE files *.cpp)</span><br></pre></td></tr></table></figure><p>如果我想在运行框显示 <strong>文件夹/文件名</strong> 应该怎么做，经过测试对于 <code>/</code> 应该是 CMAKE 中使用的符号，不能在其中使用，<code>\\1</code> 和 <code>\\2</code> 之间可以用 <code>.</code> 和 <code>-</code></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span>(REGEX REPLACE ``<span class="string">&quot;.+/(.+)/(.+)\\..*&quot;</span>` `<span class="string">&quot;\\1-\\2&quot;</span>` `exe <span class="variable">$&#123;``file``&#125;</span>)</span><br></pre></td></tr></table></figure><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在写C++的算法题时，经常遇到这样的问题，写了多个cpp文件，在CLion中编译报错不能同时存在多个main函数。&lt;/p&gt;
&lt;p&gt;我上网找到
      
    
    </summary>
    
    
      <category term="CLion" scheme="http://blog.isk.ink/categories/CLion/"/>
    
    
      <category term="CLion" scheme="http://blog.isk.ink/tags/CLion/"/>
    
  </entry>
  
  <entry>
    <title>Win10+Ubuntu双系统修改grub默认启动项</title>
    <link href="http://blog.isk.ink/2020/11/21/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E4%BF%AE%E6%94%B9grub%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E9%A1%B9/"/>
    <id>http://blog.isk.ink/2020/11/21/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E4%BF%AE%E6%94%B9grub%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E9%A1%B9/</id>
    <published>2020-11-21T15:38:35.000Z</published>
    <updated>2020-11-28T04:31:51.440Z</updated>
    
    <content type="html"><![CDATA[<p>  由于装了linux之后默认选择进入的是Linux系统，如果要进入win系统每次都要手动选择，真好啊。好个锤子，因为win系统的使用频率又大于Linux系统，所以不能忍，因此我把他默认启动项改成win10</p><p>具体步骤：（以下操作全部是在管理员权限下）</p><ul><li>打开终端（ctrl+alt+T），输入sudo  gedit  /etc/default/grub</li><li>验证密码，grub配置文件被打开</li><li>将弹出的文件中文本“GRUB-DEFAULT=0”中的0修改为2.（注意这里每个人可能不同，注意你选择系统时，如果你的win系统在第三个则修改为2，排序从零开始）</li><li><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004191000.png" alt="win10+ubuntu双系统修复ubuntu启动引导_槑宝包-CSDN博客"></li><li>保存文件。这里可能会弹出警告框，但是一般情况下好像并没什么关系</li><li>在终端输入sudo update-grub以更新配置</li><li>重启即可发现已修改完毕</li></ul><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>主要参考链接：</p><ol><li>启动盘制作：<a href="https://www.upandashi.com/upanqidong/">https://www.upandashi.com/upanqidong/</a></li><li>win10下安装ubuntu16.04双系统：<a href="https://blog.csdn.net/s717597589/article/details/79117112/">https://blog.csdn.net/s717597589/article/details/79117112/</a></li><li>分区引导：<a href="https://blog.csdn.net/Houchaoqun_XMU/article/details/72453187">https://blog.csdn.net/Houchaoqun_XMU/article/details/72453187</a></li><li>开机无启动项解决：<a href="https://blog.csdn.net/Houchaoqun_XMU/article/details/72476703">https://blog.csdn.net/Houchaoqun_XMU/article/details/72476703</a></li><li>开机无启动项解决：<a href="https://blog.csdn.net/Houchaoqun_XMU/article/details/72453187">https://blog.csdn.net/Houchaoqun_XMU/article/details/72453187</a></li><li>win10双系统修复：<a href="https://blog.csdn.net/qq_34562959/article/details/81095716">https://blog.csdn.net/qq_34562959/article/details/81095716</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  由于装了linux之后默认选择进入的是Linux系统，如果要进入win系统每次都要手动选择，真好啊。好个锤子，因为win系统的使用频率又大于Linux系统，所以不能忍，因此我把他默认启动项改成win10&lt;/p&gt;
&lt;p&gt;具体步骤：（以下操作全部是在管理员权限下）&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="双系统" scheme="http://blog.isk.ink/categories/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Ununtu" scheme="http://blog.isk.ink/tags/Ununtu/"/>
    
  </entry>
  
  <entry>
    <title>C语言中按位与/或/异或运算笔记</title>
    <link href="http://blog.isk.ink/2020/10/31/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E6%8C%89%E4%BD%8D%E4%B8%8E-%E6%88%96-%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.isk.ink/2020/10/31/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E6%8C%89%E4%BD%8D%E4%B8%8E-%E6%88%96-%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-31T02:14:09.000Z</published>
    <updated>2020-11-28T04:32:14.027Z</updated>
    
    <content type="html"><![CDATA[<p>  按位与（&amp;）和，或（丨），异或（^）运算都是属于位运算符是在二进制形式上进行的一个运算符.</p><p>很简单的三种运算，但是有时候会很容易记反。</p><h2 id="一-按位与运算"><a href="#一-按位与运算" class="headerlink" title="一.按位与运算"></a>一.按位与运算</h2><p>按位与运算口诀:同一则一。</p><p>1.只有当两个二进制数同位上的都是1时才可以为1，否则为0。例子↓</p><p>与（&amp;）运算: 1010   </p><p>​                         0110   </p><p>结果:                0010</p><h2 id="二-按位或运算"><a href="#二-按位或运算" class="headerlink" title="二.按位或运算"></a>二.按位或运算</h2><p>按位或运算口诀:同0则0。</p><p>只有当两个二进制数同位上的都是0时才是0，否则为1。例子↓</p><p>或（丨）运算: </p><p>1010    </p><p>0110  </p><p>结果:               </p><p> 1110</p><h2 id="三-按位异或运算"><a href="#三-按位异或运算" class="headerlink" title="三.按位异或运算"></a>三.按位异或运算</h2><p>按位异或口诀:相同则0,不同则1。</p><p>只有当同位上的两个数都同时为1或者为0时结果是0，否则为1例子↓</p><p>异或运算（^）: </p><p>1010     0110    </p><p>​                            </p><p>1110    1100</p><p>结果:                   </p><p>0100   1010</p><h2 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  按位与（&amp;amp;）和，或（丨），异或（^）运算都是属于位运算符是在二进制形式上进行的一个运算符.&lt;/p&gt;
&lt;p&gt;很简单的三种运算，但是有时候会很容易记反。&lt;/p&gt;
&lt;h2 id=&quot;一-按位与运算&quot;&gt;&lt;a href=&quot;#一-按位与运算&quot; class=&quot;headerlin
      
    
    </summary>
    
    
      <category term="C/C++" scheme="http://blog.isk.ink/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="http://blog.isk.ink/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>前端基础（二）</title>
    <link href="http://blog.isk.ink/2020/10/19/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://blog.isk.ink/2020/10/19/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-10-19T10:35:27.000Z</published>
    <updated>2021-02-04T03:16:02.135Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS练习1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    p&#123;</span><br><span class="line">        color: green;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这里的字是绿色的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>外部样式表：</p><p>​                可以将CSS样式编写到一个外部的CSS文件中，通过另一个link标签来引入外部的CSS文件</p><p>​                   想使用这些样式的网页都可以对其进行复用 </p><p>​                        将样式编写到外部的CSS文件中，可以提高浏览器的缓存机制。</p><p>​                           -从而加快网页的加载速度，提高用户的体验。</p><p>  格式：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h3><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>/*</p><p>这是CSS的注释，不同于HTML</p><p>  */    </p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>选择器  声明块</p><p>选择器 ，通过选择可以选中页面中的指定元素</p><p>   比如P的作用就是选中页面中的所有P元素</p><p>声明块 ，通过声明块来指定要为元素设置的样式</p><p>​              声明块有一个一个的声明组成</p><p>​              声明是一个名值对结构</p><p>​                                   一个样式名对应有个样式值，名和值之间以：连接欸，以；结尾</p><h3 id="常用选择器"><a href="#常用选择器" class="headerlink" title="常用选择器"></a>常用选择器</h3><h4 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h4><p>​            作用：根据标签名来选中指定的元素</p><p>​              语法： 标签名</p><p>​                例子：p{}    h1{}   div{}</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p>​             作用：根据元素的id属性值选中一个元素,id不能重复</p><p>​              语法：#id属性值{}</p><p>​               例子 ：#box{}   #red{}</p><p>引用方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#red&#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><p>class是一个标签的属性,他和id类似，不同的是class可以重复使用，</p><p>可以通过class属性来为元素分组,</p><p>可以为一个元素指定多个class属性。</p><p>作用：根据元素的class属性值选中一组元素</p><p>语法：  .class属性值</p><p>引用方法</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blue</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.abc</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;p class=&quot;blue abc&quot;&gt;这里是蓝色&lt;/p&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="通配选择器"><a href="#通配选择器" class="headerlink" title="通配选择器"></a>通配选择器</h4><p>有多少选多少,页面中所有元素全部选用</p><p>作用: 选中页面中的所有元素</p><p> 语法：*</p><p>不用引，直接全部默认使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">   color: &quot;red&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a</span><span class="selector-class">.b</span><span class="selector-class">.c</span>&#123;</span><br><span class="line">   <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/<span class="selector-tag">style</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">   &lt;div class=&quot;red&quot;&gt;我是div&lt;/div&gt;</span><br><span class="line">   &lt;p class=&quot;red&quot;&gt;我是p元素&lt;/p&gt;</span><br><span class="line">   &lt;div class=&quot;red2 a b c&quot;&gt;我是div2&lt;/div&gt;</span><br><span class="line">   &lt;<span class="selector-tag">h1</span>&gt;标题&lt;/<span class="selector-tag">h1</span>&gt;</span><br><span class="line">   &lt;<span class="selector-tag">span</span>&gt;哈哈&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201021162902.png" alt="image-20201021162902847"></p><h4 id="关系选择器"><a href="#关系选择器" class="headerlink" title="关系选择器"></a>关系选择器</h4><h5 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h5><p>​            作用：选择指定父元素的指定子元素</p><p>​            语法： 父元素  &gt;  子元素</p><p>​    </p><h5 id="后代元素选择器"><a href="#后代元素选择器" class="headerlink" title="后代元素选择器"></a>后代元素选择器</h5><p>​             作用：选定指定元素内的指定后代元素</p><p>​             语法： 祖先  后代</p><p>  选择下一个兄弟:</p><p>​              语法：前一个 + 后一个</p><p>选择下边所有的兄弟：</p><p>​              语法：兄 + 弟</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS基础&quot;&gt;&lt;a href=&quot;#CSS基础&quot; class=&quot;headerlink&quot; title=&quot;CSS基础&quot;&gt;&lt;/a&gt;CSS基础&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="CSS" scheme="http://blog.isk.ink/categories/CSS/"/>
    
    
      <category term="CSS" scheme="http://blog.isk.ink/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>win10和Ubuntu双系统环境下给Ubuntu增加磁盘空间</title>
    <link href="http://blog.isk.ink/2020/10/15/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%BB%99Ubuntu%E5%A2%9E%E5%8A%A0%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/"/>
    <id>http://blog.isk.ink/2020/10/15/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%BB%99Ubuntu%E5%A2%9E%E5%8A%A0%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</id>
    <published>2020-10-15T12:58:06.000Z</published>
    <updated>2020-11-28T04:11:49.251Z</updated>
    
    <content type="html"><![CDATA[<p>  笔记本上同时安装win10和Ubuntu20双系统，其中如果Ubuntu用来跑一些实验，随着时间推移，Ubuntu磁盘会逐渐不够使用，所以在此我参考多篇博客，找到了最为简单的方法。我试过在根目录下挂载磁盘的方法，但是这并不是真正的扩容。第一种方法并不是那么好用，而且会遇到各种各样的问题。</p><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>在win10系统，在win10下，使用“磁盘管理”-&gt;压缩卷””压缩出来一个未分配的分区出来，然后新建简单卷，按NFTS格式格式化。</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>进入Ubuntu系统，打开终端。</p><ul><li>下载 Gparted工具：</li></ul><p>​      使用apt-get install gparted命令进行下载，然后sudo gparted打开该分区程序。</p><ul><li><p>在Ubuntu下挂载刚才的磁盘df   -h查看其设备名（如/dev/nvme0n1p8），记录后卸载。</p></li><li><p>打开终端，sudo gparted打开Gparted软件，右键点击未分配的磁盘区（你在win10上分配出来的），将此分区格式化成ext4格式。</p></li><li><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201015213005.png" alt="image-20201015211805827"></p></li><li><p>用vim 编辑 /etc/fstab使新分进来的设备自动挂载，载末尾追加一行：</p></li><li><pre><code class="linux">/dev/nvme0n1p8  /home/username/raid  ext4  defaults  0  1</code></pre></li></ul><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>重启Ubuntu，那块分区会自动挂载在/home/username/raid下面。</p><p>可以用df -h查看</p><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>更改权限为普通用户可用：sudo  chmod 777 /home/username/raid</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>以上所有的username均是你自己的用户名 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  笔记本上同时安装win10和Ubuntu20双系统，其中如果Ubuntu用来跑一些实验，随着时间推移，Ubuntu磁盘会逐渐不够使用，所以在此我参考多篇博客，找到了最为简单的方法。我试过在根目录下挂载磁盘的方法，但是这并不是真正的扩容。第一种方法并不是那么好用，而且会遇
      
    
    </summary>
    
    
      <category term="双系统" scheme="http://blog.isk.ink/categories/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.isk.ink/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title> Ubuntu+win10双系统花屏问题</title>
    <link href="http://blog.isk.ink/2020/10/07/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%8A%B1%E5%B1%8F%E9%97%AE%E9%A2%98%E3%80%81/"/>
    <id>http://blog.isk.ink/2020/10/07/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%8A%B1%E5%B1%8F%E9%97%AE%E9%A2%98%E3%80%81/</id>
    <published>2020-10-07T03:43:56.000Z</published>
    <updated>2020-11-28T04:10:56.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  首先为什么装好了双系统后进入Ubuntu会花屏，但是进入高级模式，进入recovery mode 模式（恢复模式）就能进入.进入方式如下图。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130146.jpeg" alt="在Ubuntu上使用恢复模式及Recovery Mode各选项的使用方法"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130201.jpeg" alt="在Ubuntu上使用恢复模式及Recovery Mode各选项的使用方法"></p><p>因为Ubuntu自带nouveau驱动，会优先启动此驱动，所以你的英伟达驱动无效，所以花屏。</p><p>也就是说只要禁用nouveau驱动就可以了。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>首先开机时进入Ubuntu高级选项，有些人是英文的但不重要</p><p>禁用nouveau驱动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim  &#x2F;etc&#x2F;modprobe.d&#x2F;blacklist</span><br></pre></td></tr></table></figure><p>打开后用vim编辑格式添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset&#x3D;0</span><br></pre></td></tr></table></figure><p>保存后更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>或者用这种方法保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmmod nouveau</span><br></pre></td></tr></table></figure><p>接着安装英伟达驱动。也可以用liunx命令但是，我不会</p><p>但是可以用别的方法</p><p>进入Ubuntu的《软件和更新》，进附加驱动</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130207.jpeg" alt="img"></p><p>选一个就好，Ubuntu主要是来开发的，显卡没那么重要，也没必要装电脑显卡型号的专有驱动，也不用来打游戏，装了只是耗电。，</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>重启电脑 就可以进入第一个Ubuntu了</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130214.jpeg" alt="在Ubuntu上使用恢复模式及Recovery Mode各选项的使用方法"></p><p>最后 附上linus的一句话：Cheerleading any kind of inanimate object is silly.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  首先为什么装好了双系统后进入Ubuntu会花屏，但是进入高级模式，进入recovery mode 模式（恢复模式）就能进入.进入方式如下
      
    
    </summary>
    
    
      <category term="双系统" scheme="http://blog.isk.ink/categories/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.isk.ink/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title> win10+Ubuntu双系统的安装</title>
    <link href="http://blog.isk.ink/2020/10/04/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://blog.isk.ink/2020/10/04/Win10+Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/</id>
    <published>2020-10-04T10:13:13.000Z</published>
    <updated>2020-11-28T04:11:37.048Z</updated>
    
    <content type="html"><![CDATA[<p>​    双系统与虚拟机各有优点。</p><p>本次讨论如何装win10和Ubuntu双系统。本文简述，安装并不复杂，安装完成后出现的问题才复杂，所以安装就不多解释。只是重点部分说一下。</p><h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><ul><li><p>rufus软件（win10），<a href="https://rufus.ie/">下载地址</a></p></li><li><p>U盘一个，8G</p></li><li><p>Ubuntu镜像文件（win10）<a href="https://ubuntu.com/#download">下载地址</a></p></li><li><p>电脑一台</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1></li></ul><p>插入U盘，打开rufus，开始制作U盘启动盘</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004183531.png" alt="QQ图片20201004182820"></p><p>设备选择你的U盘，引导类型选择选你的iso文件（点右边的“选择”），其他默认</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004183552.jpeg" alt="img"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004183631.jpeg" alt="img"></p><p>然后等完成后就可以关闭rufus了，接着进入回收站，鼠标右击“此电脑”，选择“管理”</p><p>——磁盘管理</p><p>选择最后一个盘，点击压缩卷，分出你的另一个系统需要的磁盘大小，此时磁盘显示为未分配状态。（分小了也不要紧，下篇博客叫你如何扩展Ubuntu系统的磁盘）</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在win10下按住shift重启，大概3秒</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004184740.png" alt="image-20201004184740207"></p><p>出现这样，然后选择“使用设备”，选择你的U盘启动</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004184841.jpeg" alt="img"></p><p>选择简体中文，安装Ubuntu</p><p>等到了下面这部分，就很重要的</p><p>注意</p><p>注意！</p><p>注意！！千万选第三个</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004184957.jpeg" alt="img"></p><p>选择你的开始分离出来的空闲盘</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004191018.png" alt="image-20201004185640676"></p><p>挂载点 初学者填一个“  /”就好，不够用还可以加</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004191011.png" alt="image-20201004185747186"></p><p>剩下的时区选上海，电脑的用户名，电脑名称，密码就自己设置</p><p>接着安装完后，会让你点重启</p><p>重启就完了。</p><p>然后会进入GUN GRUB界面，类似于这样</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004191000.png" alt="win10+ubuntu双系统修复ubuntu启动引导_槑宝包-CSDN博客"></p><p>如果你选第一个花屏的话，不过有些电脑没有，我下个博客有解决方法，我也遇到了。</p><p>参考博客：<a href="https://blog.csdn.net/wuShiJingZuo/article/details/104981090?utm_source=app">https://blog.csdn.net/wuShiJingZuo/article/details/104981090?utm_source=app</a></p><p><a href="https://www.bilibili.com/video/BV11k4y1k7Li">https://www.bilibili.com/video/BV11k4y1k7Li</a></p><p><a href="https://www.cnblogs.com/yychuyu/p/12960365.html">https://www.cnblogs.com/yychuyu/p/12960365.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    双系统与虚拟机各有优点。&lt;/p&gt;
&lt;p&gt;本次讨论如何装win10和Ubuntu双系统。本文简述，安装并不复杂，安装完成后出现的问题才复杂，所以安装就不多解释。只是重点部分说一下。&lt;/p&gt;
&lt;h1 id=&quot;工具准备&quot;&gt;&lt;a href=&quot;#工具准备&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="双系统" scheme="http://blog.isk.ink/categories/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Untuntu" scheme="http://blog.isk.ink/tags/Untuntu/"/>
    
  </entry>
  
  <entry>
    <title>Serverless实现B站打卡签到</title>
    <link href="http://blog.isk.ink/2020/09/30/%E4%B8%8D%E6%98%AF%E5%90%A7%EF%BC%8CServerless%E8%BF%98%E8%83%BD%E8%BF%99%E4%B9%88%E7%8E%A9%EF%BC%9F/"/>
    <id>http://blog.isk.ink/2020/09/30/%E4%B8%8D%E6%98%AF%E5%90%A7%EF%BC%8CServerless%E8%BF%98%E8%83%BD%E8%BF%99%E4%B9%88%E7%8E%A9%EF%BC%9F/</id>
    <published>2020-09-30T14:51:21.000Z</published>
    <updated>2020-11-28T04:15:45.653Z</updated>
    
    <content type="html"><![CDATA[<p>   窗外已经秋高气爽，内心蠢蠢欲动，但工作不能落！</p><p> 虽然我们是做技术的，但依然有个成为程序员大V的梦想。短视频领域风生水起，那就B站走起，让大家能更好地了解Serverless。</p><h3 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h3><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>首先你要在腾讯云注册</p><p>这个脚本是实现B站自动签到打卡且不浪费闲置资源</p><p>该脚本通过Serverless Framework部署，可以实现自动定时打卡和邮件推送通知的功能。</p><p>脚本来自</p><p>github.com/happy888888/BiliExp</p><p>1.安装命令行工具Serverless Framework</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g  serverless</span><br></pre></td></tr></table></figure><p>2.下载项目模板代码。并进入模板目录<code>biliexp-demo</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sls inin biliexp-demo</span><br><span class="line">cd biliexp-demo</span><br></pre></td></tr></table></figure><p>3.打开config.json文档，根据说明填入对应内容，cookieDatas由浏览器获取，email处用于填入接受通知的邮件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;cookieDatas&quot;:[</span><br><span class="line">       &#123;</span><br><span class="line">           &quot;SESSDATA&quot;: &quot;&quot;,</span><br><span class="line">           &quot;bili_jct&quot;: &quot;&quot;,</span><br><span class="line">           &quot;DedeUserID&quot;: &quot;&quot;</span><br><span class="line">       &#125;</span><br><span class="line">   ],</span><br><span class="line">   &quot;email&quot;: &quot;&quot; ,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.打开<code>bilibili</code>官网，登陆自己账户获取SEEDATA,bili_jct,DedeUserID (获取方式参考下图)</p><p>并将其填入config.json文档中。见3</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200930232919.webp" alt="img"></p><p>5.通过命令 <code>sls deploy</code> 完成部署，部署成功后，每日可自动触发，为您完成签到打卡</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200930232908.png" alt="image-20200930231900584"></p><p>中途会出现一个二维码，需要用微信扫码登陆腾讯云授权腾讯云函数</p><p>6.脚本测试</p><p>部署完毕后登陆腾讯云函数控制台，击「测试」按钮检测函数运行结果，可以看到函数调用成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200930232859.png" alt="image-20200930232859187"></p><p>当然，除了 B 站签到，它也可以再拓展为其他平台的玩法，但是不要拿去干坏事哦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   窗外已经秋高气爽，内心蠢蠢欲动，但工作不能落！&lt;/p&gt;
&lt;p&gt; 虽然我们是做技术的，但依然有个成为程序员大V的梦想。短视频领域风生水起，那就B站走起，让大家能更好地了解Serverless。&lt;/p&gt;
&lt;h3 id=&quot;进入正题&quot;&gt;&lt;a href=&quot;#进入正题&quot; clas
      
    
    </summary>
    
    
      <category term="腾讯云" scheme="http://blog.isk.ink/categories/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
    
      <category term="腾讯云" scheme="http://blog.isk.ink/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title> 前端基础 （一）</title>
    <link href="http://blog.isk.ink/2020/09/20/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://blog.isk.ink/2020/09/20/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-09-20T14:19:47.000Z</published>
    <updated>2021-02-04T03:15:54.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h2><p>在网页中HTML专门用来负责网页的结构</p><p>所以在使用html标签时；应该关注的时标签的语义，而不是它的格式。</p><h3 id="网页结构"><a href="#网页结构" class="headerlink" title="网页结构"></a>网页结构</h3><p>结构（HTML）</p><p>表现（CSS）</p><p>行为（JavaScript）</p><h3 id="HTML标准格式"><a href="#HTML标准格式" class="headerlink" title="HTML标准格式"></a>HTML标准格式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- html的根标签网页的所有内容都要写在根标签里--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--head是网页的头部，head中的内容不会在网页中直接出现，主要帮助搜索引擎来接谢网页--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- meta标签是用来设置网页的元数据，这里meta用来设置网页的字符集，避免乱码问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> =<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--title中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页的主要内容--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--body是html的子元素，表示网页主体，网页中的所有的可见内容都应该写在body里--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--h1网页的以及标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>网页的大标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标签中的属性"><a href="#标签中的属性" class="headerlink" title="标签中的属性"></a>标签中的属性</h3><p>属性只能在开始标签中书写。例 color=”red”,其“第三个为红色。size=”3”，字体大小为3像素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 这是我的<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>  <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span>第三个<span class="tag">&lt;/<span class="name">font</span>&gt;</span>属性<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文档声明（doctype）"><a href="#文档声明（doctype）" class="headerlink" title="文档声明（doctype）"></a>文档声明（doctype）</h3><p>—文档声明是告诉浏览器当前网页的版本</p><p>—html5的文档声明 </p><p>&lt;! doctype html&gt;</p><p>&lt;! Doctype HTML&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> = <span class="string">&quot;utf -8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="VScode使用技巧"><a href="#VScode使用技巧" class="headerlink" title="VScode使用技巧"></a>VScode使用技巧</h3><p>！+回车 快捷生成html标准格式；</p><p>CTRL+斜杠 快捷注释；</p><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span>空格</span><br><span class="line"><span class="symbol">&amp;gt;</span>  大于号</span><br><span class="line"><span class="symbol">&amp;lt;</span>   小于号</span><br><span class="line"><span class="symbol">&amp;copy;</span>  版权符号</span><br></pre></td></tr></table></figure><h3 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h3><p>meta数据主要用于设置网页中的一些元数据，元数据不是给用户看到</p><ul><li><p>charset 指定网页的字符集</p></li><li><p>name 指定的数据的名称</p></li><li><p>content 指定的数据的内容</p><ul><li><p>keywords 表示网页的关键字 </p><p><code>-&lt;meta name =&quot;Keywords&quot; content=&quot;   网上购物,手机&quot;&gt;</code></p></li></ul></li><li><p>description 用于指定网站的描述</p></li></ul><ul><li><code>-&lt;meta name =&quot;description&quot; content =&quot;京东是一个购物网站&quot;&gt;</code></li></ul><ul><li><p>网页跳转，将页面重定向到另一个网站</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;3;url=https://www.baidu.com&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 3秒后跳转百度--&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>一般情况标题标签只会使用到h1~h3.</p><p>p标签表示页面中的一个段落。</p><p>p也是一个块元素。</p><p>hgroup用来分组；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>one<span class="tag">&lt;/<span class="name">h</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 行内元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span> <span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- strong表示强调，重要内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   blockquote 表示一个长引用</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">    这是长引用的一句话</span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- q表示一个短引用--&gt;</span></span><br><span class="line">子曰<span class="tag">&lt;<span class="name">q</span>&gt;</span> 学而时习之<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h3><p>header 表示网页的头部</p><p>main 表示网页的主题部分（一个页面中只会有一个main）</p><p>footer表示网页的底部</p><p>nav 表示网页中的导航</p><p>aside 和网页主体相关的其他内容（侧边栏）</p><p>article 表示一个独立的文章</p><p>section 表示一个独立的区块，上边的标签都不能表示时使用section</p><p>div没有语义，就是表示一个区块，目前来说还是我们主要的布局元素，div可以替代以上所有标签。</p><p>span行内元素，没有任何的语义，一般用以早网页中选取文字。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">无序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span> 第二行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">有序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>有行号的第一行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">定义列表<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">定义列表使用dl标签来创建一个定义列表</span></span><br><span class="line"><span class="comment">使用dt来表示定义的内容</span></span><br><span class="line"><span class="comment">使用dd来对内容进行解释说明--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构的说明1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构的说明2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构的说明3<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>列表间可以相互嵌套</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>从一个链接跳到另一个链接</p><p>使用a来定义超链接，</p><p>​          属性：</p><p>​                 href指定跳转的目标路径</p><p>​                                - 只可以是一个外展元素</p><p>vscode使用alt+shift+⬇可以向下复制；</p><p>超链接也是一个行内元素，在a标签中可以嵌套除他自身之外的任何元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span> 超链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> =<span class="string">&quot; https://www.taobao.com&quot;</span>&gt;</span>超链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>我们在需要跳转一个服务器內部的页面时，一般我们都会使用相对路径，都会使用。或。。开头</p><p>​                       ./表示当前文件夹目录</p><p>​                ../表示当前文件夹的上一级目录</p><p>向上返回三级就../../../</p><p>​            ./可以省略不写，如果不写./也不写../则就相当于写了./ </p><p>​       ./表示当前文件所在的目录··</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./target.html&quot;</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200925182814.png" alt="QQ图片20200925182755"></p><h3 id="超链接的其他用法"><a href="#超链接的其他用法" class="headerlink" title="超链接的其他用法"></a>超链接的其他用法</h3><p>target属性：，用来指定超链接打开的位置</p><p>​        可选值:</p><p>​                       _self 默认值，在当前网页中打开超链接</p><p>​                       _blank 在一个新的网页中打开超链接</p><p>将href属性设置为#，这样点击超链接以后，页面不会发生跳转，而是直接转到当前页面的顶部的位置。</p><h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">src</span> =<span class="string">&quot;./img/1.gif&quot;</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--同文件夹下--&gt;</span></span><br></pre></td></tr></table></figure><p>属性：</p><p>  src属性指定的是外部图片的路径（路径的规则与超链接是一样的)</p><p>alt 图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片，如果不写alt属性图片则不会被搜索引擎所找到。</p><p>width 图片的宽度（单位是像素）</p><p>height 图片的高度</p><p>​                  —宽带和高度中如果只修改了一个，则另一个会等比例缩放</p><p>注意：一般在pc端，不建议修改图片的大小。需要多大的图片就剪裁多大。但是在移动端经常需要对图片进行缩放。</p><p>主要是大图放小，不会丢失清晰度</p><h3 id="音视频播放"><a href="#音视频播放" class="headerlink" title="音视频播放"></a>音视频播放</h3><p>audio 标签用来向页面中引入一个外部的音频文件的</p><p>​           音视频引入时，默认情况不允许用户自己控制播放停止</p><p>属性：</p><p>​         controls 是否 允许用户控制播放</p><p>​          autoplay 音频文件是否自动播放</p><p>​                          –如果设置了autoplay 则音乐在打开页面时会自动播放</p><p>​                                但是目前来说大部分浏览器都不会自动对音乐进行播放</p><p>​          loop        音乐是否循环播放</p><p>格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span> <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>除了通过src来指定外部文件的路径以外，还可以通过source来指定文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">       对不起，您的浏览器不支持播放音频！请升级浏览器！</span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/audio.ogg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">embed</span>  <span class="attr">src</span>=<span class="string">&quot;./source/audio.mp3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;audio/mp3&quot;</span> <span class="attr">with</span>=<span class="string">:</span>&quot;<span class="attr">400</span>&quot; <span class="attr">height</span> =<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用video标签来向网页中引入一个视频</p><p>​         -使用方法机和audio基本是一样的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/flower.webm&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/flower.mp4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./source/flower.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>``</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTML基础&quot;&gt;&lt;a href=&quot;#HTML基础&quot; class=&quot;headerlink&quot; title=&quot;HTML基础&quot;&gt;&lt;/a&gt;HTML基础&lt;/h2&gt;&lt;p&gt;在网页中HTML专门用来负责网页的结构&lt;/p&gt;
&lt;p&gt;所以在使用html标签时；应该关注的时标签的语义，而不
      
    
    </summary>
    
    
      <category term="HTML" scheme="http://blog.isk.ink/categories/HTML/"/>
    
    
      <category term="HTML" scheme="http://blog.isk.ink/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>SecureCRT 下载及使用</title>
    <link href="http://blog.isk.ink/2020/08/30/SecureCRT-%E4%B8%8B%E8%BD%BD%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://blog.isk.ink/2020/08/30/SecureCRT-%E4%B8%8B%E8%BD%BD%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2020-08-30T04:33:58.000Z</published>
    <updated>2020-09-09T03:26:46.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是SecureCRT"><a href="#什么是SecureCRT" class="headerlink" title="什么是SecureCRT?"></a>什么是SecureCRT?</h2><p>SecureCRT 是一款支持SSH1和SSH2的终端仿真程序，这个程序能够在windows系统中登陆UNIX或Linux的服务器主机并且还能进行管理设置，是一款非常强大的ssh传输软件，是用于连接运行包括Windows、UNIX和VMS的理想工具。</p><p>我个人主要用来连接我的Linux虚拟机。</p><p>SecureCRT下载</p><p>可以用我的百度云盘链接；复制这段内容后打开百度网盘手机App，操作更方便哦 链接:<a href="https://pan.baidu.com/s/1Z4AJyNzXhP6t2Yx1BLMNow">https://pan.baidu.com/s/1Z4AJyNzXhP6t2Yx1BLMNow</a> 提取码:nxgn</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830131508.png" alt="image-20200830131242862"></p><p>点击程序安装，一直next，默认安装位置就行。</p><p><strong>安装完成后先别打开软件。</strong></p><h2 id="SecureCRT破解"><a href="#SecureCRT破解" class="headerlink" title="SecureCRT破解"></a>SecureCRT破解</h2><p>1.返回桌面，右击快捷键，选择打开文件位置</p><p>2.将破解机复制到文件位置（复制keygen.exe到C:\Program Files\VanDyke Software\SecureCRT)</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132045.png" alt="image-20200830132045111"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132612.png" alt="image-20200830132612944"></p><p>当然你的界面也可能是这样，我半年前弄的忘记了一些细节。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132727.webp" alt="img"></p><p>3.然后鼠标右键，以管理员身份运行keygen.exe，点击“Patch”，选择SecureCRT.exe可执行文件，打开，然后会提示成功。</p><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13355955-3ff4b34be7ccb4e4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/408/format/webp" alt="img"></p><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13355955-49ba7889d2b46b53.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/600/format/webp" alt="img"></p><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13355955-d50b7aaadbb663bc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/408/format/webp" alt="img"></p><p>4、点击确定后，又会弹出一个文件选择框，选择里面的“LicenseHelper.exe”文件，打开，也会显示成功，然后在点击“确定”即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://upload-images.jianshu.io/upload_images/13355955-bc0d62fe23d348d8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/600/format/webp" alt="img"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132838.webp" alt="img"></p><p>5.然后打开软件，点击“OK”，点击“Enter license Data”，开始注册软件。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112031.webp" alt=""></p><p>6.然后将注册机中的“name”后面的内容复制到软件页面，点击“下一步”。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112327.webp" alt="img"></p><p>7.然后它会提示许可注册错误，点击“Enter license Manually”。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112414.webp" alt="img"></p><p>8.然后将注册机内的Name和Company框中内容复制到软件页面对应的位置，点击“下一步”。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112441.webp" alt="img"></p><p>9.再将注册机内的Serialmumber和License key框中的内容复制到软件页面对应的位置，点击：“下一步”。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112450.webp" alt="img"></p><p>10.SecureCRT破解完成，以后都可以免费使用了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112503.webp" alt="img"></p><p>11.勾选下面的选项，点击“ok”，进入软件。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112635.webp" alt="img"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112556.webp" alt="img"></p><h2 id="SecureCRT使用"><a href="#SecureCRT使用" class="headerlink" title="SecureCRT使用"></a>SecureCRT使用</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是SecureCRT&quot;&gt;&lt;a href=&quot;#什么是SecureCRT&quot; class=&quot;headerlink&quot; title=&quot;什么是SecureCRT?&quot;&gt;&lt;/a&gt;什么是SecureCRT?&lt;/h2&gt;&lt;p&gt;SecureCRT 是一款支持SSH1和SSH2的终端仿
      
    
    </summary>
    
    
    
      <category term="SecureCRT" scheme="http://blog.isk.ink/tags/SecureCRT/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机联网方法</title>
    <link href="http://blog.isk.ink/2020/06/28/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.isk.ink/2020/06/28/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95/</id>
    <published>2020-06-28T07:00:58.000Z</published>
    <updated>2020-08-13T05:32:04.498Z</updated>
    
    <content type="html"><![CDATA[<p>本文是对Codesheep视频中方法的改进。以及我自己按照CodeSheep所写搭建虚拟机过程中踩过的坑，更多的是改进了一些CodeSheep的方法。详细请关注CodeSheep微信公众号。</p><p>虚拟机不联网基本没什么用处，所以无论想用虚拟机做什么都需要连接互联网，我发现程序羊的联网方法有些麻烦，且难以实现。反正我用虚拟机装Ubuntu没有联网成功，可能是我太菜了，后来自己摸索找到了一种更简单的方法。作为对程序羊方法的补充。详细请移步 <a href="https://mp.weixin.qq.com/s/onVwwEQ1DAwbvK7qS2YNxg">https://mp.weixin.qq.com/s/onVwwEQ1DAwbvK7qS2YNxg</a></p><h2 id="VMware中的设置"><a href="#VMware中的设置" class="headerlink" title="VMware中的设置"></a>VMware中的设置</h2><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628152303.png" alt="image-20200628152256912"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628152942.png" alt="image-20200628152942219"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628153110.png" alt="image-20200628153110637"></p><h2 id="本地网络设置"><a href="#本地网络设置" class="headerlink" title="本地网络设置"></a>本地网络设置</h2><p>好的 ，接下来就是本地网络的设置               控制面板<strong><strong>网络和Internet</strong></strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628153906.png" alt="image-20200628153906686"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628154049.png" alt="image-20200628154049236"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132705.png" alt="image-20200813132705514"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132655.png" alt="image-20200813132637004"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132855.png" alt="image-20200813132747231"></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132842.png" alt="image-20200813132811601"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文是对Codesheep视频中方法的改进。以及我自己按照CodeSheep所写搭建虚拟机过程中踩过的坑，更多的是改进了一些CodeSheep的方法。详细请关注CodeSheep微信公众号。&lt;/p&gt;
&lt;p&gt;虚拟机不联网基本没什么用处，所以无论想用虚拟机做什么都需要连接互联网
      
    
    </summary>
    
    
    
      <category term="VMware" scheme="http://blog.isk.ink/tags/VMware/"/>
    
  </entry>
  
</feed>
