<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>昨日晴空</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.isk.ink/"/>
  <updated>2020-11-04T08:56:44.065Z</updated>
  <id>http://blog.isk.ink/</id>
  
  <author>
    <name>Asakiii</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title> 【算法】找最小值</title>
    <link href="http://blog.isk.ink/2020/11/04/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%89%BE%E6%9C%80%E5%B0%8F%E5%80%BC/"/>
    <id>http://blog.isk.ink/2020/11/04/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%89%BE%E6%9C%80%E5%B0%8F%E5%80%BC/</id>
    <published>2020-11-04T08:47:47.000Z</published>
    <updated>2020-11-04T08:56:44.065Z</updated>
    
    <content type="html"><![CDATA[<p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201104165055.png" alt="image-20201104165048224"></p><p>​    </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;<span class="comment">//using</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a[<span class="number">10001</span>];<span class="comment">//定义</span></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;<span class="comment">//输入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cin</span>&gt;&gt;a[i];<span class="comment">//循环输入</span></span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);<span class="comment">//快速排序</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a[<span class="number">1</span>];<span class="comment">//输出最小答案</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//华丽结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; data-src=&quot;https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201104165055.png&quot; alt=&quot;image-202011041650482
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>【算法】不高兴的津津</title>
    <link href="http://blog.isk.ink/2020/11/03/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E4%B8%8D%E9%AB%98%E5%85%B4%E7%9A%84%E6%B4%A5%E6%B4%A5/"/>
    <id>http://blog.isk.ink/2020/11/03/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E4%B8%8D%E9%AB%98%E5%85%B4%E7%9A%84%E6%B4%A5%E6%B4%A5/</id>
    <published>2020-11-03T13:51:53.000Z</published>
    <updated>2020-11-04T08:54:34.981Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>津津上初中了。妈妈认为津津应该更加用功学习，所以津津除了上学之外，还要参加妈妈为她报名的各科复习班。另外每周妈妈还会送她去学习朗诵、舞蹈和钢琴。但是津津如果一天上课超过八个小时就会不高兴，而且上得越久就会越不高兴。假设津津不会因为其它事不高兴，并且她的不高兴不会持续到第二天。请你帮忙检查一下津津下周的日程安排，看看下周她会不会不高兴；如果会的话，哪天最不高兴。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包括77行数据，分别表示周一到周日的日程安排。每行包括两个小于1010的非负整数，用空格隔开，分别表示津津在学校上课的时间和妈妈安排她上课的时间。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个数字。如果不会不高兴则输出00，如果会则输出最不高兴的是周几（用1, 2, 3, 4, 5, 6, 71,2,3,4,5,6,7分别表示周一，周二，周三，周四，周五，周六，周日）。如果有两天或两天以上不高兴的程度相当，则输出时间最靠前的一天。</p><h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p><strong>输入 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">6 2</span><br><span class="line">7 2</span><br><span class="line">5 3</span><br><span class="line">5 4</span><br><span class="line">0 4</span><br><span class="line">0 6</span><br></pre></td></tr></table></figure><p><strong>输出 #1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,y=<span class="number">0</span>,<span class="built_in">max</span>=<span class="number">0</span>,day=<span class="number">0</span>;<span class="comment">//a，b是一天两个学习时间，day是星期，max存时间的和</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">8</span>;i++)&#123;   <span class="comment">//一周七天，所以循环7次</span></span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;          <span class="comment">//输入第i天的时间</span></span><br><span class="line">        <span class="keyword">if</span>((x+y)&gt;<span class="built_in">max</span> &amp;&amp; (x+y)&gt;<span class="number">8</span>)&#123;   </span><br><span class="line">            <span class="built_in">max</span>=x+y;</span><br><span class="line">            day=i;       <span class="comment">//若时间和大于max，就让max等于这个和（毕竟是循环至此最大的），同时day赋值i；i是循环的次数（即星期）</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">continue</span>; <span class="comment">//反之终止此次循环</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;day;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;津津上初中了。妈妈认为津津应该更加用功学习，所以津津除了上学之外，还要参加妈妈为她报名的各科复习班。另外每周妈妈还会送她去学
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>三位数排序</title>
    <link href="http://blog.isk.ink/2020/11/02/%E4%B8%89%E4%BD%8D%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
    <id>http://blog.isk.ink/2020/11/02/%E4%B8%89%E4%BD%8D%E6%95%B0%E6%8E%92%E5%BA%8F/</id>
    <published>2020-11-02T08:02:36.000Z</published>
    <updated>2020-11-04T08:55:31.826Z</updated>
    
    <content type="html"><![CDATA[<p>​     </p><h3 id="一、快排"><a href="#一、快排" class="headerlink" title="一、快排"></a>一、快排</h3><p>简单粗暴：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s[<span class="number">0</span>]&gt;&gt;s[<span class="number">1</span>]&gt;&gt;s[<span class="number">2</span>];</span><br><span class="line">sort(s,s+<span class="number">3</span>);<span class="comment">//表示排序p数组的[0到2]位置，注意sort默认从小到大排</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s[<span class="number">0</span>]&lt;&lt;<span class="string">' '</span>&lt;&lt;s[<span class="number">1</span>]&lt;&lt;<span class="string">' '</span>&lt;&lt;s[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、模拟"><a href="#二、模拟" class="headerlink" title="二、模拟"></a>二、模拟</h3><p>通过三次比较交换来排序:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b) swap(a,b);<span class="comment">//swap就是交换两个数</span></span><br><span class="line"><span class="keyword">if</span>(a&gt;c) swap(a,c);</span><br><span class="line"><span class="keyword">if</span>(b&gt;c) swap(b,c);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">' '</span>&lt;&lt;b&lt;&lt;<span class="string">' '</span>&lt;&lt;c;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个原理大家可以把所有情况列出来可以发现这是可行的的。</p><h3 id="三、桶排"><a href="#三、桶排" class="headerlink" title="三、桶排"></a>三、桶排</h3><p>因为a、b、c&lt;100所以桶排放心用啊:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; s;</span><br><span class="line"><span class="keyword">int</span> mx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">mx=<span class="built_in">max</span>(mx,a);<span class="comment">//小优化</span></span><br><span class="line">s[a]++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=mx;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是通过放入相应桶中，从序号为0桶去枚举，桶里有东西就输出序号。</p><h3 id="四、堆排"><a href="#四、堆排" class="headerlink" title="四、堆排"></a>四、堆排</h3><p>STL堆排模板直接用上去：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span> &gt;,greater&lt;<span class="keyword">int</span>&gt; &gt;q2;<span class="comment">//小根堆 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">q2.push(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;q2.top()&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">q2.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​     &lt;/p&gt;
&lt;h3 id=&quot;一、快排&quot;&gt;&lt;a href=&quot;#一、快排&quot; class=&quot;headerlink&quot; title=&quot;一、快排&quot;&gt;&lt;/a&gt;一、快排&lt;/h3&gt;&lt;p&gt;简单粗暴：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>C语言中按位与/或/异或运算笔记</title>
    <link href="http://blog.isk.ink/2020/10/31/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E6%8C%89%E4%BD%8D%E4%B8%8E-%E6%88%96-%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.isk.ink/2020/10/31/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E6%8C%89%E4%BD%8D%E4%B8%8E-%E6%88%96-%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-31T02:14:09.000Z</published>
    <updated>2020-10-31T02:26:02.885Z</updated>
    
    <content type="html"><![CDATA[<p><font size=6>  按位与（&amp;）和，或（丨），异或（^）运算都是属于位运算符</font></p><h1 id="是在二进制形式上进行的一个运算符"><a href="#是在二进制形式上进行的一个运算符" class="headerlink" title="是在二进制形式上进行的一个运算符"></a>是在二进制形式上进行的一个运算符</h1><h2 id="很简单的三种运算，但是有时候会很容易记反。"><a href="#很简单的三种运算，但是有时候会很容易记反。" class="headerlink" title="很简单的三种运算，但是有时候会很容易记反。"></a>很简单的三种运算，但是有时候会很容易记反。</h2><h2 id="一-按位与运算"><a href="#一-按位与运算" class="headerlink" title="一.按位与运算"></a>一.按位与运算</h2><h3 id="按位与运算口诀-同一则一。"><a href="#按位与运算口诀-同一则一。" class="headerlink" title="按位与运算口诀:同一则一。"></a>按位与运算口诀:同一则一。</h3><h3 id="1-只有当两个二进制数同位上的都是1时才可以为1，否则为0。例子↓"><a href="#1-只有当两个二进制数同位上的都是1时才可以为1，否则为0。例子↓" class="headerlink" title="1.只有当两个二进制数同位上的都是1时才可以为1，否则为0。例子↓"></a>1.只有当两个二进制数同位上的都是1时才可以为1，否则为0。例子↓</h3><p>与（&amp;）运算: 1010   </p><p>​                         0110   </p><p>结果:                0010</p><h2 id="二-按位或运算"><a href="#二-按位或运算" class="headerlink" title="二.按位或运算"></a>二.按位或运算</h2><h3 id="按位或运算口诀-同0则0。"><a href="#按位或运算口诀-同0则0。" class="headerlink" title="按位或运算口诀:同0则0。"></a>按位或运算口诀:同0则0。</h3><h3 id="只有当两个二进制数同位上的都是0时才是0，否则为1。例子↓"><a href="#只有当两个二进制数同位上的都是0时才是0，否则为1。例子↓" class="headerlink" title="只有当两个二进制数同位上的都是0时才是0，否则为1。例子↓"></a>只有当两个二进制数同位上的都是0时才是0，否则为1。例子↓</h3><p>或（丨）运算: </p><p>1010    </p><p>0110  </p><p>结果:               </p><p> 1110</p><h2 id="三-按位异或运算"><a href="#三-按位异或运算" class="headerlink" title="三.按位异或运算"></a>三.按位异或运算</h2><h3 id="按位异或口诀-相同则0-不同则1。"><a href="#按位异或口诀-相同则0-不同则1。" class="headerlink" title="按位异或口诀:相同则0,不同则1。"></a>按位异或口诀:相同则0,不同则1。</h3><h3 id="只有当同位上的两个数都同时为1或者为0时结果是0，否则为1例子↓"><a href="#只有当同位上的两个数都同时为1或者为0时结果是0，否则为1例子↓" class="headerlink" title="只有当同位上的两个数都同时为1或者为0时结果是0，否则为1例子↓"></a>只有当同位上的两个数都同时为1或者为0时结果是0，否则为1例子↓</h3><p>异或运算（^）: </p><p>1010     0110    </p><p>​                            </p><p>1110    1100</p><p>结果:                   </p><p>0100   1010</p><h2 id="结束！"><a href="#结束！" class="headerlink" title="结束！"></a>结束！</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font size=6&gt;  按位与（&amp;amp;）和，或（丨），异或（^）运算都是属于位运算符&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&quot;是在二进制形式上进行的一个运算符&quot;&gt;&lt;a href=&quot;#是在二进制形式上进行的一个运算符&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>前端基础（二）</title>
    <link href="http://blog.isk.ink/2020/10/19/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://blog.isk.ink/2020/10/19/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-10-19T10:35:27.000Z</published>
    <updated>2020-10-21T08:48:41.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS基础"><a href="#CSS基础" class="headerlink" title="CSS基础"></a>CSS基础</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS练习1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    p&#123;</span><br><span class="line">        color: green;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这里的字是绿色的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>外部样式表：</p><p>​                可以将CSS样式编写到一个外部的CSS文件中，通过另一个link标签来引入外部的CSS文件</p><p>​                   想使用这些样式的网页都可以对其进行复用 </p><p>​                        将样式编写到外部的CSS文件中，可以提高浏览器的缓存机制。</p><p>​                           -从而加快网页的加载速度，提高用户的体验。</p><p>  格式：</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./style.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h3><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>/*</p><p>这是CSS的注释，不同于HTML</p><p>  */    </p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>选择器  声明块</p><p>选择器 ，通过选择可以选中页面中的指定元素</p><p>   比如P的作用就是选中页面中的所有P元素</p><p>声明块 ，通过声明块来指定要为元素设置的样式</p><p>​              声明块有一个一个的声明组成</p><p>​              声明是一个名值对结构</p><p>​                                   一个样式名对应有个样式值，名和值之间以：连接欸，以；结尾</p><h3 id="常用选择器"><a href="#常用选择器" class="headerlink" title="常用选择器"></a>常用选择器</h3><h4 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h4><p>​            作用：根据标签名来选中指定的元素</p><p>​              语法： 标签名</p><p>​                例子：p{}    h1{}   div{}</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p>​             作用：根据元素的id属性值选中一个元素,id不能重复</p><p>​              语法：#id属性值{}</p><p>​               例子 ：#box{}   #red{}</p><p>引用方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#red&#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"red"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><p>class是一个标签的属性,他和id类似，不同的是class可以重复使用，</p><p>可以通过class属性来为元素分组,</p><p>可以为一个元素指定多个class属性。</p><p>作用：根据元素的class属性值选中一组元素</p><p>语法：  .class属性值</p><p>引用方法</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blue</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.abc</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;p class="blue abc"&gt;这里是蓝色&lt;/p&gt;</span><br></pre></td></tr></table></figure><h4 id="通配选择器"><a href="#通配选择器" class="headerlink" title="通配选择器"></a>通配选择器</h4><p>有多少选多少,页面中所有元素全部选用</p><p>作用: 选中页面中的所有元素</p><p> 语法：*</p><p>不用引，直接全部默认使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">   color: "red";</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a</span><span class="selector-class">.b</span><span class="selector-class">.c</span>&#123;</span><br><span class="line">   <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">   &lt;div class="red"&gt;我是div&lt;/div&gt;</span><br><span class="line">   &lt;p class="red"&gt;我是p元素&lt;/p&gt;</span><br><span class="line">   &lt;div class="red2 a b c"&gt;我是div2&lt;/div&gt;</span><br><span class="line">   &lt;h1&gt;标题&lt;/h1&gt;</span><br><span class="line">   &lt;span&gt;哈哈&lt;/span&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201021162902.png" alt="image-20201021162902847"></p><h4 id="关系选择器"><a href="#关系选择器" class="headerlink" title="关系选择器"></a>关系选择器</h4><h5 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h5><p>​            作用：选择指定父元素的指定子元素</p><p>​            语法： 父元素  &gt;  子元素</p><p>​    </p><h5 id="后代元素选择器"><a href="#后代元素选择器" class="headerlink" title="后代元素选择器"></a>后代元素选择器</h5><p>​             作用：选定指定元素内的指定后代元素</p><p>​             语法： 祖先  后代</p><p>  选择下一个兄弟:</p><p>​              语法：前一个 + 后一个</p><p>选择下边所有的兄弟：</p><p>​              语法：兄 + 弟</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS基础&quot;&gt;&lt;a href=&quot;#CSS基础&quot; class=&quot;headerlink&quot; title=&quot;CSS基础&quot;&gt;&lt;/a&gt;CSS基础&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="web" scheme="http://blog.isk.ink/categories/web/"/>
    
    
      <category term="CSS" scheme="http://blog.isk.ink/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>win10和Ubuntu双系统环境下给Ubuntu增加磁盘空间</title>
    <link href="http://blog.isk.ink/2020/10/15/win10%E5%92%8CUbuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%BB%99Ubuntu%E5%A2%9E%E5%8A%A0%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/"/>
    <id>http://blog.isk.ink/2020/10/15/win10%E5%92%8CUbuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%BB%99Ubuntu%E5%A2%9E%E5%8A%A0%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</id>
    <published>2020-10-15T12:58:06.000Z</published>
    <updated>2020-10-15T13:32:06.512Z</updated>
    
    <content type="html"><![CDATA[<p>  笔记本上同时安装win10和Ubuntu20双系统，其中如果Ubuntu用来跑一些实验，随着时间推移，Ubuntu磁盘会逐渐不够使用，所以在此我参考多篇博客，找到了最为简单的方法。我试过在根目录下挂载磁盘的方法，但是这并不是真正的扩容。第一种方法并不是那么好用，而且会遇到各种各样的问题。</p><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>在win10系统，在win10下，使用“磁盘管理”-&gt;压缩卷””压缩出来一个未分配的分区出来，然后新建简单卷，按NFTS格式格式化。</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>进入Ubuntu系统，打开终端。</p><ul><li>下载 Gparted工具：</li></ul><p>​      使用apt-get install gparted命令进行下载，然后sudo gparted打开该分区程序。</p><ul><li><p>在Ubuntu下挂载刚才的磁盘df   -h查看其设备名（如/dev/nvme0n1p8），记录后卸载。</p></li><li><p>打开终端，sudo gparted打开Gparted软件，右键点击未分配的磁盘区（你在win10上分配出来的），将此分区格式化成ext4格式。</p></li><li><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201015213005.png" alt="image-20201015211805827"></p></li><li><p>用vim 编辑 /etc/fstab使新分进来的设备自动挂载，载末尾追加一行：</p></li><li><pre><code class="linux">/dev/nvme0n1p8  /home/username/raid  ext4  defaults  0  1</code></pre></li></ul><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>重启Ubuntu，那块分区会自动挂载在/home/username/raid下面。</p><p>可以用df -h查看</p><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>更改权限为普通用户可用：sudo  chmod 777 /home/username/raid</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>以上所有的username均是你自己的用户名 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  笔记本上同时安装win10和Ubuntu20双系统，其中如果Ubuntu用来跑一些实验，随着时间推移，Ubuntu磁盘会逐渐不够使用，所以在此我参考多篇博客，找到了最为简单的方法。我试过在根目录下挂载磁盘的方法，但是这并不是真正的扩容。第一种方法并不是那么好用，而且会遇
      
    
    </summary>
    
    
    
      <category term="Ubuntu" scheme="http://blog.isk.ink/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title> Ubuntu+win10双系统花屏问题</title>
    <link href="http://blog.isk.ink/2020/10/07/Ubuntu-win10%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%8A%B1%E5%B1%8F%E9%97%AE%E9%A2%98%E3%80%81/"/>
    <id>http://blog.isk.ink/2020/10/07/Ubuntu-win10%E5%8F%8C%E7%B3%BB%E7%BB%9F%E8%8A%B1%E5%B1%8F%E9%97%AE%E9%A2%98%E3%80%81/</id>
    <published>2020-10-07T03:43:56.000Z</published>
    <updated>2020-10-15T13:29:49.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  首先为什么装好了双系统后进入Ubuntu会花屏，但是进入高级模式，进入recovery mode 模式（恢复模式）就能进入.进入方式如下图。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130146.jpeg" alt="在Ubuntu上使用恢复模式及Recovery Mode各选项的使用方法"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130201.jpeg" alt="在Ubuntu上使用恢复模式及Recovery Mode各选项的使用方法"></p><p>因为Ubuntu自带nouveau驱动，会优先启动此驱动，所以你的英伟达驱动无效，所以花屏。</p><p>也就是说只要禁用nouveau驱动就可以了。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>首先开机时进入Ubuntu高级选项，有些人是英文的但不重要</p><p>禁用nouveau驱动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim  &#x2F;etc&#x2F;modprobe.d&#x2F;blacklist</span><br></pre></td></tr></table></figure><p>打开后用vim编辑格式添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset&#x3D;0</span><br></pre></td></tr></table></figure><p>保存后更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>或者用这种方法保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmmod nouveau</span><br></pre></td></tr></table></figure><p>接着安装英伟达驱动。也可以用liunx命令但是，我不会</p><p>但是可以用别的方法</p><p>进入Ubuntu的《软件和更新》，进附加驱动</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130207.jpeg" alt="img"></p><p>选一个就好，Ubuntu主要是来开发的，显卡没那么重要，也没必要装电脑显卡型号的专有驱动，也不用来打游戏，装了只是耗电。，</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>重启电脑 就可以进入第一个Ubuntu了</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201007130214.jpeg" alt="在Ubuntu上使用恢复模式及Recovery Mode各选项的使用方法"></p><p>最后 附上linus的一句话：Cheerleading any kind of inanimate object is silly.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  首先为什么装好了双系统后进入Ubuntu会花屏，但是进入高级模式，进入recovery mode 模式（恢复模式）就能进入.进入方式如下
      
    
    </summary>
    
    
    
      <category term="Ubuntu" scheme="http://blog.isk.ink/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title> win10+Ubuntu双系统的安装</title>
    <link href="http://blog.isk.ink/2020/10/04/win10%E5%92%8CUbuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://blog.isk.ink/2020/10/04/win10%E5%92%8CUbuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85/</id>
    <published>2020-10-04T10:13:13.000Z</published>
    <updated>2020-10-04T11:21:45.562Z</updated>
    
    <content type="html"><![CDATA[<p>​    双系统与虚拟机各有优点。</p><p>本次讨论如何装win10和Ubuntu双系统。本文简述，安装并不复杂，安装完成后出现的问题才复杂，所以安装就不多解释。只是重点部分说一下。</p><h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><ul><li><p>rufus软件（win10），<a href="https://rufus.ie/" target="_blank" rel="noopener">下载地址</a></p></li><li><p>U盘一个，8G</p></li><li><p>Ubuntu镜像文件（win10）<a href="https://ubuntu.com/#download" target="_blank" rel="noopener">下载地址</a></p></li><li><p>电脑一台</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1></li></ul><p>插入U盘，打开rufus，开始制作U盘启动盘</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004183531.png" alt="QQ图片20201004182820"></p><p>设备选择你的U盘，引导类型选择选你的iso文件（点右边的“选择”），其他默认</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004183552.jpeg" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004183631.jpeg" alt="img"></p><p>然后等完成后就可以关闭rufus了，接着进入回收站，鼠标右击“此电脑”，选择“管理”</p><p>——磁盘管理</p><p>选择最后一个盘，点击压缩卷，分出你的另一个系统需要的磁盘大小，此时磁盘显示为未分配状态。（分小了也不要紧，下篇博客叫你如何扩展Ubuntu系统的磁盘）</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在win10下按住shift重启，大概3秒</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004184740.png" alt="image-20201004184740207"></p><p>出现这样，然后选择“使用设备”，选择你的U盘启动</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004184841.jpeg" alt="img"></p><p>选择简体中文，安装Ubuntu</p><p>等到了下面这部分，就很重要的</p><p>注意</p><p>注意！</p><p>注意！！千万选第三个</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004184957.jpeg" alt="img"></p><p>选择你的开始分离出来的空闲盘</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004191018.png" alt="image-20201004185640676"></p><p>挂载点 初学者填一个“  /”就好，不够用还可以加</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004191011.png" alt="image-20201004185747186"></p><p>剩下的时区选上海，电脑的用户名，电脑名称，密码就自己设置</p><p>接着安装完后，会让你点重启</p><p>重启就完了。</p><p>然后会进入GUN GRUB界面，类似于这样</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20201004191000.png" alt="win10+ubuntu双系统修复ubuntu启动引导_槑宝包-CSDN博客"></p><p>如果你选第一个花屏的话，不过有些电脑没有，我下个博客有解决方法，我也遇到了。</p><p>参考博客：<a href="https://blog.csdn.net/wuShiJingZuo/article/details/104981090?utm_source=app" target="_blank" rel="noopener">https://blog.csdn.net/wuShiJingZuo/article/details/104981090?utm_source=app</a></p><p><a href="https://www.bilibili.com/video/BV11k4y1k7Li" target="_blank" rel="noopener">https://www.bilibili.com/video/BV11k4y1k7Li</a></p><p><a href="https://www.cnblogs.com/yychuyu/p/12960365.html" target="_blank" rel="noopener">https://www.cnblogs.com/yychuyu/p/12960365.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    双系统与虚拟机各有优点。&lt;/p&gt;
&lt;p&gt;本次讨论如何装win10和Ubuntu双系统。本文简述，安装并不复杂，安装完成后出现的问题才复杂，所以安装就不多解释。只是重点部分说一下。&lt;/p&gt;
&lt;h1 id=&quot;工具准备&quot;&gt;&lt;a href=&quot;#工具准备&quot; class=&quot;h
      
    
    </summary>
    
    
    
      <category term="双系统" scheme="http://blog.isk.ink/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Serverless实现B站打卡签到</title>
    <link href="http://blog.isk.ink/2020/09/30/%E4%B8%8D%E6%98%AF%E5%90%A7%EF%BC%8CServerless%E8%BF%98%E8%83%BD%E8%BF%99%E4%B9%88%E7%8E%A9%EF%BC%9F/"/>
    <id>http://blog.isk.ink/2020/09/30/%E4%B8%8D%E6%98%AF%E5%90%A7%EF%BC%8CServerless%E8%BF%98%E8%83%BD%E8%BF%99%E4%B9%88%E7%8E%A9%EF%BC%9F/</id>
    <published>2020-09-30T14:51:21.000Z</published>
    <updated>2020-10-04T10:01:02.688Z</updated>
    
    <content type="html"><![CDATA[<p>   窗外已经秋高气爽，内心蠢蠢欲动，但工作不能落！</p><p> 虽然我们是做技术的，但依然有个成为程序员大V的梦想。短视频领域风生水起，那就B站走起，让大家能更好地了解Serverless。</p><h3 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h3><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>首先你要在腾讯云注册</p><p>这个脚本是实现B站自动签到打卡且不浪费闲置资源</p><p>该脚本通过Serverless Framework部署，可以实现自动定时打卡和邮件推送通知的功能。</p><p>脚本来自</p><p>github.com/happy888888/BiliExp</p><p>1.安装命令行工具Serverless Framework</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g  serverless</span><br></pre></td></tr></table></figure><p>2.下载项目模板代码。并进入模板目录<code>biliexp-demo</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sls inin biliexp-demo</span><br><span class="line">cd biliexp-demo</span><br></pre></td></tr></table></figure><p>3.打开config.json文档，根据说明填入对应内容，cookieDatas由浏览器获取，email处用于填入接受通知的邮件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;cookieDatas&quot;:[</span><br><span class="line">       &#123;</span><br><span class="line">           &quot;SESSDATA&quot;: &quot;&quot;,</span><br><span class="line">           &quot;bili_jct&quot;: &quot;&quot;,</span><br><span class="line">           &quot;DedeUserID&quot;: &quot;&quot;</span><br><span class="line">       &#125;</span><br><span class="line">   ],</span><br><span class="line">   &quot;email&quot;: &quot;&quot; ,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.打开<code>bilibili</code>官网，登陆自己账户获取SEEDATA,bili_jct,DedeUserID (获取方式参考下图)</p><p>并将其填入config.json文档中。见3</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200930232919.webp" alt="img"></p><p>5.通过命令 <code>sls deploy</code> 完成部署，部署成功后，每日可自动触发，为您完成签到打卡</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200930232908.png" alt="image-20200930231900584"></p><p>中途会出现一个二维码，需要用微信扫码登陆腾讯云授权腾讯云函数</p><p>6.脚本测试</p><p>部署完毕后登陆腾讯云函数控制台，击「测试」按钮检测函数运行结果，可以看到函数调用成功</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200930232859.png" alt="image-20200930232859187"></p><p>当然，除了 B 站签到，它也可以再拓展为其他平台的玩法，但是不要拿去干坏事哦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   窗外已经秋高气爽，内心蠢蠢欲动，但工作不能落！&lt;/p&gt;
&lt;p&gt; 虽然我们是做技术的，但依然有个成为程序员大V的梦想。短视频领域风生水起，那就B站走起，让大家能更好地了解Serverless。&lt;/p&gt;
&lt;h3 id=&quot;进入正题&quot;&gt;&lt;a href=&quot;#进入正题&quot; clas
      
    
    </summary>
    
    
    
      <category term="腾讯云" scheme="http://blog.isk.ink/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title> 前端基础 （一）</title>
    <link href="http://blog.isk.ink/2020/09/20/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://blog.isk.ink/2020/09/20/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-09-20T14:19:47.000Z</published>
    <updated>2020-10-19T10:36:45.064Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h2><p>在网页中HTML专门用来负责网页的结构</p><p>所以在使用html标签时；应该关注的时标签的语义，而不是它的格式。</p><h3 id="网页结构"><a href="#网页结构" class="headerlink" title="网页结构"></a>网页结构</h3><p>结构（HTML）</p><p>表现（CSS）</p><p>行为（JavaScript）</p><h3 id="HTML标准格式"><a href="#HTML标准格式" class="headerlink" title="HTML标准格式"></a>HTML标准格式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- html的根标签网页的所有内容都要写在根标签里--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--head是网页的头部，head中的内容不会在网页中直接出现，主要帮助搜索引擎来接谢网页--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- meta标签是用来设置网页的元数据，这里meta用来设置网页的字符集，避免乱码问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> =<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--title中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页的主要内容--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--body是html的子元素，表示网页主体，网页中的所有的可见内容都应该写在body里--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--h1网页的以及标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>网页的大标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="标签中的属性"><a href="#标签中的属性" class="headerlink" title="标签中的属性"></a>标签中的属性</h3><p>属性只能在开始标签中书写。例 color=”red”,其“第三个为红色。size=”3”，字体大小为3像素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> 这是我的<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>  <span class="attr">size</span>=<span class="string">"3"</span>&gt;</span>第三个<span class="tag">&lt;/<span class="name">font</span>&gt;</span>属性<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文档声明（doctype）"><a href="#文档声明（doctype）" class="headerlink" title="文档声明（doctype）"></a>文档声明（doctype）</h3><p>—文档声明是告诉浏览器当前网页的版本</p><p>—html5的文档声明 </p><p>&lt;! doctype html&gt;</p><p>&lt;! Doctype HTML&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span> = <span class="string">"utf -8"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="VScode使用技巧"><a href="#VScode使用技巧" class="headerlink" title="VScode使用技巧"></a>VScode使用技巧</h3><p>！+回车 快捷生成html标准格式；</p><p>CTRL+斜杠 快捷注释；</p><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span>空格</span><br><span class="line"><span class="symbol">&amp;gt;</span>  大于号</span><br><span class="line"><span class="symbol">&amp;lt;</span>   小于号</span><br><span class="line"><span class="symbol">&amp;copy;</span>  版权符号</span><br></pre></td></tr></table></figure><h3 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h3><p>meta数据主要用于设置网页中的一些元数据，元数据不是给用户看到</p><ul><li><p>charset 指定网页的字符集</p></li><li><p>name 指定的数据的名称</p></li><li><p>content 指定的数据的内容</p><ul><li><p>keywords 表示网页的关键字 </p><p><code>-&lt;meta name =&quot;Keywords&quot; content=&quot;   网上购物,手机&quot;&gt;</code></p></li></ul></li><li><p>description 用于指定网站的描述</p></li></ul><ul><li><code>-&lt;meta name =&quot;description&quot; content =&quot;京东是一个购物网站&quot;&gt;</code></li></ul><ul><li><p>网页跳转，将页面重定向到另一个网站</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"3;url=https://www.baidu.com"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 3秒后跳转百度--&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>一般情况标题标签只会使用到h1~h3.</p><p>p标签表示页面中的一个段落。</p><p>p也是一个块元素。</p><p>hgroup用来分组；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>one<span class="tag">&lt;/<span class="name">h</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 行内元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span> <span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- strong表示强调，重要内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   blockquote 表示一个长引用</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">    这是长引用的一句话</span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- q表示一个短引用--&gt;</span></span><br><span class="line">子曰<span class="tag">&lt;<span class="name">q</span>&gt;</span> 学而时习之<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h3><p>header 表示网页的头部</p><p>main 表示网页的主题部分（一个页面中只会有一个main）</p><p>footer表示网页的底部</p><p>nav 表示网页中的导航</p><p>aside 和网页主体相关的其他内容（侧边栏）</p><p>article 表示一个独立的文章</p><p>section 表示一个独立的区块，上边的标签都不能表示时使用section</p><p>div没有语义，就是表示一个区块，目前来说还是我们主要的布局元素，div可以替代以上所有标签。</p><p>span行内元素，没有任何的语义，一般用以早网页中选取文字。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">无序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span> 第二行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">有序列表</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>有行号的第一行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">定义列表<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">定义列表使用dl标签来创建一个定义列表</span></span><br><span class="line"><span class="comment">使用dt来表示定义的内容</span></span><br><span class="line"><span class="comment">使用dd来对内容进行解释说明--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>结构<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构的说明1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构的说明2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>结构的说明3<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p>列表间可以相互嵌套</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>从一个链接跳到另一个链接</p><p>使用a来定义超链接，</p><p>​          属性：</p><p>​                 href指定跳转的目标路径</p><p>​                                - 只可以是一个外展元素</p><p>vscode使用alt+shift+⬇可以向下复制；</p><p>超链接也是一个行内元素，在a标签中可以嵌套除他自身之外的任何元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">"https://www.baidu.com"</span>&gt;</span> 超链接1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> =<span class="string">" https://www.taobao.com"</span>&gt;</span>超链接2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>我们在需要跳转一个服务器內部的页面时，一般我们都会使用相对路径，都会使用。或。。开头</p><p>​                       ./表示当前文件夹目录</p><p>​                ../表示当前文件夹的上一级目录</p><p>向上返回三级就../../../</p><p>​            ./可以省略不写，如果不写./也不写../则就相当于写了./ </p><p>​       ./表示当前文件所在的目录··</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./target.html"</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200925182814.png" alt="QQ图片20200925182755"></p><h3 id="超链接的其他用法"><a href="#超链接的其他用法" class="headerlink" title="超链接的其他用法"></a>超链接的其他用法</h3><p>target属性：，用来指定超链接打开的位置</p><p>​        可选值:</p><p>​                       _self 默认值，在当前网页中打开超链接</p><p>​                       _blank 在一个新的网页中打开超链接</p><p>将href属性设置为#，这样点击超链接以后，页面不会发生跳转，而是直接转到当前页面的顶部的位置。</p><h3 id="图片标签"><a href="#图片标签" class="headerlink" title="图片标签"></a>图片标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"500"</span> <span class="attr">src</span> =<span class="string">"./img/1.gif"</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--同文件夹下--&gt;</span></span><br></pre></td></tr></table></figure><p>属性：</p><p>  src属性指定的是外部图片的路径（路径的规则与超链接是一样的)</p><p>alt 图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片，如果不写alt属性图片则不会被搜索引擎所找到。</p><p>width 图片的宽度（单位是像素）</p><p>height 图片的高度</p><p>​                  —宽带和高度中如果只修改了一个，则另一个会等比例缩放</p><p>注意：一般在pc端，不建议修改图片的大小。需要多大的图片就剪裁多大。但是在移动端经常需要对图片进行缩放。</p><p>主要是大图放小，不会丢失清晰度</p><h3 id="音视频播放"><a href="#音视频播放" class="headerlink" title="音视频播放"></a>音视频播放</h3><p>audio 标签用来向页面中引入一个外部的音频文件的</p><p>​           音视频引入时，默认情况不允许用户自己控制播放停止</p><p>属性：</p><p>​         controls 是否 允许用户控制播放</p><p>​          autoplay 音频文件是否自动播放</p><p>​                          –如果设置了autoplay 则音乐在打开页面时会自动播放</p><p>​                                但是目前来说大部分浏览器都不会自动对音乐进行播放</p><p>​          loop        音乐是否循环播放</p><p>格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"./source/audio.mp3"</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span> <span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"./source/audio.mp3"</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>除了通过src来指定外部文件的路径以外，还可以通过source来指定文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">       对不起，您的浏览器不支持播放音频！请升级浏览器！</span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./source/audio.mp3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./source/audio.ogg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">embed</span>  <span class="attr">src</span>=<span class="string">"./source/audio.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mp3"</span> <span class="attr">with</span>=<span class="string">:</span>"<span class="attr">400</span>" <span class="attr">height</span> =<span class="string">"300"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用video标签来向网页中引入一个视频</p><p>​         -使用方法机和audio基本是一样的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./source/flower.webm"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./source/flower.mp4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./source/flower.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>``</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTML基础&quot;&gt;&lt;a href=&quot;#HTML基础&quot; class=&quot;headerlink&quot; title=&quot;HTML基础&quot;&gt;&lt;/a&gt;HTML基础&lt;/h2&gt;&lt;p&gt;在网页中HTML专门用来负责网页的结构&lt;/p&gt;
&lt;p&gt;所以在使用html标签时；应该关注的时标签的语义，而不
      
    
    </summary>
    
    
      <category term="web" scheme="http://blog.isk.ink/categories/web/"/>
    
    
      <category term="HTML" scheme="http://blog.isk.ink/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Java学习笔记一</title>
    <link href="http://blog.isk.ink/2020/09/09/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
    <id>http://blog.isk.ink/2020/09/09/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</id>
    <published>2020-09-09T03:08:22.000Z</published>
    <updated>2020-10-17T09:04:32.570Z</updated>
    
    <content type="html"><![CDATA[<h3 id="public-class和-class的区别"><a href="#public-class和-class的区别" class="headerlink" title="public class和 class的区别"></a>public class和 class的区别</h3><ul><li><p>一个Java源文件当中可以定义多个class</p></li><li><p>一个java源文件当中public的class不是必须的</p></li><li><p>一个class会定义生成一个xxx.class字节码文件</p></li><li><p>一个Java源文件当中定义公开的类的话，只能有一个，并且该类名称必须和JAVA源文件名称一致、</p></li><li><p>每一个class当中都可以编写main方法，都可以设定程序的入口，向执行B.class中的main方法：</p><p>— java B</p></li></ul><h3 id="Java-包-package"><a href="#Java-包-package" class="headerlink" title="Java 包(package)"></a>Java 包(package)</h3><p>为了更好地组织类，Java 提供了包机制，用于区别类名的命名空间。</p><h4 id="包的作用"><a href="#包的作用" class="headerlink" title="包的作用"></a>包的作用</h4><ul><li>1、把功能相似或相关的类或接口组织在同一个包中，方便类的查找和使用。</li><li>2、如同文件夹一样，包也采用了树形目录的存储方式。同一个包中的类名字是不同的，不同的包中的类的名字是可以相同的，当同时调用两个不同包中相同类名的类时，应该加上包名加以区别。因此，包可以避免名字冲突。</li><li>3、包也限定了访问权限，拥有包访问权限的类才能访问某个包中的类。</li></ul><p>Java 使用包（package）这种机制是为了防止命名冲突，访问控制，提供搜索和定位类（class）、接口、枚举（enumerations）和注释（annotation）等。</p><h3 id="源文件的保存"><a href="#源文件的保存" class="headerlink" title="源文件的保存"></a>源文件的保存</h3><p>如果源文件中有多个类，那么只能有一个类是public类；如果有一个类是public类，那么源文件的名字必需与这个类的名字完全相同，扩展名是.java;如果源文件没有public类，那么源文件的名字只要和某个类的名字相同，并且扩展名是.java就可以。</p><h3 id="方法复用"><a href="#方法复用" class="headerlink" title="方法复用"></a>方法复用</h3><p>方法对应的英语单词叫：Method</p><p>方法在C语言中叫做函数/Function</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">                Main.sumInt(<span class="number">888</span>,<span class="number">888</span>);</span><br><span class="line">                Main.sumInt(<span class="number">888</span>,<span class="number">111</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//单独定义一个方法</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sumInt</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">                <span class="keyword">int</span> c= a + b;</span><br><span class="line">                System.out.println(a + <span class="string">"+"</span> + b +<span class="string">"="</span>+c) ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面方法是下面代码的优化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">888</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">888</span>;</span><br><span class="line">        <span class="keyword">int</span> c = a + b;</span><br><span class="line">        System.out.println(a + <span class="string">"+"</span> + b + <span class="string">"="</span> + c);</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">888</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">111</span>;</span><br><span class="line">        <span class="keyword">int</span> c = a + b;</span><br><span class="line">        System.out.println(a + <span class="string">"+"</span> + b + <span class="string">"="</span> + c);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="一个小的递归计算5！"><a href="#一个小的递归计算5！" class="headerlink" title="一个小的递归计算5！"></a>一个小的递归计算5！</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(method(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">method</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> n * method(n - <span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h3><p>类名首字母大写</p><p>变量名和方法名的首字母小写</p><p>运用驼峰标识</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;public-class和-class的区别&quot;&gt;&lt;a href=&quot;#public-class和-class的区别&quot; class=&quot;headerlink&quot; title=&quot;public class和 class的区别&quot;&gt;&lt;/a&gt;public class和 class的
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SecureCRT 下载及使用</title>
    <link href="http://blog.isk.ink/2020/08/30/SecureCRT-%E4%B8%8B%E8%BD%BD%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://blog.isk.ink/2020/08/30/SecureCRT-%E4%B8%8B%E8%BD%BD%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2020-08-30T04:33:58.000Z</published>
    <updated>2020-09-09T03:26:46.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是SecureCRT"><a href="#什么是SecureCRT" class="headerlink" title="什么是SecureCRT?"></a>什么是SecureCRT?</h2><p>SecureCRT 是一款支持SSH1和SSH2的终端仿真程序，这个程序能够在windows系统中登陆UNIX或Linux的服务器主机并且还能进行管理设置，是一款非常强大的ssh传输软件，是用于连接运行包括Windows、UNIX和VMS的理想工具。</p><p>我个人主要用来连接我的Linux虚拟机。</p><p>SecureCRT下载</p><p>可以用我的百度云盘链接；复制这段内容后打开百度网盘手机App，操作更方便哦 链接:<a href="https://pan.baidu.com/s/1Z4AJyNzXhP6t2Yx1BLMNow" target="_blank" rel="noopener">https://pan.baidu.com/s/1Z4AJyNzXhP6t2Yx1BLMNow</a> 提取码:nxgn</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830131508.png" alt="image-20200830131242862"></p><p>点击程序安装，一直next，默认安装位置就行。</p><p><strong>安装完成后先别打开软件。</strong></p><h2 id="SecureCRT破解"><a href="#SecureCRT破解" class="headerlink" title="SecureCRT破解"></a>SecureCRT破解</h2><p>1.返回桌面，右击快捷键，选择打开文件位置</p><p>2.将破解机复制到文件位置（复制keygen.exe到C:\Program Files\VanDyke Software\SecureCRT)</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132045.png" alt="image-20200830132045111"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132612.png" alt="image-20200830132612944"></p><p>当然你的界面也可能是这样，我半年前弄的忘记了一些细节。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132727.webp" alt="img"></p><p>3.然后鼠标右键，以管理员身份运行keygen.exe，点击“Patch”，选择SecureCRT.exe可执行文件，打开，然后会提示成功。</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/13355955-3ff4b34be7ccb4e4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/408/format/webp" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/13355955-49ba7889d2b46b53.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/600/format/webp" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/13355955-d50b7aaadbb663bc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/408/format/webp" alt="img"></p><p>4、点击确定后，又会弹出一个文件选择框，选择里面的“LicenseHelper.exe”文件，打开，也会显示成功，然后在点击“确定”即可。</p><p><img src= "/img/loading.gif" data-src="https://upload-images.jianshu.io/upload_images/13355955-bc0d62fe23d348d8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/600/format/webp" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200830132838.webp" alt="img"></p><p>5.然后打开软件，点击“OK”，点击“Enter license Data”，开始注册软件。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112031.webp" alt=""></p><p>6.然后将注册机中的“name”后面的内容复制到软件页面，点击“下一步”。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112327.webp" alt="img"></p><p>7.然后它会提示许可注册错误，点击“Enter license Manually”。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112414.webp" alt="img"></p><p>8.然后将注册机内的Name和Company框中内容复制到软件页面对应的位置，点击“下一步”。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112441.webp" alt="img"></p><p>9.再将注册机内的Serialmumber和License key框中的内容复制到软件页面对应的位置，点击：“下一步”。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112450.webp" alt="img"></p><p>10.SecureCRT破解完成，以后都可以免费使用了。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112503.webp" alt="img"></p><p>11.勾选下面的选项，点击“ok”，进入软件。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112635.webp" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200909112556.webp" alt="img"></p><h2 id="SecureCRT使用"><a href="#SecureCRT使用" class="headerlink" title="SecureCRT使用"></a>SecureCRT使用</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是SecureCRT&quot;&gt;&lt;a href=&quot;#什么是SecureCRT&quot; class=&quot;headerlink&quot; title=&quot;什么是SecureCRT?&quot;&gt;&lt;/a&gt;什么是SecureCRT?&lt;/h2&gt;&lt;p&gt;SecureCRT 是一款支持SSH1和SSH2的终端仿
      
    
    </summary>
    
    
    
      <category term="SecureCRT" scheme="http://blog.isk.ink/tags/SecureCRT/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机联网方法</title>
    <link href="http://blog.isk.ink/2020/06/28/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.isk.ink/2020/06/28/%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95/</id>
    <published>2020-06-28T07:00:58.000Z</published>
    <updated>2020-08-13T05:32:04.498Z</updated>
    
    <content type="html"><![CDATA[<p>本文是对Codesheep视频中方法的改进。以及我自己按照CodeSheep所写搭建虚拟机过程中踩过的坑，更多的是改进了一些CodeSheep的方法。详细请关注CodeSheep微信公众号。</p><p>虚拟机不联网基本没什么用处，所以无论想用虚拟机做什么都需要连接互联网，我发现程序羊的联网方法有些麻烦，且难以实现。反正我用虚拟机装Ubuntu没有联网成功，可能是我太菜了，后来自己摸索找到了一种更简单的方法。作为对程序羊方法的补充。详细请移步 <a href="https://mp.weixin.qq.com/s/onVwwEQ1DAwbvK7qS2YNxg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/onVwwEQ1DAwbvK7qS2YNxg</a></p><h2 id="VMware中的设置"><a href="#VMware中的设置" class="headerlink" title="VMware中的设置"></a>VMware中的设置</h2><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628152303.png" alt="image-20200628152256912"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628152942.png" alt="image-20200628152942219"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628153110.png" alt="image-20200628153110637"></p><h2 id="本地网络设置"><a href="#本地网络设置" class="headerlink" title="本地网络设置"></a>本地网络设置</h2><p>好的 ，接下来就是本地网络的设置               控制面板<strong><strong>网络和Internet</strong></strong></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628153906.png" alt="image-20200628153906686"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200628154049.png" alt="image-20200628154049236"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132705.png" alt="image-20200813132705514"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132655.png" alt="image-20200813132637004"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132855.png" alt="image-20200813132747231"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200813132842.png" alt="image-20200813132811601"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文是对Codesheep视频中方法的改进。以及我自己按照CodeSheep所写搭建虚拟机过程中踩过的坑，更多的是改进了一些CodeSheep的方法。详细请关注CodeSheep微信公众号。&lt;/p&gt;
&lt;p&gt;虚拟机不联网基本没什么用处，所以无论想用虚拟机做什么都需要连接互联网
      
    
    </summary>
    
    
    
      <category term="VMware" scheme="http://blog.isk.ink/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>VMware虚拟机从零开始</title>
    <link href="http://blog.isk.ink/2020/06/20/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/"/>
    <id>http://blog.isk.ink/2020/06/20/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/</id>
    <published>2020-06-20T14:36:57.000Z</published>
    <updated>2020-06-20T15:29:40.792Z</updated>
    
    <content type="html"><![CDATA[<p>本文章是对CodeSheep文章的补充，以及我自己按照CodeSheep所写搭建虚拟机过程中踩过的坑，更多的是改进了一些CodeSheep的方法。详细请关注CodeSheep微信公众号。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>物理宿主机系统：Win10家庭版</p><p>虚拟机软件：VMware® Workstation 15 Pro</p><p>Linux版本： ubuntu-20.04-desktop-amd64.iso</p><p>Vmware可以去官网下载，注册密钥网上也有很多，使用一次永不过期。</p><p>Linux的Ubuntu也可以在官网下载，推荐科学上网，要不就在百度云上找吧，对刚接触Linux不推荐使用CentOS.</p><h2 id="安装Linux系统"><a href="#安装Linux系统" class="headerlink" title="安装Linux系统"></a>安装Linux系统</h2><h3 id="创建新的虚拟机"><a href="#创建新的虚拟机" class="headerlink" title="创建新的虚拟机"></a>创建新的虚拟机</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620225533.png" alt="image-20200620225527860"></p><h3 id="选择虚拟机硬件兼容"><a href="#选择虚拟机硬件兼容" class="headerlink" title="选择虚拟机硬件兼容"></a>选择虚拟机硬件兼容</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620225648.png" alt="image-20200620225647948"></p><h3 id="选择镜像文件"><a href="#选择镜像文件" class="headerlink" title="选择镜像文件"></a>选择镜像文件</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620225841.png" alt="image-20200620225841078"></p><p>选择开始时下载的Ubuntu所在的位置，镜像ios的下载位置并非最终虚拟机安装位置。</p><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620230209.png" alt="image-20200620230110142"></p><p>这是你Linux开机时的用户名及密码</p><h3 id="虚拟机命名并存储"><a href="#虚拟机命名并存储" class="headerlink" title="虚拟机命名并存储"></a>虚拟机命名并存储</h3><p>不推荐装C盘</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231042.png" alt="image-20200620230653562"></p><h3 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h3><h4 id="推荐-2个核心数"><a href="#推荐-2个核心数" class="headerlink" title="推荐 2个核心数"></a>推荐 2个核心数</h4><p>（按照自己电脑的配置高低，分给虚假机大概1个或2个核心）</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231331.png" alt="image-20200620231331161"></p><h4 id="内存2G"><a href="#内存2G" class="headerlink" title="内存2G"></a>内存2G</h4><p>（2048MB）同样看自己物理机配置高低适当给）</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231534.png" alt="image-20200620231534446"></p><h4 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h4><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231753.png" alt="image-20200620231753511"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231812.png" alt="image-20200620231812705"></p><h4 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h4><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231901.png" alt="image-20200620231839939"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231928.png" alt="image-20200620231928055"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620231943.png" alt="image-20200620231943218"></p><p>20G到50G看情况给</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620232018.png" alt="image-20200620232018883"></p><h4 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h4><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200620232041.png" alt="image-20200620232041792"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文章是对CodeSheep文章的补充，以及我自己按照CodeSheep所写搭建虚拟机过程中踩过的坑，更多的是改进了一些CodeSheep的方法。详细请关注CodeSheep微信公众号。&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="VMware" scheme="http://blog.isk.ink/categories/VMware/"/>
    
    
      <category term="VMware" scheme="http://blog.isk.ink/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>清除office历史版本密钥</title>
    <link href="http://blog.isk.ink/2020/06/12/%E6%B8%85%E9%99%A4office%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC%E5%AF%86%E9%92%A5/"/>
    <id>http://blog.isk.ink/2020/06/12/%E6%B8%85%E9%99%A4office%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC%E5%AF%86%E9%92%A5/</id>
    <published>2020-06-12T13:24:55.000Z</published>
    <updated>2020-06-12T14:03:35.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>昨天使用word时，好奇去输入了产品密钥，结果有问题，产品也没激活，导致每次使用Word或者</p><p>Excle时都会弹出激活向导。特别烦，我都把注册表删了，它居然还有。我有家庭版的office，已经激活了。但是上次输入激活密钥的那个版本的激活向导一直都在，输入了正版的密钥也没用。</p><p>采用了网上的大多解决方法，大多采用激活工具。但是我的电脑用不了就很无奈。而且大多激活工具不正规，也不能说没用，反正我的没用。而且百度流传的大多方法早就失效了。不过在我逛了一下午各个论坛后还是找到了一种更简单的方法。不用下载任何软件直接删一些东西就好，原来激活的office不会受影响。</p><h2 id="找到密钥所在位置"><a href="#找到密钥所在位置" class="headerlink" title="找到密钥所在位置"></a>找到密钥所在位置</h2><ol><li><p>开始运行命令提示符。在小娜的搜索框内输入cmd，或者win+R键输入cmd</p></li><li><p>输入cd..两次退到C盘目录下，再输入cd C:\Program Files(X86)\Microsoft Office\Office16 。注意cd 和C:...之间有个空格。每个人装Office的位置可能不一样找到你的安装位置复制粘贴过来就好</p></li><li><p>在输入：cscript OSPP.VBS /dstatus  。<strong>注意空格位置</strong></p></li><li><p>看是否会出现几个类似于KHGM9的密钥。</p></li><li><p>然后输入</p><p> cscript  ospp.vbs /unpkey:KHGM9</p><p>cscript ospp.vbs /unpkey:KHGM9</p><p>cscript ospp.vbs /unpkey:G83KT</p><p>cscript ospp.vbs /unpkey:G83KT</p><p>当然每个人的密钥都不太一样，我也忘了当时我试了几个反正都删了就对了</p></li></ol><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200612215849.png" alt=""></p><p>全删完之后基本问题就解决了。</p><p>最好还是用正版或者淘宝买的盗版。网上免费的密钥简直有毒，也不排除有些真的能用，一旦不能用，那么每次打开Word或其他office软件都会弹出软件激活向导。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;昨天使用word时，好奇去输入了产品密钥，结果有问题，产品也没激活，导致每次使用Word或者&lt;/p&gt;
&lt;p&gt;Excle时都会弹出激活向导。特
      
    
    </summary>
    
    
      <category term="windows" scheme="http://blog.isk.ink/categories/windows/"/>
    
    
      <category term="office" scheme="http://blog.isk.ink/tags/office/"/>
    
  </entry>
  
  <entry>
    <title> Linux常用命令大全</title>
    <link href="http://blog.isk.ink/2020/06/09/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>http://blog.isk.ink/2020/06/09/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</id>
    <published>2020-06-09T03:05:37.000Z</published>
    <updated>2020-06-09T03:16:02.192Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Linux常用命令大全（非常全！！！）</strong></p><p>最近都在和Linux打交道，感觉还不错。我觉得Linux相比windows比较麻烦的就是很多东西都要用命令来控制，当然，这也是很多人喜欢linux的原因，比较短小但却功能强大。我将我了解到的命令列举一下，仅供大家参考：</p><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a><strong>系统信息</strong></h2><p>arch 显示机器的处理器架构<br>uname -m 显示机器的处理器架构<br>uname -r 显示正在使用的内核版本<br>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)<br>hdparm -i /dev/hda 罗列一个磁盘的架构特性<br>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作<br>cat /proc/cpuinfo 显示CPU info的信息<br>cat /proc/interrupts 显示中断<br>cat /proc/meminfo 校验内存使用<br>cat /proc/swaps 显示哪些swap被使用<br>cat /proc/version 显示内核的版本<br>cat /proc/net/dev 显示网络适配器及统计<br>cat /proc/mounts 显示已加载的文件系统<br>lspci -tv 罗列 PCI 设备<br>lsusb -tv 显示 USB 设备<br>date 显示系统日期<br>cal 2007 显示2007年的日历表<br>date 041217002007.00 设置日期和时间 - 月日时分年.秒<br>clock -w 将时间修改保存到 BIOS </p><h2 id="关机-系统的关机、重启以及登出"><a href="#关机-系统的关机、重启以及登出" class="headerlink" title="关机 (系统的关机、重启以及登出 )"></a><strong>关机 (系统的关机、重启以及登出 )</strong></h2><p>shutdown -h now 关闭系统<br>init 0 关闭系统<br>telinit 0 关闭系统<br>shutdown -h hours:minutes &amp; 按预定时间关闭系统<br>shutdown -c 取消按预定时间关闭系统<br>shutdown -r now 重启<br>reboot 重启<br>logout 注销 </p><h2 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a><strong>文件和目录</strong></h2><p>cd /home 进入 ‘/ home’ 目录’<br>cd .. 返回上一级目录<br>cd ../.. 返回上两级目录<br>cd 进入个人的主目录<br>cd ~user1 进入个人的主目录<br>cd - 返回上次所在的目录<br>pwd 显示工作路径<br>ls 查看目录中的文件<br>ls -F 查看目录中的文件<br>ls -l 显示文件和目录的详细资料<br>ls -a 显示隐藏文件<br>ls <em>[0-9]</em> 显示包含数字的文件名和目录名<br>tree 显示文件和目录由根目录开始的树形结构<br>lstree 显示文件和目录由根目录开始的树形结构<br>mkdir dir1 创建一个叫做 ‘dir1’ 的目录’<br>mkdir dir1 dir2 同时创建两个目录<br>mkdir -p /tmp/dir1/dir2 创建一个目录树<br>rm -f file1 删除一个叫做 ‘file1’ 的文件’<br>rmdir dir1 删除一个叫做 ‘dir1’ 的目录’<br>rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容<br>rm -rf dir1 dir2 同时删除两个目录及它们的内容<br>mv dir1 new_dir 重命名/移动 一个目录<br>cp file1 file2 复制一个文件<br>cp dir/* . 复制一个目录下的所有文件到当前工作目录<br>cp -a /tmp/dir1 . 复制一个目录到当前工作目录<br>cp -a dir1 dir2 复制一个目录<br>ln -s file1 lnk1 创建一个指向文件或目录的软链接<br>ln file1 lnk1 创建一个指向文件或目录的物理链接<br>touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)<br>file file1 outputs the mime type of the file as text<br>iconv -l 列出已知的编码<br>iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.<br>find . -maxdepth 1 -name *.jpg -print -exec convert “{}” -resize 80x60 “thumbs/{}” ; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) </p><h2 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a><strong>文件搜索</strong></h2><p>find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录<br>find / -user user1 搜索属于用户 ‘user1’ 的文件和目录<br>find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件<br>find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件<br>find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件<br>find / -name *.rpm -exec chmod 755 ‘{}’ ; 搜索以 ‘.rpm’ 结尾的文件并定义其权限<br>find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备<br>locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令<br>whereis halt 显示一个二进制文件、源码或man的位置<br>which halt 显示一个二进制文件或可执行文件的完整路径 </p><h2 id="挂载一个文件系统"><a href="#挂载一个文件系统" class="headerlink" title="挂载一个文件系统"></a><strong>挂载一个文件系统</strong></h2><p>mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在<br>umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出<br>fuser -km /mnt/hda2 当设备繁忙时强制卸载<br>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用<br>mount /dev/fd0 /mnt/floppy 挂载一个软盘<br>mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom<br>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom<br>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件<br>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统<br>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享 </p><h2 id="磁盘空间"><a href="#磁盘空间" class="headerlink" title="磁盘空间"></a><strong>磁盘空间</strong></h2><p>df -h 显示已经挂载的分区列表<br>ls -lSr |more 以尺寸大小排列文件和目录<br>du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’<br>du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小<br>rpm -q -a –qf ‘%10{SIZE}t%{NAME}n’ | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)<br>dpkg-query -W -f=’${Installed-Size;10}t${Package}n’ | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统) </p><h2 id="用户和群组"><a href="#用户和群组" class="headerlink" title="用户和群组"></a><strong>用户和群组</strong></h2><p>groupadd group_name 创建一个新用户组<br>groupdel group_name 删除一个用户组<br>groupmod -n new_group_name old_group_name 重命名一个用户组<br>useradd -c “Name Surname “ -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户<br>useradd user1 创建一个新用户<br>userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录)<br>usermod -c “User FTP” -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性<br>passwd 修改口令<br>passwd user1 修改一个用户的口令 (只允许root执行)<br>chage -E 2005-12-31 user1 设置用户口令的失效期限<br>pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户<br>grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组<br>newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 </p><h2 id="文件的权限-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的权限-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a><strong>文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</strong></h2><p>ls -lh 显示权限<br>ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示<br>chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限<br>chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限<br>chown user1 file1 改变一个文件的所有人属性<br>chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性<br>chgrp group1 file1 改变文件的群组<br>chown user1:group1 file1 改变一个文件的所有人和群组属性<br>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件<br>chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限<br>chmod u-s /bin/file1 禁用一个二进制文件的 SUID位<br>chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的<br>chmod g-s /home/public 禁用一个目录的 SGID 位<br>chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件<br>chmod o-t /home/public 禁用一个目录的 STIKY 位 </p><h2 id="文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消"><a href="#文件的特殊属性-使用-“-”-设置权限，使用-“-“-用于取消" class="headerlink" title="文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消"></a><strong>文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消</strong></h2><p>chattr +a file1 只允许以追加方式读写文件<br>chattr +c file1 允许这个文件能被内核自动压缩/解压<br>chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件<br>chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接<br>chattr +s file1 允许一个文件被安全地删除<br>chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘<br>chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件<br>lsattr 显示特殊的属性 </p><h2 id="打包和压缩文件"><a href="#打包和压缩文件" class="headerlink" title="打包和压缩文件"></a><strong>打包和压缩文件</strong></h2><p>bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件<br>bzip2 file1 压缩一个叫做 ‘file1’ 的文件<br>gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件<br>gzip file1 压缩一个叫做 ‘file1’的文件<br>gzip -9 file1 最大程度压缩<br>rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包<br>rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’<br>unrar x file1.rar 解压rar包<br>tar -cvf archive.tar file1 创建一个非压缩的 tarball<br>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件<br>tar -tf archive.tar 显示一个包中的内容<br>tar -xvf archive.tar 释放一个包<br>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下<br>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包<br>tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包<br>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包<br>tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包<br>zip file1.zip file1 创建一个zip格式的压缩包<br>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包<br>unzip file1.zip 解压一个zip格式压缩包 </p><h2 id="RPM-包-（Fedora-Redhat及类似系统）"><a href="#RPM-包-（Fedora-Redhat及类似系统）" class="headerlink" title="RPM 包 - （Fedora, Redhat及类似系统）"></a><strong>RPM 包 - （Fedora, Redhat及类似系统）</strong></h2><p>rpm -ivh package.rpm 安装一个rpm包<br>rpm -ivh –nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告<br>rpm -U package.rpm 更新一个rpm包但不改变其配置文件<br>rpm -F package.rpm 更新一个确定已经安装的rpm包<br>rpm -e package_name.rpm 删除一个rpm包<br>rpm -qa 显示系统中所有已经安装的rpm包<br>rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包<br>rpm -qi package_name 获取一个已安装包的特殊信息<br>rpm -qg “System Environment/Daemons” 显示一个组件的rpm包<br>rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表<br>rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表<br>rpm -q package_name –whatrequires 显示与一个rpm包存在依赖关系的列表<br>rpm -q package_name –whatprovides 显示一个rpm包所占的体积<br>rpm -q package_name –scripts 显示在安装/删除期间所执行的脚本l<br>rpm -q package_name –changelog 显示一个rpm包的修改历史<br>rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供<br>rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表<br>rpm –import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书<br>rpm –checksig package.rpm 确认一个rpm包的完整性<br>rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性<br>rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间<br>rpm -Va 检查系统中所有已安装的rpm包- 小心使用<br>rpm -Vp package.rpm 确认一个rpm包还未安装<br>rpm2cpio package.rpm | cpio –extract –make-directories <em>bin</em> 从一个rpm包运行可执行文件<br>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm 从一个rpm源码安装一个构建好的包<br>rpmbuild –rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 </p><h2 id="YUM-软件包升级器-（Fedora-RedHat及类似系统）"><a href="#YUM-软件包升级器-（Fedora-RedHat及类似系统）" class="headerlink" title="YUM 软件包升级器 - （Fedora, RedHat及类似系统）"></a><strong>YUM 软件包升级器 - （Fedora, RedHat及类似系统）</strong></h2><p>yum install package_name 下载并安装一个rpm包<br>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>yum update package_name.rpm 更新当前系统中所有安装的rpm包<br>yum update package_name 更新一个rpm包<br>yum remove package_name 删除一个rpm包<br>yum list 列出当前系统中安装的所有包<br>yum search package_name 在rpm仓库中搜寻软件包<br>yum clean packages 清理rpm缓存删除下载的包<br>yum clean headers 删除所有头文件<br>yum clean all 删除所有缓存的包和头文件 </p><h2 id="DEB-包-Debian-Ubuntu-以及类似系统"><a href="#DEB-包-Debian-Ubuntu-以及类似系统" class="headerlink" title="DEB 包 (Debian, Ubuntu 以及类似系统)"></a><strong>DEB 包 (Debian, Ubuntu 以及类似系统)</strong></h2><p>dpkg -i package.deb 安装/更新一个 deb 包<br>dpkg -r package_name 从系统删除一个 deb 包<br>dpkg -l 显示系统中所有已经安装的 deb 包<br>dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包<br>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息<br>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表<br>dpkg –contents package.deb 显示尚未安装的一个包所提供的文件列表<br>dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 </p><h2 id="APT-软件工具-Debian-Ubuntu-以及类似系统"><a href="#APT-软件工具-Debian-Ubuntu-以及类似系统" class="headerlink" title="APT 软件工具 (Debian, Ubuntu 以及类似系统)"></a><strong>APT 软件工具 (Debian, Ubuntu 以及类似系统)</strong></h2><p>apt-get install package_name 安装/更新一个 deb 包<br>apt-cdrom install package_name 从光盘安装/更新一个 deb 包<br>apt-get update 升级列表中的软件包<br>apt-get upgrade 升级所有已安装的软件<br>apt-get remove package_name 从系统删除一个deb包<br>apt-get check 确认依赖的软件仓库正确<br>apt-get clean 从下载的软件包中清理缓存<br>apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 </p><h2 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a><strong>查看文件内容</strong></h2><p>cat file1 从第一个字节开始正向查看文件的内容<br>tac file1 从最后一行开始反向查看一个文件的内容<br>more file1 查看一个长文件的内容<br>less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作<br>head -2 file1 查看一个文件的前两行<br>tail -2 file1 查看一个文件的最后两行<br>tail -f /var/log/messages 实时查看被添加到一个文件中的内容 </p><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a><strong>文本处理</strong></h2><p>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中<br>cat file1 | command( sed, grep, awk, grep, etc…) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中<br>grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug”<br>grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇<br>grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行<br>grep Aug -R /var/log/* 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug”<br>sed ‘s/stringa1/stringa2/g’ example.txt 将example.txt文件中的 “string1” 替换成 “string2”<br>sed ‘/^$/d’ example.txt 从example.txt文件中删除所有空白行<br>sed ‘/ <em>#/d; /^$/d’ example.txt 从example.txt文件中删除所有注释和空白行<br>echo ‘esempio’ | tr ‘[:lower:]’ ‘[:upper:]’ 合并上下单元格内容<br>sed -e ‘1d’ result.txt 从文件example.txt 中排除第一行<br>sed -n ‘/stringa1/p’ 查看只包含词汇 “string1”的行<br>sed -e ‘s/ *$//‘ example.txt 删除每一行最后的空白字符<br>sed -e ‘s/stringa1//g’ example.txt 从文档中只删除词汇 “string1” 并保留剩余全部<br>sed -n ‘1,5p;5q’ example.txt 查看从第一行到第5行内容<br>sed -n ‘5p;5q’ example.txt 查看第5行<br>sed -e ‘s/00</em>/0/g’ example.txt 用单个零替换多个零<br>cat -n file1 标示文件的行数<br>cat example.txt | awk ‘NR%2==1’ 删除example.txt文件中的所有偶数行<br>echo a b c | awk ‘{print $1}’ 查看一行第一栏<br>echo a b c | awk ‘{print $1,$3}’ 查看一行的第一和第三栏<br>paste file1 file2 合并两个文件或两栏的内容<br>paste -d ‘+’ file1 file2 合并两个文件或两栏的内容，中间用”+”区分<br>sort file1 file2 排序两个文件的内容<br>sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份)<br>sort file1 file2 | uniq -u 删除交集，留下其他的行<br>sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件)<br>comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容<br>comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容<br>comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 </p><h2 id="字符设置和文件格式转换"><a href="#字符设置和文件格式转换" class="headerlink" title="字符设置和文件格式转换"></a><strong>字符设置和文件格式转换</strong></h2><p>dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX<br>unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS<br>recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html<br>recode -l | more 显示所有允许的转换格式 </p><h2 id="文件系统分析"><a href="#文件系统分析" class="headerlink" title="文件系统分析"></a><strong>文件系统分析</strong></h2><p>badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块<br>fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性<br>fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性<br>fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性<br>dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 </p><h2 id="初始化一个文件系统"><a href="#初始化一个文件系统" class="headerlink" title="初始化一个文件系统"></a><strong>初始化一个文件系统</strong></h2><p>mkfs /dev/hda1 在hda1分区创建一个文件系统<br>mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统<br>mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统<br>mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统<br>fdformat -n /dev/fd0 格式化一个软盘<br>mkswap /dev/hda3 创建一个swap文件系统 </p><h2 id="SWAP文件系统"><a href="#SWAP文件系统" class="headerlink" title="SWAP文件系统"></a><strong>SWAP文件系统</strong></h2><p>mkswap /dev/hda3 创建一个swap文件系统<br>swapon /dev/hda3 启用一个新的swap文件系统<br>swapon /dev/hda2 /dev/hdb3 启用两个swap分区 </p><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a><strong>备份</strong></h2><p>dump -0aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的完整备份<br>dump -1aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的交互式备份<br>restore -if /tmp/home0.bak 还原一个交互式备份<br>rsync -rogpav –delete /home /tmp 同步两边的目录<br>rsync -rogpav -e ssh –delete /home ip_address:/tmp 通过SSH通道rsync<br>rsync -az -e ssh –delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录<br>rsync -az -e ssh –delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录<br>dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr ‘dd of=hda.gz’ 通过ssh在远程主机上执行一次备份本地磁盘的操作<br>dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件<br>tar -Puf backup.tar /home/user 执行一次对 ‘/home/user’ 目录的交互式备份操作<br>( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr ‘cd /home/share/ &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个目录内容<br>( tar c /home ) | ssh -C user@ip_addr ‘cd /home/backup-home &amp;&amp; tar x -p’ 通过ssh在远程目录中复制一个本地目录<br>tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接<br>find /home/user1 -name ‘<em>.txt’ | xargs cp -av –target-directory=/home/backup/ –parents 从一个目录查找并复制所有以 ‘.txt’ 结尾的文件到另一个目录<br>find /var/log -name ‘</em>.log’ | tar cv –files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 ‘.log’ 结尾的文件并做成一个bzip包<br>dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作<br>dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容 </p><h2 id="光盘"><a href="#光盘" class="headerlink" title="光盘"></a><strong>光盘</strong></h2><p>cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容<br>mkisofs /dev/cdrom &gt; cd.iso 在磁盘上创建一个光盘的iso镜像文件<br>mkisofs /dev/cdrom | gzip &gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘iso镜像文件<br>mkisofs -J -allow-leading-dots -R -V “Label CD” -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件<br>cdrecord -v dev=/dev/cdrom cd.iso 刻录一个ISO镜像文件<br>gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件<br>mount -o loop cd.iso /mnt/iso 挂载一个ISO镜像文件<br>cd-paranoia -B 从一个CD光盘转录音轨到 wav 文件中<br>cd-paranoia – “-3” 从一个CD光盘转录音轨到 wav 文件中（参数-3）<br>cdrecord –scanbus 扫描总线以识别scsi通道<br>dd if=/dev/hdc | md5sum 校验一个设备的md5sum编码，例如一张 CD </p><h2 id="网络-（以太网和WIFI无线）"><a href="#网络-（以太网和WIFI无线）" class="headerlink" title="网络 - （以太网和WIFI无线）"></a><strong>网络 - （以太网和WIFI无线</strong>）</h2><p>ifconfig eth0 显示一个以太网卡的配置<br>ifup eth0 启用一个 ‘eth0’ 网络设备<br>ifdown eth0 禁用一个 ‘eth0’ 网络设备<br>ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制IP地址<br>ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing)<br>dhclient eth0 以dhcp模式启用 ‘eth0’<br>route -n show routing table<br>route add -net 0/0 gw IP_Gateway configura default gateway<br>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network ‘192.168.0.0/16’<br>route del 0/0 gw IP_gateway remove static route<br>echo “1” &gt; /proc/sys/net/ipv4/ip_forward activate ip routing<br>hostname show hostname of system<br>host <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>nslookup <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>ip link show show link status of all interfaces<br>mii-tool eth0 show link status of ‘eth0’<br>ethtool eth0 show statistics of network card ‘eth0’<br>netstat -tup show all active network connections and their PID<br>netstat -tupl show all network services listening on the system and their PID<br>tcpdump tcp port 80 show all HTTP traffic<br>iwlist scan show wireless networks<br>iwconfig eth1 show configuration of a wireless network card<br>hostname show hostname<br>host <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>nslookup <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup hostname to resolve name to ip address and viceversa<br>whois <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> lookup on Whois database </p><h2 id="JPS工具"><a href="#JPS工具" class="headerlink" title="JPS工具"></a><strong>JPS工具</strong></h2><p>jps(Java Virtual Machine Process Status Tool)是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。</p><p>  我想很多人都是用过unix系统里的ps命令，这个命令主要是用来显示当前系统的进程情况，有哪些进程，及其 id。 jps 也是一样，它的作用是显示当前系统的java进程情况，及其id号。我们可以通过它来查看我们到底启动了几个java进程（因为每一个java程序都会独占一个java虚拟机实例），和他们的进程号（为下面几个程序做准备），并可通过opt来查看这些进程的详细启动参数。</p><p>   <strong>使用方法：在当前命令行下打 jps(需要JAVA_HOME，没有的话，到改程序的目录下打) 。</strong></p><p><strong>jps存放在JAVA_HOME/bin/jps，使用时为了方便请将JAVA_HOME/bin/加入到Path.</strong></p><p>$&gt; <strong>jps</strong><br>23991 Jps<br>23789 BossMain<br>23651 Resin</p><p>比较常用的参数：</p><p><strong>-q 只显示pid，不显示class名称,jar文件名和传递给main 方法的参数</strong><br>$&gt; <strong>jps -q</strong><br>28680<br>23789<br>23651</p><p><strong>-m 输出传递给main 方法的参数，在嵌入式jvm上可能是null</strong></p><p>$&gt; <strong>jps -m</strong><br>28715 Jps -m<br>23789 BossMain<br>23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log</p><p><strong>-l 输出应用程序main class的完整package名 或者 应用程序的jar文件完整路径名</strong></p><p>$&gt; <strong>jps -l</strong><br>28729 sun.tools.jps.Jps<br>23789 com.asiainfo.aimc.bossbi.BossMain<br>23651 com.caucho.server.resin.Resin</p><p><strong>-v 输出传递给JVM的参数</strong></p><p>$&gt; <strong>jps -v</strong><br>23789 BossMain<br>28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd</p><p>k15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m<br>23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl -</p><p>Djavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl</p><p><strong>sudo jps看到的进程数量最全</strong></p><p><strong>jps 192.168.0.77</strong></p><p><strong>列出远程服务器192.168.0.77机器所有的jvm实例，采用rmi协议，默认连接端口为1099</strong></p><p><strong>（前提是远程服务器提供jstatd服务）</strong></p><p><strong>注：jps命令有个地方很不好，似乎只能显示当前用户的java进程，要显示其他用户的还是只能用unix/linux的ps命令。</strong></p><p>详细情况请参考sun官方文档。<br><a href="http://java.sun.com/j2se/1.5.0/docs/tooldocs/share/jps.html" target="_blank" rel="noopener">http://java.sun.com/j2se/1.7.0/docs/tooldocs/share/jps.html</a></p><p>转自：<a href="https://www.cnblogs.com/yjd_hycf_space/p/7730690.html" target="_blank" rel="noopener">https://www.cnblogs.com/yjd_hycf_space/p/7730690.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Linux常用命令大全（非常全！！！）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近都在和Linux打交道，感觉还不错。我觉得Linux相比windows比较麻烦的就是很多东西都要用命令来控制，当然，这也是很多人喜欢linux的原因，比较短小但却功能强大。我将我了解
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.isk.ink/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.isk.ink/tags/Linux/"/>
    
      <category term="命令" scheme="http://blog.isk.ink/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Linux系统C环境编程</title>
    <link href="http://blog.isk.ink/2020/05/31/%E3%80%90Linux%E3%80%91Linux%E7%B3%BB%E7%BB%9FC%E7%8E%AF%E5%A2%83%E7%BC%96%E7%A8%8B/"/>
    <id>http://blog.isk.ink/2020/05/31/%E3%80%90Linux%E3%80%91Linux%E7%B3%BB%E7%BB%9FC%E7%8E%AF%E5%A2%83%E7%BC%96%E7%A8%8B/</id>
    <published>2020-05-31T03:09:59.000Z</published>
    <updated>2020-09-21T13:32:33.666Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h1><p> clear                     清洁屏幕<br>cd ~                       进入家目录<br>pwd                        查看当前位置<br>ls -l                        查看目录下文件和权限<br>touch 文件名        创建文件<br>rm 文件名             删除文件<br>mkdir 文件夹名    创建文件夹<br>vim 文件名 </p><h2 id="Vim命令"><a href="#Vim命令" class="headerlink" title="Vim命令"></a>Vim命令</h2><p>i                                进入插入模式</p><p>ESC                          退出插入模式</p><p>:w                             保存<br>:q                              退出vim编辑<br>Shift+i                       到行首插入<br>Shift+a                     到行尾插入<br>o                               到下一行插入<br>Shift +o                    到当前行上一行插入<br>x                                删除<br>dd                             删除行<br>:sp  文件名                          打开多个文件<br>Ctrl+w+下箭头       打开多文件后跳转下面的代码<br>:set nu                    打开行号<br>9  dd                       下九行就被放入剪切板<br>p                              贴入剪切板的内容<br>:wqa                        所有文件都保存和退出</p><h2 id="多个源文件分而治之"><a href="#多个源文件分而治之" class="headerlink" title="多个源文件分而治之"></a>多个源文件分而治之</h2><p>:sp 文件名      创建并打开文件</p><p>Ctrl+w+箭头    打开多个文件后跳转下面的代码</p><p>:set nu             打开行号</p><p>9 dd                    光标下九行剪切</p><p>p                           贴入剪切板的内容</p><p>:wqa                     所有文件都保存和退出</p><p>./a.out                运行a.out 可执行的文件</p><p>gcc a.c                    使用gcc 编译器生成a.c可执行文件</p><p>gcc   a.c b.c  -o  mian.out             使用GCC编译器运行两个文件生成main.out可执行文件</p><p>./ main.out             运行main.out可执行文件  </p><p>特殊可以在a.c的头文件下用   #Include“b.c”拼两个文件  例如gcc b.c    把a.c 和b.c 合并生成可执行文件</p><p>运行可执行文件能得到两个文件拼起来的效果</p><h2 id="头文件与函数定义分离"><a href="#头文件与函数定义分离" class="headerlink" title="头文件与函数定义分离"></a>头文件与函数定义分离</h2><p>gcc -c max.c - o max.o            编译max.c 保存在max.o 里(max.o为机器能读懂的语言，运行时省时间，节省CPU性能)</p><p>cp     max.c     min.c                    拷贝文件max.c,拷贝后的文件名为min.c</p><p>cat 文件名                                    查看源文件代码</p><p>vim max.h                                 写入int main （int a, int b);在b.c中可以直接调用#include” max.h“</p><p><u>.h文件作用，，，？</u><em>实际上很多函数及结构体的定义是完全可以放在.c里面的，只不过当项目文件多的时候会不利于阅读和理解之前的代码，所以分开放，把一些定义之类的放到.h文件中,可以类比于stdio.h</em></p><h1 id="makFile的编写"><a href="#makFile的编写" class="headerlink" title="makFile的编写"></a>makFile的编写</h1><p>用于较多文件时，整理编译 </p><p>rm *.o             删除所有的文件名.o的文件（慎用，上次手滑输入成了rm *.c写的代码都没了）</p><p>vi Makefile       创建Makefile文件 （M大写）</p><p>在Makefile中  以#开头为注释，会被忽略。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200531191703.png" alt="image-20200531191657295"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200531191751.png" alt="image-20200531191751688"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200531191827.png" alt="image-20200531191827905"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200531191855.png" alt="image-20200531191855012"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200531191922.png" alt="image-20200531191921944"></p><h2 id="main函数中的return"><a href="#main函数中的return" class="headerlink" title="main函数中的return"></a>main函数中的return</h2><p>gcc main.c -o main.out &amp;&amp; ./main.out   直接编译运行，&amp;&amp;前的执行成功后执行后面的命令</p><p>执行完后 输入 echo $?   如果输出0，则说明程序正常执行</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200601003023.png" alt="image-20200601003017302"></p><h2 id="标准输入流输出流以及错误流"><a href="#标准输入流输出流以及错误流" class="headerlink" title="标准输入流输出流以及错误流"></a>标准输入流输出流以及错误流</h2><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200601201225.png" alt="image-20200601201219301"></p><p>./a.out  &gt;&gt; a.txt       将用户的操作记录在a.txt里，追加</p><p>./a.out   &gt;  a.txt        将用户的操作记录在a.txt里 ，替换</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200601224136.png" alt="image-20200601221054150"></p><p>./a.out   &lt; input.txt 输入用户的操作</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux-命令&quot;&gt;&lt;a href=&quot;#Linux-命令&quot; class=&quot;headerlink&quot; title=&quot;Linux 命令&quot;&gt;&lt;/a&gt;Linux 命令&lt;/h1&gt;&lt;p&gt; clear                     清洁屏幕&lt;br&gt;cd ~       
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.isk.ink/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.isk.ink/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【C】C/C++复习</title>
    <link href="http://blog.isk.ink/2020/05/28/%E3%80%90C++%E3%80%91C++%E5%A4%8D%E4%B9%A0/"/>
    <id>http://blog.isk.ink/2020/05/28/%E3%80%90C++%E3%80%91C++%E5%A4%8D%E4%B9%A0/</id>
    <published>2020-05-28T10:41:25.000Z</published>
    <updated>2020-09-21T13:34:32.306Z</updated>
    
    <content type="html"><![CDATA[<p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528184647.jpg" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528185049.jpg" alt="img"></p><p>如果要输出多个变量的并指定变量的位置时候，格式符还可以连用，变量之间需要用逗号隔开，如：</p><p>​       <img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528185136.jpg" alt="img"></p><ul><li><p>整型常量：13、0、-13；</p></li><li><p>实型常量：13.33、-24.4；</p></li><li><p>字符常量：‘a’、‘M’</p></li><li><p>字符串常量：”I love imooc!”</p></li><li><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528185502.jpg" alt="img"></p><p>在使用强制转换时应注意以下问题：</p><p>1、<strong>数据类型和表达式都必须加括号</strong>，如把(int)(x/2+y)写成(int)x/2+y则成了把x转换成int型之后再除2再与y相加了。</p><p>2、转换后不会改变原数据的类型及变量值，只在本次运算中<strong>临时性转换</strong>。</p><p>3、强制转换后的运算结果<strong>不遵循四舍五入原则</strong>。</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528191727.jpg" alt="img"></p><p>运行结果</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528191739.jpg" alt="img"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528192636.jpg" alt="img"></p><p>C语言中的三目运算符：“?:”，其格式为：</p><p> <strong>表达式1 ? 表达式2 : 表达式3;</strong> </p><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200605101539.png" alt="image-20200605095528458"></p></li></ul><h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>C++定义常量的两种方式</p><p>1.#define 宏常量： #define 常量名  常量值</p><p>​              通常在文件上方定义，表示一个常量</p><p>2.const修饰的变量 const  数据类型 常量名 =常量值</p><p>​             通常在变量定义前加关键字const，修饰该变量为常量，不可修改。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">define</span> day 7   <span class="comment">//宏常量不可以修改</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line">cout &lt;&lt; "一周里共有："&lt;&lt; day &lt;&lt;"天" &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//const 修饰变量</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mouth = <span class="number">12</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"一年里共有："</span> &lt;&lt;mouth &lt;&lt; <span class="string">"个月份"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h2 id="sizeof关键字"><a href="#sizeof关键字" class="headerlink" title="sizeof关键字"></a>sizeof关键字</h2><p>作用  ：利用sizeof关键字可以<strong>统计数据类型所占内存大小</strong></p><p>short（2）&lt; int(4)  &lt;= long(4)  &lt;=  long long (8)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">short numl =<span class="number">10</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"short 占用内存空间为："</span> &lt;&lt; <span class="keyword">sizeof</span>(short) &lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200731192203.png" alt="image-20200731192156290"></p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>作用 ：用于表示一串字符</p><p>两种风格</p><ol><li><p>C风格字符串：char 变量名[] =” 字符串值“</p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">char</span> strl[] = <span class="string">"hellow world"</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; strl &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">  system(<span class="string">"pause"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">注意：C风格的字符串要用双引号括起来</span><br><span class="line">   </span><br><span class="line"><span class="number">2.</span> C++风格字符串：<span class="built_in">string</span> 变量名 =”字符串值“</span><br><span class="line">   </span><br><span class="line">      示例：(必须包含头文件)</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">    <span class="built_in">string</span> str2 = <span class="string">"hellow world"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">##  布尔类型<span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">作用：布尔数据类型代表真或假的值</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span>类型只有两个值：</span><br><span class="line"></span><br><span class="line">ture-----真（本质是<span class="number">1</span>）</span><br><span class="line"></span><br><span class="line"><span class="literal">false</span>----假（本质是<span class="number">0</span>）</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span>类型占一个字节大小</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line">```  </span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">bool</span> flag =<span class="literal">true</span>;</span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line"> flag =<span class="literal">false</span>;</span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt;<span class="string">"size of bool ="</span> &lt;&lt; <span class="keyword">sizeof</span>(<span class="keyword">bool</span>)  &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line"> system(<span class="string">"pause"</span>);</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><h3 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//1.整型</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;<span class="string">"请给整型变量a赋值："</span>  &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a;         <span class="comment">//cin &gt;&gt; a; 等同于 scanf("%d", &amp;a);</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"整型变量a="</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.浮点型</span></span><br><span class="line">    <span class="keyword">float</span> f =<span class="number">3.14f</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"请给浮点型变量f赋值："</span>  &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; f ;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"浮点型变量f="</span> &lt;&lt; f &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//3.字符型</span></span><br><span class="line">    <span class="keyword">char</span> ch = <span class="string">'a'</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"请给字符型变量ch赋值"</span>  &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; ch;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"字符型变量ch = "</span> &lt;&lt; ch &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//4.字符串型        //注意添加#include&lt;string&gt;头文件</span></span><br><span class="line">    <span class="built_in">string</span> str =<span class="string">"hellow"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"请给字符串 str 赋值"</span>  &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"字符串str = "</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//5.布尔类型 </span></span><br><span class="line">    <span class="keyword">bool</span> flag = flase;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;<span class="string">"请给布尔类型flag赋值："</span> &lt;&lt; flag &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"布尔类型 flag = "</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><h3 id="循环结构案例-—猜数字"><a href="#循环结构案例-—猜数字" class="headerlink" title="循环结构案例 —猜数字"></a>循环结构案例 —猜数字</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="comment">//time系统时间头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;     <span class="comment">//添加随机数种子，作用利用当前系统时间生成随机数，防止每次随机数都一样</span></span><br><span class="line">      srand((<span class="keyword">unsigned</span> <span class="keyword">int</span> )time (<span class="literal">NULL</span>));</span><br><span class="line">      <span class="comment">//1.系统生成随机数</span></span><br><span class="line">      <span class="comment">//rand()%100      生成0~99的随机数</span></span><br><span class="line">      <span class="keyword">int</span> num = rand()%<span class="number">100</span> +<span class="number">1</span>;   <span class="comment">//生成0+1~99+1的随机数</span></span><br><span class="line">   </span><br><span class="line">      <span class="comment">//2.玩家进行猜测</span></span><br><span class="line">      <span class="keyword">int</span> val =<span class="number">0</span>;  <span class="comment">//玩家输入的数据</span></span><br><span class="line">      <span class="comment">//3.判断玩家的猜测</span></span><br><span class="line">      <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">       &#123;</span><br><span class="line">       <span class="built_in">cin</span> &gt;&gt; val;</span><br><span class="line">        <span class="keyword">if</span>(val &gt; num)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">cout</span> &lt;&lt; <span class="string">"猜测过大"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(val &lt; num)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"猜测过小"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"恭喜你猜对了"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">break</span>;  <span class="comment">//break,可以利用该关键字退出游戏</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">       &#125;</span><br><span class="line">      <span class="comment">// 猜对   退出游戏</span></span><br><span class="line">      <span class="comment">// 猜错    提示猜的结果  过大或者过小   重新返回第2步</span></span><br><span class="line">      system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="goto语句"><a href="#goto语句" class="headerlink" title="goto语句"></a>goto语句</h3><p>作用：可以无条件跳转语句</p><p>语法：goto标记；</p><p>解释: 如 果标记的名号称存在，执行标记语句时会跳转到标记的位置。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"1"</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">goto</span> Flag;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"2"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"3"</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">Flag:</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"4"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果： 只输出1 4，跳过2 3，</p><p>注意： goto可以实现回跳，可以先Flag再goto，容易死循环；所以在程序种不建议使用goto，以免程序流程混乱。</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h4><p>一维数组定义的三种方式：</p><p>1.数据类型 数组名【数组长度】；</p><p>2.数据类型 数组名【数组长度】={值1，值2.。。}</p><p>3.数据类型  数组名【】 ={值1，值2。。}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一种方法</span></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">5</span>]</span><br><span class="line">arr[<span class="number">0</span>]=<span class="number">10</span>;</span><br><span class="line">arr[<span class="number">1</span>]=<span class="number">20</span>;</span><br><span class="line">arr[<span class="number">2</span>]=<span class="number">30</span>;</span><br><span class="line">arr[<span class="number">3</span>]=<span class="number">40</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; arr[<span class="number">0</span>] &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line"><span class="comment">//如果初始化数据的时候没有填补完整，会用0来输出；</span></span><br><span class="line"><span class="comment">//int arr[4]=&#123;10,20,30&#125;</span></span><br><span class="line"><span class="keyword">int</span> arr2[<span class="number">5</span>]=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>&#125;;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; arr2[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第三种</span></span><br><span class="line"><span class="keyword">int</span> arr3[]=&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src= &quot;/img/loading.gif&quot; data-src=&quot;https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200528184647.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src
      
    
    </summary>
    
    
      <category term="C语言/C++" scheme="http://blog.isk.ink/categories/C%E8%AF%AD%E8%A8%80-C/"/>
    
    
      <category term="C/C++" scheme="http://blog.isk.ink/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>【效率】搜索引擎的 “语法”</title>
    <link href="http://blog.isk.ink/2020/05/27/%E3%80%90%E6%95%88%E7%8E%87%E3%80%91%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84-%E2%80%9C%E8%AF%AD%E6%B3%95%E2%80%9D/"/>
    <id>http://blog.isk.ink/2020/05/27/%E3%80%90%E6%95%88%E7%8E%87%E3%80%91%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84-%E2%80%9C%E8%AF%AD%E6%B3%95%E2%80%9D/</id>
    <published>2020-05-27T11:18:03.000Z</published>
    <updated>2020-06-09T03:03:56.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="排除关键词"><a href="#排除关键词" class="headerlink" title="排除关键词"></a>排除关键词</h2><p>减号+关键词</p><p>功能是：排除一些不想要的关键词</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200527192322.png" alt="image-20200527192322538"></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200527192346.png" alt="image-20200527192346272"></p><h2 id="精确搜索"><a href="#精确搜索" class="headerlink" title="精确搜索"></a>精确搜索</h2><p>关键词加引号</p><p>功能：只搜索引号里的字（中文引号没用，只有英文引号才行</p><h2 id="指定网站内搜索"><a href="#指定网站内搜索" class="headerlink" title="指定网站内搜索"></a>指定网站内搜索</h2><p>site:域名和关键词之间加一个空格</p><p>功能：在指定网站内搜索（例 所有内容都来源于知乎）</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200527193731.png" alt="image-20200527193731219"></p><h2 id="指定文件格式"><a href="#指定文件格式" class="headerlink" title="指定文件格式"></a>指定文件格式</h2><p>filetype:文件格式+关键词（空格）</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200527195931.png" alt="image-20200527195737188"></p><h2 id="指定标题搜索"><a href="#指定标题搜索" class="headerlink" title="指定标题搜索"></a>指定标题搜索</h2><p>intitle:关键词</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200527200204.png" alt="image-20200527200204341"></p><h2 id="指定范围搜索"><a href="#指定范围搜索" class="headerlink" title="指定范围搜索"></a>指定范围搜索</h2><p>格式类似</p><p>小米 intext:苹果</p><p>或allintext:编译原理 计算机组成原理 数据结构与算法分析</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200527200520.png" alt="image-20200527200503302"></p><p>或 inurl:cnki.net(即搜索来源域名都包括cnki.net)</p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200527200715.png" alt="image-20200527200715426"></p><h2 id="叠加使用"><a href="#叠加使用" class="headerlink" title="叠加使用"></a>叠加使用</h2><p>site:douban.com 亲密关系 intext:罗兰米勒</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;排除关键词&quot;&gt;&lt;a href=&quot;#排除关键词&quot; class=&quot;headerlink&quot; title=&quot;排除关键词&quot;&gt;&lt;/a&gt;排除关键词&lt;/h2&gt;&lt;p&gt;减号+关键词&lt;/p&gt;
&lt;p&gt;功能是：排除一些不想要的关键词&lt;/p&gt;
&lt;p&gt;&lt;img src= &quot;/img/loadi
      
    
    </summary>
    
    
      <category term="Google" scheme="http://blog.isk.ink/categories/Google/"/>
    
    
      <category term="效率" scheme="http://blog.isk.ink/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>【数据结构】</title>
    <link href="http://blog.isk.ink/2020/05/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://blog.isk.ink/2020/05/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2020-05-23T02:50:46.000Z</published>
    <updated>2020-09-21T13:34:54.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h1><p>InitList(&amp;L):初始化表。构造一个空的线性表。</p><p> DestroyList(&amp;L):销毁线性表，并释放线性表L所占用的内存空间。</p><p> LocateElem(L,e):按值查找操作。在表中L查找具有给定关键字值得元素。</p><p>GetElem(L,i):按位查找操作。在表中L中第i个位置的元素的值。</p><p>Listlnsert(&amp;L,I,e):插入操作。删除表L中的第i个位置的元素，并用e返回删除元素的值。</p><p>PrintList(L):输出操作。按前后顺序输出线性表L的所有元素值。</p><p>Empty(L):判断操作。按前后顺序输出线性表L的所有元素值。</p><p>Empty(L):判空操作。若L为空表，则返回TRUE，否则返回FALSE.</p><p>Length(L):求表长。返回线性表L的长度，即L中数据元素的个数。</p><h1 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h1><p>数组静态分配                                  <code>#define  MaxSize=50</code></p><p>​                                                              <code>typedef struct{</code></p><p>​                                                                    <code>ElemType data[MaxSize];</code></p><p>​                                                                <code>int length;</code></p><p>​                                                                         <code>}SqList;</code></p><p>数组动态分配                             <code>#define  MaxSize=50</code></p><p>​                                                              <code>typedef struct{</code></p><p>​                                                                    <code>ElemType *data;</code></p><p>​                                                                <code>int length;</code></p><p>​                                                                         <code>}SqList;</code></p><p>动态分配语句</p><p>​     C                            <code>L.data = (Elemtype*)malloc(sizeof(ElemType)**InitSize);</code></p><p>​     C++                        <code>L.data = new ElemType[initSize];</code></p><h2 id="顺序表上基本操作的实现"><a href="#顺序表上基本操作的实现" class="headerlink" title="顺序表上基本操作的实现"></a>顺序表上基本操作的实现</h2><p><u>bool表示插入成功返回ture，插入失败返回false；int i表示插入位置,i表示顺序表的表号而非数组表号；SqList表示引用顺序表L;</u>插入（删除）e  表示ElemType &amp;e</p><h3 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a><strong>插入操作</strong></h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/Yaoguang161/image/image/20200524173827.png" alt="QQ图片20200524170924"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> i,ElemType &amp;e)</span></span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (i&lt;||i&gt;L.length+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     <span class="keyword">if</span> (L.length&gt;=MaxSize)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> j=L.length;j&gt;=i;j--)</span><br><span class="line">        L.date[j]=L.data[j<span class="number">-1</span>];</span><br><span class="line">    L.data[i<span class="number">-1</span>]=e;</span><br><span class="line">    L.length++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListDelete</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> i,ElemType &amp;e)</span></span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (i&lt;||i&gt;L.length)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    e=L.data[i<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;L.length;j++)</span><br><span class="line">       L.data[j<span class="number">-1</span>]=data[j];</span><br><span class="line">       L.length--;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="按值查找"><a href="#按值查找" class="headerlink" title="按值查找"></a>按值查找</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LocateElem</span><span class="params">(SqList L, ElemTyoe e)</span></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> i;</span><br><span class="line">     <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;L.length ; i++)</span><br><span class="line">         <span class="keyword">if</span> (L.data[i]==e)</span><br><span class="line">            <span class="keyword">return</span>  i+<span class="number">1</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;线性表&quot;&gt;&lt;a href=&quot;#线性表&quot; class=&quot;headerlink&quot; title=&quot;线性表&quot;&gt;&lt;/a&gt;线性表&lt;/h1&gt;&lt;p&gt;InitList(&amp;amp;L):初始化表。构造一个空的线性表。&lt;/p&gt;
&lt;p&gt; DestroyList(&amp;amp;L):销毁线性表
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://blog.isk.ink/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://blog.isk.ink/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
